[{"userId":257,"anchor":"apachedolphinscheduler","slide":"","video":"","img":"dolphin.jpg","title":"Apache DolphinScheduler||Apache DolphinScheduler Community","project_url":"","url":"https://dolphinscheduler.apache.org/zh-cn/index.html","description":"Apache DolphinScheduler 是一款分布式易扩展的可视化 DAG 工作流任务调度系统。","full_des":"Apache DolphinScheduler 是一个分布式去中心化，易扩展的可视化 DAG 工作流任务调度系统。致力于解决数据处理流程中复杂的任务依赖关系，使各种任务类型(Spark /Flink/MR/Shell/Python/SQL等)在工作流编排中开箱即用。","tech_tag":["Java","JavaScript","Distributed System"],"domain_tag":["Big Data","Distributed System","Workflow"],"mail_list":"dev@dolphinscheduler.apache.org","email":"dev@dolphinscheduler.apache.org","project_list":[{"name":"license检测功能","remark":"","difficulty":"中","mentor":"leonbao","contact":"<baoliang.leon@gmail.com>","uniont":null,"student_count":0,"description":"基于现有依赖检测流程，增加license检查功能    a. 在依赖检测脚本中新增检测license版本号是否一致功能","label":"210290124","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Shell"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"工作流级别任务空跑（前端）","remark":null,"difficulty":"中","mentor":"温合民","contact":"<whm_777@163.com>","uniont":null,"student_count":0,"description":"在开发工作流时，对于较为复杂的依赖关系，可以设置工作流为空跑状态，以测试整个工作流执行是否正确。    修改工作流时，页面增加空跑选项；查看工作流时，页面显示空跑选项  查看工作流实例时，页面显示空跑选项  任务列表页面，显示空跑选项","label":"210290125","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"工作流级别任务空跑（后端）","remark":null,"difficulty":"高","mentor":"温合民","contact":"<whm_777@163.com>","uniont":null,"student_count":0,"description":"在开发工作流时，对于较为复杂的依赖关系，可以设置工作流为空跑状态，以测试整个工作流执行是否正确。    查看/修改工作流、查看工作流实例、任务列表接口，增加是否空跑字段  Master节点调用Worker节点时，新增是否空跑字段  Worker节点判断是否空跑标记，空跑则打印日志，直接按成功处理","label":"210290126","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","Workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"用户管理页面资源授权换成穿梭框","remark":null,"difficulty":"低","mentor":"向偲彪","contact":"<xiangcaibiao2008@126.com>","uniont":null,"student_count":0,"description":"用户管理页面资源授权换成穿梭框","label":"210290127","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"shell,py,spark,flink 任务节点form-create插件化","remark":null,"difficulty":"高","mentor":"向偲彪","contact":"<xiangcaibiao2008@126.com>","uniont":null,"student_count":0,"description":"shell,py,spark,flink任务节点form-create插件化","label":"210290128","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"CI/CD 工作流模板","remark":null,"difficulty":"中","mentor":"Kejia Chen","contact":"<kejia.chen@foxmail.com>","uniont":null,"student_count":0,"description":"基于 DS 的现有功能，完成某个软件自动集成和自动部署的工作流模板。","label":"210290129","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System"],"oR":["可实际执行的工作流模板。","编写对应的文档说明。"],"tR":["了解 CI/CD 相关概念","熟悉 shell"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"新增阻断类任务","remark":null,"difficulty":"中","mentor":"Kejia Chen","contact":"<kejia.chen@foxmail.com>","uniont":null,"student_count":0,"description":"新增阻断类任务，当工作流执行到阻断任务时，可根据情况对整个工作流执行状态进行阻断。    如，工作流为 A → B → C，其中 B 为阻断类任务。当工作流执行到 B 时，实现以下几种操作：    执行到 B 时，B 没有实际的任务内容。仅暂停整个工作流，待“人工确认”后，再继续往下执行。  执行到 B 时，B 有任务内容。并根据 B 的执行结果，对任务进行阻断。如 B 失败，则整个工作流暂停执行。","label":"210290130","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","具体方案与社区进行充分沟通"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"API 模块 UT 测试问题解决","remark":null,"difficulty":"高","mentor":"Kejia Chen","contact":"<kejia.chen@foxmail.com>","uniont":null,"student_count":0,"description":"问题：在部分 UT 中使用 powermcok 后，导致 sonar 不能获取对应的测试报告。    对此问题进行排查，并给出解决方案。","label":"210290131","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"HTTP API接口规范化","remark":null,"difficulty":"中","mentor":"gabrywu","contact":"<gabrywu@apache.org>","uniont":null,"student_count":0,"description":"基于RESTful规范，重构当前HTTP API接口，使其易维护、易理解","label":"210290132","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发，完全符合RESTful规范","重构后的API完全兼容原有接口","代码和测试被合并到 Apache 主库"],"tR":["Vue","Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"新增支持GraphQL查询语言的API","remark":null,"difficulty":"高","mentor":"Kai Zhu","contact":"<zhukai@apache.org>","uniont":null,"student_count":0,"description":"集成GraphQL服务端，对外提供基于GraphQL查询语言的API能力","label":"210290134","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"用户授权页面列表项支持筛选","remark":null,"difficulty":"低","mentor":"温合民","contact":"<whm_777@163.com>","uniont":null,"student_count":0,"description":"当前用户授权项目/数据源/UDF函数，列表项目较多时，不方便选择指定项目，增加筛选框，用户输入实时过滤列表项，提高效率","label":"210290135","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"作业定义列表查询","remark":null,"difficulty":"低","mentor":"进勇(JinyLeeChina)","contact":"<jiny.li@foxmail.com>","uniont":null,"student_count":0,"description":"基于当前Json拆分后的任务定义表做个任务定义列表查询页面  1.页面格式可参照工作流定义及任务实例  2.使用Vue实现前端页面  3.使用Java实现模块逻辑","label":"210290136","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue","Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"SQL优化","remark":null,"difficulty":"中","mentor":"Calvin","contact":"<kirs@apache.org>","uniont":null,"student_count":0,"description":"工作流核心表的SQL优化，移除子查询与JOIN，改为单表查询，在业务中做数据归并。","label":"210290137","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"工作流业务接口优化","remark":null,"difficulty":"低","mentor":"Calvin","contact":"<kirs@apache.org>","uniont":null,"student_count":0,"description":"工作流核心业务接口粒度细化，减少无用对象传输，避免暴露过多通用接口，导致业务变化修改成本增大","label":"210290138","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"数据库升级之初始化数据库改造","remark":null,"difficulty":"中","mentor":"Gang Li","contact":"<lgcareer@apache.org>","uniont":null,"student_count":0,"description":"目前执行初始化数据库脚本，会从1.0.0创建，然后在执行升级到目前的版本，改造方案可以有两种，任意选择一种即可。    方案一：现在每个版本都会维护一个全量sql，可以通过这个全量sql去初始化数据库。    方案二：目前在sql/create这里只维护了一个版本，可以增加多个版本，初始化时以距离当前版本最近的镜像版本进行初始化，减少了升级次数，也不用依赖全量sql","label":"210290139","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码和测试被合并到 Apache 主库","通过此次点亮计划学习到开源流程。","以异步沟通方式体会Apache Way。"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"开发文档整理","remark":"","difficulty":"中","mentor":"Lidong Dai","contact":"<dailidong66@gmail.com>","uniont":null,"student_count":0,"description":"基于代码和 PR ，整理新任务节点开发文档。","label":"210290142","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["文档被合并到 Apache 主库"],"tR":["markdown"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"K8s测试并集成至GitHub CI","remark":null,"difficulty":"高","mentor":"程世文","contact":"<chengshiwen@apache.org>","uniont":null,"student_count":0,"description":"目前只具备Docker的集成测试，目标建立K8s测试，检查各配置、部署文件、以及功能的正确性，并集成至GitHub CI","label":"210290213","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["基本了解Docker/K8s"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"Flink SQL支持","remark":null,"difficulty":"中","mentor":"程世文","contact":"<chengshiwen@apache.org>","uniont":null,"student_count":0,"description":"SQL任务支持Flink","label":"210290214","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Vue","Java","Flink"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"Logger Server 合并至 Worker Server","remark":null,"difficulty":"高","mentor":"程世文","contact":"<chengshiwen@apache.org>","uniont":null,"student_count":0,"description":"目前Logger Server单独一个进程，增加部署和维护成本，集成到Worker Server中统一纳管","label":"210290215","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"},{"name":"简化 DS 单机部署","remark":null,"difficulty":"高","mentor":"Lidong Dai","contact":"<dailidong66@gmail.com>","uniont":null,"student_count":0,"description":"进行 DS 单机部署时，除 jdk 外，其他依赖均使用嵌入式组件。","label":"210290273","link":"","tech_tag":["Java","JavaScript","Distributed System","workflow"],"domain_tag":["Big Data","Distributed System","workflow"],"oR":["完成源码开发","代码质量满足项目要求","代码和测试被合并到 Apache 主库"],"tR":["Java"],"orgID":257,"spl":1,"organchor":"apachedolphinscheduler","orgname":"Apache DolphinScheduler||Apache DolphinScheduler Community"}]},{"userId":163,"anchor":"apacheshardingsphere","slide":"","video":"","img":"apacheshardingsphere.jpg","title":"Apache ShardingSphere||Apache ShardingSphere","project_url":"https://cwiki.apache.org/confluence/display/SHARDINGSPHERE/Open+Source+Promotion+Plan+-+Summer+2021","url":"http://shardingsphere.apache.org/index_zh.html","description":"Apache ShardingSphere是一个开源的分布式数据库解决方案组成的生态圈||Apache ShardingSphere is an open-source ecosystem consisting of a set of distributed database solutions.","full_des":"Apache ShardingSphere是一个开源的分布式数据库解决方案组成的生态圈，提供标准化的数据水平扩展、分布式事务和分布式治理等功能。||Apache ShardingSphere is an open-source ecosystem consisting of distributed database solutions, which provide functions of data scale-out, distributed transaction and distributed governance. As a TLP of Apache, its community is active, diverse, open and technique-geeky.","tech_tag":["Java","Database","Docker"],"domain_tag":["Big Data","Distributed System","Programming Language"],"mail_list":"dev@shardingsphere.apache.org","email":"dev@shardingsphere.apache.org","project_list":[{"name":"场景整合测试","remark":"","difficulty":"中","mentor":"潘娟","contact":"<panjuan@apache.org>","uniont":null,"student_count":0,"description":"根据应用场景和SharidngSphere特性平台，增加覆盖多种场景，多样化SQL的整合测试","label":"210090022","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Distributed System"],"oR":["增加分片场景中孤立表的DML/DDL/DAL的SQL整合测试","增加RDL的整合测试","增加DDL/DML+治理功能的整合测试","增加DAL的整合测试","增加权限控制的整合测试","增加对PostgreSQL数据库的Proxy端接入测试"],"tR":["熟悉JAVA编程语言","熟悉脱敏/分片/读写分离场景","熟悉zookeeper","熟悉Junit","熟悉MySQL基本使用","熟悉PostgreSQL基本使用"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"},{"name":"shardingsphere-Agent 新增OpenTelemetry插件","remark":null,"difficulty":"中","mentor":"肖宇","contact":"<xiaoyu@apache.org>","uniont":null,"student_count":0,"description":"根据目前Agent的架构，新增相关的API，SPI接口的实现，将mertics信息与OpenTelemetry进行对接","label":"210090023","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Programming Language"],"oR":["完成OpenTelemetry插件的开发","完成单元测试","新增OpenTelemetry插件的集成测试"],"tR":["熟练使用 Java 编程语言","了解Java SPI机制","了解Java agent机制","了解bytebuddy字节码工具"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"},{"name":"提升SQLServer DCL, TCL, DAL语法兼容度","remark":null,"difficulty":"中","mentor":"董宗磊","contact":"<dongzonglei@apache.org>","uniont":null,"student_count":0,"description":"参考SQLServer数据库的SQL语法，完善Sharding Parser模块有关SQLServer的语法定义","label":"210090024","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Distributed System"],"oR":["符合ShardingSphere SQL语法定义风格","依据SQLServer官网的DCL SQL语法定义，校对Sharding Parser的语法定义","依据SQLServer官网的TCL SQL语法定义，校对Sharding Parser的语法定义","依据SQLServer官网的DAL SQL语法定义，校对Sharding Parser的语法定义"],"tR":["能够使用Java编程语言","熟悉正则表达式","了解Antlr基本运行原理","了解如何编写Antlr的g4语法文件"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"},{"name":"提升SQLServer DDL语法兼容度","remark":null,"difficulty":"中","mentor":"陆敬尚","contact":"<lujingshang@apache.org>","uniont":null,"student_count":0,"description":"参考SQLServer数据库的SQL语法，完善Sharding Parser模块有关SQLServer DDL的语法定义","label":"210090025","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Distributed System"],"oR":["符合ShardingSphere SQL语法定义风格","依据SQLServer官网的SQL语法定义，校对Sharding Parser DDL的语法定义"],"tR":["能够使用Java编程语言","熟悉正则表达式","了解Antlr基本运行原理","了解如何编写Antlr的g4语法文件"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"},{"name":"导出Sharding-Proxy 配置文件","remark":null,"difficulty":"中","mentor":"孟浩然","contact":"<menghaoran@apache.org>","uniont":null,"student_count":0,"description":"分布式治理环境下，实现导出Sharding-Proxy配置文件功能","label":"210090026","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Distributed System"],"oR":["实现项目功能","完成对应代码单测"],"tR":["熟练使用 Java 编程语言","了解Zookeeper的基本使用"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"},{"name":"通过 Github Actions 实现标准流程自动化","remark":null,"difficulty":"中","mentor":"欧阳文","contact":"<ouyangwen@apache.org>","uniont":null,"student_count":0,"description":"通过 Github Actions 实现标准流程自动化","label":"210090027","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data","Distributed System"],"oR":["发布版本时，自动部署文档到 ShardingSphere-doc 仓库","发布版本时，自动发布镜像到 Registry","自动化 issue 标准处理流程"],"tR":["熟悉 Git、Github","熟悉 Github Actions"],"orgID":163,"spl":1,"organchor":"apacheshardingsphere","orgname":"Apache ShardingSphere||Apache ShardingSphere"}]},{"userId":713,"anchor":"chubaofs","slide":"","video":"","img":"chubao.jpg","title":"ChubaoFS||ChubaoFS","project_url":"","url":"https://github.com/chubaofs/chubaofs","description":"云原生分布式存储平台。||ChubaoFS is a cloud-native storage platform that provides both POSIX filesystem and S3 compatible interfaces.","full_des":"解决了大规模容器平台环境统一存储资源，从而大幅度降低企业在线和离线业务的存储使用和管理成本，并支撑业务存储计算分离架构的实现；融合存储接口: S3接口和posix无缝兼容，使得业务更加方便；多租户: 通过技术创新，使得业务逻辑隔离，但是存储资源聚合在一起，更进一步节约资源；弹性可扩展: 实现一键扩容；小文件优化：针对小文件，在capacity和performance方面都有很好的可扩展性；支撑高并发元数据操作：元数据分片策略没有采用很多业界分布式文件系统采用的Locality策略，而是完全分散，最大限度降低了热点问题概率，高并发的元数据操作性能有保障。||ChubaoFS has been commonly used as the underlying storage infrastructure for online applications, database or data processing services and machine learning jobs orchestrated by Kubernetes. An advantage of doing so is to separate storage from compute with the ability of scaling up and down based on workloads, providing total flexibility in matching resources to the actual storage and compute needs at any given time.Some of the key features include: scaled metadata management and performance; friendly to diverse file sizes and read/write patterns; easy to scale up; multi-tenancy; strong replication consistency.","tech_tag":["Distributed System","Storage","云原生分布式存储"],"domain_tag":["Cloud Native","Distributed System","云原生分布式存储"],"mail_list":"chubaofs-users@groups.io","email":"chubaofs-users@groups.io","project_list":[]},{"userId":147,"anchor":"megengine","slide":"","video":"","img":"megengine1.jpg","title":"MegEngine（天元）","orgType":1,"project_url":"https://github.com/MegEngine/Resource/blob/master/2021_Open_Source_Promotion_Plan-Summer_MegEngine.md","url":"https://megengine.org.cn/","description":"适合工业级研发的开源深度学习框架","full_des":"MegEngine 是一个快速、可拓展、易于使用且支持自动求导的开源深度学习框架。拥有三大核心优势：训练推理一体、全平台高效支持、动静结合的训练能力。","tech_tag":["Python","Deep Learning Framework","深度学习，卷积神经网络，视觉算法"],"domain_tag":["AI","机器学习"],"mail_list":"megengine-support@megvii.com","email":"megengine@megvii.com","project_list":[{"name":"添加 RNN/LSTM 系列算子","remark":null,"difficulty":"高","mentor":"陈振寰","contact":"<chenzhenhuan@megvii.com>","uniont":null,"student_count":0,"description":"目前 MegEngine 对于 NLP 相关接口的支持比较少，较为经典的 RNN/LSTM 算子没有提供支持，希望能在 MegEngine 中提供支持","label":"210040013","link":"","tech_tag":["Python","AI","C++","pytorch"],"domain_tag":["AI"],"oR":["在 MegEngine python 接口层面添加 RNN/LSTM 算子","参考内部文档在 c++层面实现 RNN/LSTMCell 算子，改进上层 python 接口，并达到与 pytorch 接近的性能"],"tR":["python、pytorch、C++"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"x86 中添加并优化 local","remark":null,"difficulty":"高","mentor":"陈其友","contact":"<chenqiyou@megvii.com>","uniont":null,"student_count":0,"description":"目前 MegEngine 中 naive 和 CUDA 中支持了 local 和 local share 算子，但是 x86 中并没有支持，因此这些算子在 x86 上运行只能使用 naive 的算子，速度很慢","label":"210040014","link":"","tech_tag":["C++","性能优化"],"domain_tag":["AI"],"oR":["在 x86 backend 下面完成 local 算子填加","算子计算结果和 naive 在所有 case 下结果完全一致","优化算子，使其逼近最佳性能"],"tR":["C++，性能优化"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"x86 中添加并优化 local share 算子","remark":null,"difficulty":"高","mentor":"陈其友","contact":"<chenqiyou@megvii.com>","uniont":null,"student_count":0,"description":"目前 MegEngine 中 naive 和 CUDA 中支持了 local 和 local share 算子，但是 x86 中并没有支持，因此这些算子在 x86 上运行只能使用 naive 的算子，速度很慢","label":"210040015","link":"","tech_tag":["C++","性能优化"],"domain_tag":["AI"],"oR":["在 x86 backend 下面完成 local share 算子填加","算子计算结果和 naive 在所有 case 下结果完全一致","benchmark 并优化算子，使其逼近最佳性能"],"tR":["C++，性能优化"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"web 上运行 mge 模型","remark":null,"difficulty":"高","mentor":"柳俊杰","contact":"<liujunjie@megvii.com>","uniont":null,"student_count":0,"description":"在 web 上跑起来简单的 mge 模型","label":"210040016","link":"","tech_tag":["Python","JavaScript","C++","wasm"],"domain_tag":["AI"],"oR":["在 web 上跑起来线性回归模型/手写字模型，要求提供 mge.js 和可运行的 model","方案：框架部分用 wasm 编译为 mge.js（需要能加载 dump 的 mge 模型，最好不要做模型转换），缺的 kernel 可以参考 xnnpack 用 wasm 进行补充。（webgpu 当前效率不高，webgl 用于计算比较别扭，所以还是选支持 simd 的 wasm）","实现的效果分为7级：  L0：可以加载模型和数据（可以不支持图优化/存储优化等各种优化，可以对现有的框架通过宏进行裁剪，甚至可以重写一个新框架，但必须保证模型的兼容性加载）","L1：dense/matmul（必选）的前向 op 单测通过（要求 nchw 的 layout 下正确性ok）","L2: 跑通线性回归模型前向 - L3: 跑通线性回归模型的后向和训练","L4: 跑通 mnist 模型前向 - L5: 跑通 mnist 后向和训练","L6: mnist 的 demo（参考 https://storage.googleapis.com/tfjs-examples/mnist/dist/index.html）"],"tR":["js/wasm/c++/python"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"dnn backend 加入 apple NPU 的支持","remark":null,"difficulty":"高","mentor":"张浩龙","contact":"<zhanghaolong@megvii.com>","uniont":null,"student_count":0,"description":"在 MACOS 上推理可用 APPLE np","label":"210040017","link":"","tech_tag":["C++","macos"],"domain_tag":["AI"],"oR":["在MACOS上 推理可用APPLE npu，基于 CoreML API","L0: MegEngine 模型转换到 CoreML 可用格式, 能使用 CoreML API 把这个模型跑起来","L1: 参考 MegEngine/src/tensorrt/impl 实现 CoreML 在 MegEngine 下的 runtime opr","L2：最终在支持 CoreML 的平台上跑起来推理 MegEngine 并且利用 CoreML 加速"],"tR":["c++, macos"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"python whl 支持 apple ARM macos","remark":null,"difficulty":"高","mentor":"张浩龙","contact":"<zhanghaolong@megvii.com>","uniont":null,"student_count":0,"description":"在 apple arm macos 上，可用 MegEngine python","label":"210040018","link":"","tech_tag":["C++","macos"],"domain_tag":["AI"],"oR":["在 apple arm macos 上，可用 MegEngine python","L0: 本地编译通过","L1: 包具备分发性，可安装到其他 aarch64+ macbook 上，且能运行","L2: 能在基于 aarch64 + macbook 上训练一个模型"],"tR":["c++, 编译，macos"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"python whl 支持 Android (限定在主流的 ARM)","remark":null,"difficulty":"高","mentor":"张浩龙","contact":"<zhanghaolong@megvii.com>","uniont":null,"student_count":0,"description":"在 Android arm 上，可用 MegEngine python","label":"210040019","link":"","tech_tag":["C++","Android"],"domain_tag":["AI"],"oR":["在 Android aarch64 上(termux 环境)，可用 MegEngine python","L0: NDK-x86 linux cross build aarch64 Android 编译通过","L1: 包具备分发性，可安装到其他 aarch64+ Android 上，且能运行","L2: 能在基于 aarch64 + Android + termux 训练一个小模型"],"tR":["c++, 编译， Android"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"模型转换：ONNX 转 MegEngine","remark":null,"difficulty":"中","mentor":"熊鹏","contact":"<xiongpeng@megvii.com>","uniont":null,"student_count":0,"description":"- 背景：目前官方的 mgeconvert 仓库里面只提供了 MegEngine 模型转到其他框架的功能，反过来不行。  - 目标：完成 ONNX 模型到 MegEngine 的转换。      - 支持选择 ONNX/MegEngine 版本    - 转换并 dump 出 cpp model（可以用 MegEngine op graph 建图并 dump）    - 只支持推理，不支持训练。","label":"210040020","link":"","tech_tag":["Python","ONNX"],"domain_tag":["AI"],"oR":["转换能力需覆盖 model hub 里的模型","方案：完成 ONNX 模型的解析，实现 ONNX 与 MGE 各类算子的转换，根据 ONNX 模型中包含的算子搭建出完整的 MGE 模型","实现效果：转换出来的模型可以完成推理。  - L0：在特定版本上实现模型的转换 - L1：实现不同版本 ONNX 到 MGE 的转换"],"tR":["Python、ONNX"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"},{"name":"一个对用户友好的 web profile 工具","remark":null,"difficulty":"高","mentor":"柳俊杰","contact":"<liujunjie@megvii.com>","uniont":null,"student_count":0,"description":"在 web 上提交 mge 模型，后端执行并反馈 profile 细节","label":"210040021","link":"","tech_tag":["Python","JavaScript","C++","html"],"domain_tag":["AI"],"oR":["一个对用户友好的 web profile 工具","C/S 结构，前端负责收集模型、可视化、打印 profile 结果","后端负责实际跑模型，后端的支持可以覆盖 x86/cuda/arm 等","L0: 前端能提交 mge 模型，打印模型的执行延迟。  后端支持 X86，能接受前端的模型并反馈延迟结果  后端的执行可以包装 load_and_run","L1: 前端支持打印 profile 结果，后端反馈 profile 结果  后端的 profile 可以直接返回 load_and_run 的 profile json 结果，并提供过滤、排序、聚合等操作","L2: 前端支持模型结构预览，并可视化每层的耗时","L3: 扩展后端范围，包括 cuda/arm。方便没有设备的用户能直接得到性能数据"],"tR":["html/js/c++/python"],"orgID":147,"spl":1,"organchor":"megengine","orgname":"MegEngine（天元）"}]},{"userId":209,"orgId":18,"anchor":"rtthread","slide":"","video":"","img":"rtthread.jpg","title":"RT-Thread —— 小而美的物联网操作系统||RT","project_url":"","url":"https://www.rt-thread.org/","description":"RT-Thread 是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统。||RT-Thread is an open-source Internet of Things Operating System built with rich components, ultra low power design, high scalability and security, making IoT development easier to start!","full_des":"RT-Thread 是一个集实时操作系统（RTOS）内核、中间件组件和开发者社区于一体的技术平台，由熊谱翔先生带领并集合开源社区力量开发而成，RT-Thread  也是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统。RT-Thread 具备一个 IoT OS  平台所需的所有关键组件，例如GUI、网络协议栈、安全传输、低功耗组件等等。经过15年的累积发展，RT-Thread  已经拥有一个国内最大的嵌入式开源社区，同时被广泛应用于能源、车载、医疗、消费电子等多个行业，累积装机量超过8亿台，成为国人自主开发、国内最成熟稳定和装机量最大的开源 RTOS。||RT-Thread is a technology platform that combines real-time operating system (RTOS) kernel, middleware components, and brings the technology advocates together. RT-Thread is leading by Bernard Xiong and community powered. RT-Thread Internet of Things Operating System built with rich components, ultra-low power design, high scalability and security, with almost every key basic component required for IoT devices, such as network protocols, file systems, low-power management, and so on.     We’ve been here for more than 15 years, and we’re not doing it alone. RT-Thread grows one of the largest open-source embedded communities in China. RT-Thread has now achieved the installation of over 800 million devices, is widely being applied in Wearable Devices, Smart Home Appliances, Energy, Automotive Electronics, Medical Electronics, Consumer Electronics, and many other industries.     RT-Thread strives to create a New Class of IoT operating system with great hardware and software ecosystem, get everything connected, keep information flowing!","tech_tag":["C","AI","RTOS","Rust","IoT"],"domain_tag":["AI","OS","Programming Language"],"mail_list":"Github Issue https://github.com/RT-Thread/rt-thread/issues","email":"support@rt-thread.com","project_list":[]},{"userId":282,"anchor":"apachepulsar","slide":"","video":"","img":"pulsar.jpg","title":"Apache Pulsar 社区","project_url":"","url":"https://pulsar.apache.org","description":"下一代云原生分布式消息流平台","full_des":"Apache Pulsar 是 Apache 软件基金会顶级项目，是下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。","tech_tag":["Go","Java","Distributed System","Stroage"],"domain_tag":["Cloud Native","Big Data","Distributed System","Streaming"," Storage"],"mail_list":"dev@pulsar.apache.org","email":"community@streamnative.io","project_list":[]},{"userId":396,"anchor":"emacs","slide":"","video":"","img":"emacs.jpg","title":"Emacs China","project_url":"","url":"https://emacs-china.org/","description":"Emacs China是由国内的Emacs爱好者成立的Emacs社区，致力于Emacs相关的技术讨论。","full_des":"Emacs China是由国内的Emacs爱好者成立的Emacs社区，致力于Emacs相关的技术讨论。","tech_tag":["Emacs","Python","Lisp"],"domain_tag":["Emacs"],"mail_list":"无。可以在Emacs China发帖联系","email":"无。可以在Emacs China发帖联系","project_list":[]},{"userId":242,"anchor":"casbin","slide":"","video":"","img":"casbin.jpg","title":"Casbin||Casbin","project_url":"https://github.com/casbin/Summer2021","url":"https://casbin.org/","description":"一个强大的、高效的开源访问控制框架||Authorization library that supports access control models like ACL, RBAC, ABAC","full_des":"Casbin是一个强大的、高效的开源访问控制框架。涉及到Go, Java, Node.js, Javascript (React), Python, PHP, .NET, C++, Rust等多种语言。Casbin由北京大学罗杨博士创立于2017年，核心维护团队有数十人。Casbin在业界具有广泛影响力。目前已经被Intel、VMware、Orange、RedHat、T-Mobile等公司开源使用，被腾讯云、Cisco、Verizon等公司闭源使用。具体详见Casbin主页。Casbin Go主项目目前GitHub 8600+ stars，加上所有语言的实现、插件等可达到10000+ stars。||Casbin is a powerful and efficient open-source access control library. It provides support for enforcing authorization based on various access control models like ACL, RBAC, ABAC for Golang, Java, Node.js, PHP, Python, .NET (C#), Delphi and Rust.What Casbin does:- Enforce the policy in the classic {subject, object, action} form or a customized form as you defined, both allow and deny authorizations are supported.- Handle the storage of the access control model and its policy.- Manage the role-user mappings and role-role mappings (aka role hierarchy in RBAC).- Support built-in superuser like root or administrator. A superuser can do anything without explict permissions.- Multiple built-in operators to support the rule matching. For example, keyMatch can map a resource key /foo/bar to the pattern /foo*.What Casbin does NOT do:- Authentication (aka verify username and password when a user logs in)- Manage the list of users or roles.I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario. For more details, see: https://casbin.org/","tech_tag":["Go","Python","Java","C","Cloud Native","JavaScript","PHP","NodeJS","React","C++","Distributed System","Rust","Kubernetes","TypeScript","Micro Sevice"],"domain_tag":["Cloud Native","Distributed System","Web"],"mail_list":"https://forum.casbin.com/","email":"admin@casbin.org","project_list":[{"name":"Casbin核心引擎（Golang）","remark":null,"difficulty":"高","mentor":"罗杨","contact":"<hsluoyz@gmail.com>","uniont":null,"student_count":0,"description":"Casbin采用独特的PERM模型语法（model）来实现强大、灵活的访问控制。Casbin Golang版本作为Casbin的第一个语言实现，拥有最多的用户以及最先进的feature。我们希望在Casbin Golang上：1）增强Casbin语法的表达能力，满足用户多样化的策略制定需求；2）优化Casbin在大规模规则集上（百万以上）的策略评估性能。这两个目标是Casbin的核心竞争力，对于其他Casbin语言的实现也会起到非常重要的借鉴意义。","label":"210210374","link":"","tech_tag":["Go"],"domain_tag":["Cloud Native","Distributed System"],"oR":["增强Casbin语法的表达能力，满足用户多样化的策略制定需求","优化Casbin在大规模规则集上（百万以上）的策略评估性能","解决Casbin Golang主仓库&相关仓库中的issues：https://github.com/casbin/casbin/issues"],"tR":["熟悉Golang语言","熟悉Git、GitHub相关操作"],"orgID":242,"spl":1,"organchor":"casbin","orgname":"Casbin||Casbin"},{"name":"Casbin文档中文翻译 + 官网优化","remark":null,"difficulty":"中","mentor":"刘子轩","contact":"<nodeces@gmail.com>","uniont":"罗杨<hsluoyz@gmail.com>","student_count":0,"description":"Casbin官网（https://casbin.org/ ）基于开源文档工具Docusaurus构建（基于React），采用Docusaurus所集成的CrowdIn在线翻译平台进行众包翻译。Casbin官网原始文档均为英文，由CrowdIn上的贡献者自愿将英文翻译为其他各语言（如中文，韩文等）。但是目前各语言的翻译率较低，中文翻译率目前仅有15%，不利于开源项目在国内推广。因此希望能够将中文翻译率提高到100%。并且该项目也会承担一部分Casbin社区推广（如Casbin官方微信公众号）文章的撰写编辑、公众号管理等临时任务。","label":"210210375","link":"","tech_tag":["JavaScript","React"],"domain_tag":["Web"],"oR":["在CrowdIn翻译平台将Casbin官网英文内容翻译为中文，进度翻译至100%（目前为15%）","（可选）改进官网功能、优化内容排版，增加新的文档内容","（有时）撰写、编辑Casbin社区推广（如Casbin官方微信公众号）文章","解决Casbin-website主仓库&相关仓库中的issues：https://github.com/casbin/casbin-website/issues"],"tR":["热爱并有能力撰写技术博客、文章","了解React框架和NPM包管理","了解Git、GitHub相关操作","了解Casbin的工作原理"],"orgID":242,"spl":1,"organchor":"casbin","orgname":"Casbin||Casbin"},{"name":"Casbin.js核心前端库研发（前端Javascript + React + vue）","remark":null,"difficulty":"高","mentor":"刘梓晖","contact":"<kingiw@hotmail.com>","uniont":"罗杨<hsluoyz@gmail.com>,刘子轩<nodeces@gmail.com>","student_count":0,"description":"Casbin本身专注于服务器端（后端）的访问控制、权限管理，然而Web App（前端）也有权限管理的需求：如列出当前登录用户有权访问的所有列表项，或当前用户无权进行删除帖子的操作，则把删除按钮变灰或隐藏等等。因此Casbin推出专门用于前端权限展示的开源库：Casbin.js 。该库主要实现2个功能：1）调用后端Casbin（可能是Go，也可能是Java等）提供的接口（RESTful或cookie等方式），获取当前登录用户的权限；2）将获取到的权限转换为列表、按钮的显示状态。","label":"210210378","link":"","tech_tag":["JavaScript","NodeJS","React"],"domain_tag":["Web"],"oR":["大规模重构、改造、完善Casbin.js ，从功能、适配性、可用性上达到类似CASL项目：https://github.com/stalniy/casl","完成核心主库Casbin.js的开发，推送到NPM。同时类似CASL项目，包装出React、Vue等框架的适配器，方便React、Vue用户使用","开发至少一种后端语言（如Go Casbin）的对接Casbin.js的API接口，从而使后端把权限传给前端的Casbin.js","解决Casbin.js主仓库&相关仓库中的issues：https://github.com/casbin/casbin.js/issues"],"tR":["熟悉HTML、Javascript、CSS等前端技术","熟悉React或Vue框架，两种都熟悉更好","熟悉NPM包管理，熟悉Git、GitHub相关操作","至少了解一种后端语言，如Go、Java、Python、Node.js、Rust等，有全栈工程师相关经验；"],"orgID":242,"spl":1,"organchor":"casbin","orgname":"Casbin||Casbin"},{"name":"Casdoor身份认证系统（前端React + Javascript，后端Golang）","remark":null,"difficulty":"高","mentor":"罗杨","contact":"<hsluoyz@gmail.com>","uniont":null,"student_count":0,"description":"Casdoor是一套基于基于OAuth 2.0 / OIDC协议的统一身份认证（单点登录）系统。其支持多种第三方登录方式，如QQ、微信、Google, GitHub等。Casdoor具有Web管理界面，可以用来管理用户、角色、权限（基于Casbin）","label":"210210379","link":"","tech_tag":["Go","JavaScript","React"],"domain_tag":["Cloud Native","Web"],"oR":["扩展架构，添加更多的第三方登录支持","优化、美化Web界面","支持Casbin权限管理","解决Casdoor主仓库&相关仓库中的issues：https://github.com/casbin/casdoor/issues"],"tR":["熟悉React、Javascript语言（前端）","熟悉Golang语言（后端）","熟悉Git、GitHub相关操作"],"orgID":242,"spl":1,"organchor":"casbin","orgname":"Casbin||Casbin"},{"name":"Casbin官方核心论坛（前端React + Javascript，后端Golang）","remark":null,"difficulty":"高","mentor":"张军洁","contact":"<tsglsdrs@163.com>","uniont":"罗杨<hsluoyz@gmail.com>","student_count":0,"description":"Casbin社区目前采用QQ群（中文），Gitter（英文）进行社区交流，交流渠道比较有限。我们打算开发一个同时面向Casbin开发者和用户的官方论坛：casnode（https://github.com/casbin/casnode ）。该论坛开源，因此也欢迎其他开源社区使用。","label":"210210453","link":"","tech_tag":["Go","JavaScript","React"],"domain_tag":["Web"],"oR":["完成一个界面风格类似V2EX的论坛，作为Casbin开源社区的官方论坛","继续维护该项目，添加features，解决bugs，完善其邮件列表功能","解决Casnode&相关仓库中的issues：https://github.com/casbin/casnode/issues"],"tR":["熟悉React、Javascript语言（前端）","熟悉Golang语言（后端）","熟悉Git、GitHub相关操作"],"orgID":242,"spl":1,"organchor":"casbin","orgname":"Casbin||Casbin"}]},{"userId":157,"anchor":"apacheskywalking","slide":"","video":"","img":"apacheskyWalking1.jpg","title":"Apache SkyWalking","project_url":"https://cwiki.apache.org/confluence/display/SKYWALKING/Open+Source+Promotion+Plan+-+Summer+2021+Tasks","url":"https://skywalking.apache.org/","description":"SkyWalking is an open source APM for distributed system. Tracing, Metrics and Logging all-in-one solution. Make your services reliable.","full_des":"Apache SkyWalking is a highly diverse community. We as a top-level project of Apache Software Foundation, have 400+ developers all over the world.","tech_tag":["APM","Tracing","Metrics","Logging","Event","Performance"],"domain_tag":["Observability","Micro service","Service Mesh","应用性能监控","分布式追踪","分布式系统性能"],"mail_list":"dev@skywalking.apache.org (Mail to dev-subscribe@skywalking.apache.org to subscribe)","email":"dev@skywalking.apache.org","project_list":[{"name":"License-Eye: Maven 项目 license 分析||License-Eye: Maven dependencies' licenses analysis","remark":"","difficulty":"高","mentor":"柯振旭","contact":"<kezhenxu94@apache.org>","uniont":null,"student_count":0,"description":"SkyWalking License Eye 是一个全功能的 License 工具，可以检查 / 修复文件头 License 问题，解析项目依赖的 License。    本项目是为了分析 maven 项目中所引用到的所有依赖项目（包括传递依赖）的 license 类别，避免 Apache 项目（或者其他开源项目）发版可能的 license 问题。||A full-featured license tool to check and fix license headers and resolve dependencies' licenses.    This project aims at identifying all dependencies' licenses (including transitive dependencies) to avoid potential licensing issues in Apache releases (and similar open source projects).    ","label":"210100101","link":"","tech_tag":["Go","Java"],"domain_tag":["Cloud Native","Dev Tools"],"oR":["`license-eye dependency check` 命令支持分析 maven 项目依赖，生成项目所依赖的 license 报表，报告与 APL 2.0 不兼容的部分。||Command `license-eye dependency check` should be able to analyze maven projects, generate the licenses' report, and check APL-2.0 incomparable licenses."],"tR":["Golang","Java"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"License-Eye: NPM 项目 license 分析||License-Eye: NPM dependencies' licenses analysis","remark":"","difficulty":"中","mentor":"柯振旭","contact":"<kezhenxu94@apache.org>","uniont":null,"student_count":0,"description":"SkyWalking License Eye 是一个全功能的 License 工具，可以检查 / 修复文件头 License 问题，解析项目依赖的 License。    本项目是为了分析 NPM 项目中所引用到的所有依赖项目（包括传递依赖）的 license 类别，避免 Apache 项目（或者其他开源项目）发版可能的 license 问题。||A full-featured license tool to check and fix license headers and resolve dependencies' licenses.    This project aims at identifying all dependencies' licenses (including transitive dependencies) to avoid potential licensing issues in Apache releases (and similar open source projects).    ","label":"210100102","link":"","tech_tag":["Go","NodeJS","npm"],"domain_tag":["Cloud Native","Dev Tools"],"oR":["`license-eye dependency check` 命令支持分析 NPM 项目依赖，生成项目所依赖的 license 报表，报告与 APL 2.0 不兼容的部分。||Command `license-eye dependency check` should be able to analyze npm projects, generate the licenses' report, and check APL-2.0 incomparable licenses."],"tR":["Java","npm"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-python: 定义 meter 上报接口，实现 meter 上报协议||Skywalking-python: define meter APIs, implement the meter report protocol","remark":"","difficulty":"低","mentor":"柯振旭","contact":"<kezhenxu94@apache.org>","uniont":null,"student_count":0,"description":"skywalking-python 是 SkyWalking 的官方 Python 探针。    本项目目的是进一步将 Python 探针的功能与 Java 探针的功能进行对齐，在 Python 探针中实现指标上报的 API 和协议，有 Java 版本可供参考。||The Python agent for Apache SkyWalking.    The project is to further align the feature parity between Java agent and Python agent, by designing and implementing the meter report APIs and protocols. There is a Java version for reference.    ","label":"210100103","link":"","tech_tag":["Python","gRPC"],"domain_tag":["Cloud Native","Distributed System","Observability"],"oR":["熟练 Python 编程语言和 Python gRPC 框架。||Skywalking-python should be able to provide a set of meter APIs and report the meters up to SkyWalking backend OAP."],"tR":["python","java"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"官网视觉设计（非代码贡献）||Website Design(Not code contribution","remark":"","difficulty":"高","mentor":"吴晟","contact":"<wusheng@apache.org>","uniont":null,"student_count":0,"description":"根据SkyWalking的项目背景，对skywalking官网的配色、布局、风格、图标、字体等进行设计。||Base on the context and history of building skywalking project, design and improve the official website, including the docs site.  ","label":"210100104","link":"","tech_tag":["Visualization"],"domain_tag":["Web"],"oR":["网站设计说明书，包括设计理念，布局，配色，图标，交互模式等||The design instruction of skywalking website. Including the idea of design, layout, icon, graph, interactive model.","视觉设计说明书||The design instruction"],"tR":["Art Designer","Visual Design"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-python: 实现日志上报功能||skywalking-python: implement the log report function","remark":"","difficulty":"中","mentor":"张可","contact":"<zhangke@apache.org>","uniont":null,"student_count":0,"description":"skywalking-python 是 SkyWalking 的官方 Python 探针。    本项目是为了在 Python 探针中实现日志收集并通过 gRPC 协议上报给接收端的功能。有 Java 版本实现以供参考。||Skywalking-Python is the Python agent for Apache SkyWalking.    The purpose of this project is to implement the function of collecting logs in Python agent and reporting them to receivers via GRPC protocol.    ","label":"210100105","link":"","tech_tag":["Python","gRPC"],"domain_tag":["Distributed System"],"oR":["在 skywalking-python 中实现日志上报协议 ，并对 Python 主流日志库支持透明地日志上报。||Implement the log reporting protocol in Skywalking-Python, and support transparent logging reporting for the major Python logging libraries."],"tR":["Python","gRPC"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-cli：易用性优化||skywalking-cli：optimize usability","remark":"","difficulty":"低","mentor":"江华禧","contact":"<hoshea@apache.org>","uniont":null,"student_count":0,"description":"skywalking-cli是为SkyWalking用户和OPS团队提供的命令行交互工具。    本项目是为了让用户能够更便捷、高效地使用来对该命令行工具进行一系列的优化。（适合第一次参与开源的同学）||SkyWalking CLI is a command interaction tool for the SkyWalking user or OPS team, as an alternative besides using browser GUI.    This project is to make users to use the command line tool more conveniently and efficiently. (Suitable for students who are participating in open source for the first time)  ","label":"210100106","link":"","tech_tag":["Go"],"domain_tag":["Dev Tools"],"oR":["优化结果的输出||Optimize the output","实现根据命令推断显示类型||Implement inferred display type based on commands","实现命令自动补全||Implement  auto-completion","实现shell脚本一键安装||Support shell script installation"],"tR":["Golang"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-cli：实现实例依赖的展示||skywalking-cli: implement the display of instance dependencies","remark":"","difficulty":"中","mentor":"江华禧","contact":"<hoshea@apache.org>","uniont":null,"student_count":0,"description":"skywalking-cli是为SkyWalking用户和OPS团队提供的命令行交互工具。    本项目是为了在命令行以图形的方式展示service/endpoint的上下游依赖关系，可以参考已有的trace命令来实现。||kyWalking CLI is a command interaction tool for the SkyWalking user or OPS team, as an alternative besides using browser GUI.    This project is to graphically display the upstream and downstream dependencies of service/endpoint on the command line, which can be achieved by referring to the existing `trace` commands.    ","label":"210100107","link":"","tech_tag":["Go"],"domain_tag":["Dev Tools","Virtualization"],"oR":["`swctl dependency`命令||`swctl dependency` command","实例依赖还需要展示相关的指标||Instance dependencies also need to display relevant metrics"],"tR":["Golang","GraphQL"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking e2e，增加metrics exporter测试||skywalking e2e，add a new test case about metrics exporter","remark":"","difficulty":"中","mentor":"吴晟","contact":"<wusheng@apache.org>","uniont":null,"student_count":0,"description":"skywalking有完整的e2e体系，大部分核心功能通过e2e自动化测试确保功能正确性。    目前，metrics exporter导出功能没有进行自动化测试。适合对集成以及自动化测试感兴趣的同学参与。||SkyWalking has its own e2e testing framework. Most key features are verified through e2e in every commit.    So far, we don't have test about metrics exporter.    This task is good for the people first time joining the open source community and willing to learn how the open source does auto testing.    ","label":"210100108","link":"","tech_tag":["Java","Docker"],"domain_tag":["Dev Tools","Distributed System"],"oR":["使用golang实现模拟的metrics server做为导出数据的接收方||Use Golang to implement a mock metrics server, as a receiver of OAP ","为metrics server增加校验接口(http)||Add a verification interface in mock metrics server.","通过e2e框架完成验证||Add mock metrics server "],"tR":["Golang and Java","了解自动化测试的基本知识，如，docker，maven test||Basic auto testing knowledge, such as docker and maven test tools."],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"go2sky: 增加 dubbo-go 插件||go2sky dubbo-go plugin","remark":"","difficulty":"低","mentor":"张伟","contact":"<zhangwei@apache.org>","uniont":null,"student_count":0,"description":"Implement the dubbo-go plugin for go2sky    【为 go2sky 实现 dubbo-go 插件】    https://github.com/SkyAPM/go2sky    https://github.com/SkyAPM/go2sky-plugins    https://github.com/apache/dubbo-go","label":"210100109","link":"","tech_tag":["Go"],"domain_tag":["Distributed System","Tracing"],"oR":["实现 dubbo-go 插件||Implement dubbo-go plugin","增加插件测试||Add plugin test"],"tR":["golang","go2sky","dubbo-go"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"go2sky: 增加 mysql 插件||go2sky mysql plugin","remark":"","difficulty":"中","mentor":"张伟","contact":"<zhangwei@apache.org>","uniont":null,"student_count":0,"description":"Implement the mysql plugin for go2sky    【为 go2sky 实现 mysql 插件】    https://github.com/SkyAPM/go2sky    https://github.com/SkyAPM/go2sky-plugins    https://github.com/go-sql-driver/mysql","label":"210100110","link":"","tech_tag":["Go"],"domain_tag":["Distributed System","Tracing"],"oR":["实现 mysql 插件||Implement mysql plugin","增加插件测试||Add plugin test"],"tR":["golang","go2sky","go mysql sdk"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-transporter-plugin:增加RocketMQ插件||skywalking-transporter-plugin RocketMQ plugin","remark":"","difficulty":"高","mentor":"庄浩潮","contact":"<daming@apache.org>","uniont":null,"student_count":0,"description":"Implement the transporter by Apache RocketMQ    【为skywalking实现将Apache RocketMQ作为传输层。】    https://rocketmq.apache.org/    https://skywalking.apache.org/","label":"210100111","link":"","tech_tag":["Java"],"domain_tag":["Distributed System"],"oR":["实现SkyWalking Agent端exporter插件||Implement the exporter plugin in Java Agent end.","实现Skywalking OAP端fetcher模块||Implement the fetcher module in OAP end."],"tR":["Java","Apache RocketMQ"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"skywalking-transporter-plugin:增加Apache Pulsar插件||skywalking-transporter-plugin Apache Pulsar plugin","remark":"","difficulty":"高","mentor":"庄浩潮","contact":"<daming@apache.org>","uniont":null,"student_count":0,"description":"Implement the transporter by Apache Pulsar    【为skywalking实现将Apache Pulsar作为传输层。】    https://pulsar.apache.org/    https://skywalking.apache.org/","label":"210100112","link":"","tech_tag":["Java"],"domain_tag":["Distributed System"],"oR":["实现SkyWalking Agent端exporter插件||Implement the exporter plugin in Java Agent end.","实现Skywalking OAP端fetcher模块||Implement the fetcher module in OAP end."],"tR":["Java","Apache Pulsar"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SkyAPM-php-sdk: 完善redis插件||SkyAPM-php-sdk: redis-plugin","remark":"","difficulty":"中","mentor":"何延龙","contact":"<heyanlong@apache.org>","uniont":null,"student_count":0,"description":"Implement the redis plugin for SkyAPM-php-sdk  【为SkyAPM-php-sdk完善redis插件】","label":"210100113","link":"","tech_tag":["PHP","C++"],"domain_tag":["Distributed System","Tracing"],"oR":["实现全量redis命令信息收集||Implement redis plugin"],"tR":["PHP","C++"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SkyAPM-php-sdk: 实现GRPC链路追踪||SkyAPM-php-sdk: grpc-plugin","remark":"","difficulty":"中","mentor":"何延龙","contact":"<heyanlong@apache.org>","uniont":null,"student_count":0,"description":"Add cross-precess tracking header to gRPC    【为SkyAPM-php-sdk实现GRPC的跨进程链路追踪】    https://github.com/SkyAPM/SkyAPM-php-sdk","label":"210100114","link":"","tech_tag":["PHP","C++"],"domain_tag":["Distributed System","Tracing"],"oR":["实现自动给grpc请求添加跨进程追踪头||Add cross-precess tracking header to gRPC"],"tR":["PHP","C++"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SkyAPM-php-sdk: 内存泄露排查||SkyAPM-php-sdk: memory leak troubleshooting","remark":"","difficulty":"高","mentor":"何延龙","contact":"<heyanlong@apache.org>","uniont":null,"student_count":0,"description":"Troubleshoot the root cause of memory leaks for SkyAPM-php-sdk  【为SkyAPM-php-sdk排查内存泄露根源】","label":"210100115","link":"","tech_tag":["PHP","C++"],"domain_tag":["Tracing"],"oR":["找出内存泄漏代码并修复||Find out the memory leak code and fix it"],"tR":["PHP","C++"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SWCK: 后台存储CRD和Controller||SWCK: CRDs and Controllers of backend storages","remark":"","difficulty":"中","mentor":"高洪涛","contact":"<hanahmily@apache.org>","uniont":null,"student_count":0,"description":"SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。    本项目的任务是增加新的CRD用来设置存储数据的后台存储，如Elasticsearch，MySQL等。并增加新的Controller去部署CRD中定义的存储||SkyWalking leverages SWCK to be running on Kubernetes in a native way    This task intends to introduce new CRDs and Controllers to deploy various storage services supported by SkyWalking, for example, Elasticsearch, MySQL, etc.     Students should select one from them to implement at least.    ","label":"210100116","link":"","tech_tag":["Go","Kubernetes"],"domain_tag":["Cloud Native"],"oR":["实现至少一种SkyWalking支持存储的CRD||Implement one storage CRD at least","实现相应的Controller||Implement associated Controllers "],"tR":["Golang","Kubernetes"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SWCK: 配置文件CRD和Controller||SWCK: CRDs and Controllers of config files","remark":"","difficulty":"中","mentor":"高洪涛","contact":"<hanahmily@apache.org>","uniont":null,"student_count":0,"description":"SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。    SkyWalking后台有两类配置文件：静态配置文件和动态配置文件。    本项目的任务是增加新的CRD用来加载配置文件到SkyWalking后台。如果是静态配置，使用Controller修改SkyWalking关联的ConfigMap，并重启后台的Pod从而加载配置。如果是动态配置，修改关联的ConfigMap即可。||SkyWalking leverages SWCK to be running on Kubernetes in a native way    SkyWalking supports static and dynamic configuration files at the same time.    This task intends to introduce new CRDs and Controllers to config both of them.    When a static config file is applied to ConfigMap, the controller should reboot the backend server for reloading config content. If a dynamic config file is updated, the controller only modifies the ConfigMap that corresponded to it.  ","label":"210100117","link":"","tech_tag":["Go","Kubernetes"],"domain_tag":["Distributed System"],"oR":["实现静态配置的CRD和Controller||Implement static config CRD and Controller","实现动态配置的CRD和Controller||Implement dynamic config CRD and Controller"],"tR":["Golang","Kubernetes"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SWCK: agent容器注入器||SWCK: agent container injector","remark":"","difficulty":"高","mentor":"高洪涛","contact":"<hanahmily@apache.org>","uniont":null,"student_count":0,"description":"SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。    本项目的任务是使用Admission webhook将agent容器自动挂载到目标Pod中。从而在不修改原镜像的前提下，去使用skywalking agent。||SkyWalking leverages SWCK to be running on Kubernetes in a native way    This task intends to leverage \"Admission mutating webhook\" to inject the SkyWalking agent container into the target Pod.    Once it gets injected, the running application could get instrumented automatically without rebuilding its image.  ","label":"210100118","link":"","tech_tag":["Go","Kubernetes"],"domain_tag":["Distributed System"],"oR":["实现该webhook||Implement the injector"],"tR":["Golang","Kubernetes"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"Satellite支持Trace数据传输||Satellite supports Trace format transmission","remark":"","difficulty":"高","mentor":"吴晟","contact":"<wusheng@apache.org>","uniont":null,"student_count":0,"description":"Satellite做为SkyWalking Agent与OAP间的中继节点，可以提供本地存储和协议转换    本项目的任务是对Satellite中添加对Trace数据的支持。并允许通过Kafka和gRPC两种格式发送给OAP Server||Satellite works as a relay node or sidecar of agent, between agent and OAP server. It provides protocol conversion and local cache.    This task intends to add the support of trace data formate in the Satellite. And provide Kafka and gRPC senders to transfer the trace data to OAP server.    ","label":"210100119","link":"","tech_tag":["Go"],"domain_tag":["Distributed System","Tracing"],"oR":["实现trace receiver以及对应的sender||Implement receiver and senders."],"tR":["Golang","Java"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"},{"name":"SkyWalking Javaagent和后端支持字符类型Response code||SkyWalking Javaagent and OAP backend supports chars as Response code","remark":"","difficulty":"中","mentor":"吴晟","contact":"<wusheng@apache.org>","uniont":null,"student_count":0,"description":"解决返回码存在字符和数据两种格式，造成后端有警告||Support using chars as response code and resolve the warning error.  ","label":"210100120","link":"","tech_tag":["Java","Distributed System"],"domain_tag":["Distributed System","Tracing"],"oR":["修复相关问题，并完善相关测试用例||Resolve the issue and fix error."],"tR":["Java"],"orgID":157,"spl":0,"organchor":"apacheskywalking","orgname":"Apache SkyWalking"}]},{"userId":154,"anchor":"apacheapisix","slide":"","video":"","img":"apacheapisix1.jpg","title":"Apache APISIX||Apache APISIX","project_url":"https://cwiki.apache.org/confluence/display/APISIX/Open+Source+Promotion+Plan+-+Summer+2021+Tasks","url":"https://apisix.apache.org/","description":"云原生、高性能、可扩展的微服务 API 网关||Cloud-native, high-performance, scalable microservices API gateway","full_des":"Apache APISIX 是云原生、高性能、可扩展的微服务 API 网关，它基于 Nginx 和 etcd 来实现，具备动态路由、插件热加载、 gRPC 代理、协议转换等功能，适合微服务体系下的 API 管理。||Apache APISIX is a cloud-native, high-performance, scalable microservices API gateway based on Nginx and etcd, with dynamic routing, plugin hot-loading, gRPC proxy, protocol conversion, and other features, suitable for API management under the microservices system.","tech_tag":["网关","Nginx","C","Lua","API","Golang","k8s","Helm Chart"],"domain_tag":["中间件","微服务"],"mail_list":"开发者邮箱列表：dev@apisix.apache.org 订阅指南：https://apisix.apache.org/subscribe-guide","email":"wenming@apache.org","project_list":[{"name":" Apache APISIX 缓存校验工具||Apache APISIX cache verification tool ","remark":null,"difficulty":"中","mentor":"陈军旭","contact":"<chenjunxu@apache.org>","uniont":null,"student_count":0,"description":"1. 新增一个工具，用于校验 APISIX 和 Dashboard 中的缓存数据是否与实际在 ETCD 中存储的数据一致。    2. 在 Apache APISIX 新增一个命令行工具，执行时该工具时实时从 ETCD 中获取最新数据，逐项与本地缓存做比较，校验是否有数据不同步的情况。需要校验每个进程的数据。    3. 在 Apache APISIX Dashboard 中新增一个命令行工具，执行时该工具时实时从 ETCD 中获取最新数据，逐项与本地缓存做比较，校验是否有数据不同步的情况。||1. Add a new tool to verify whether the cached data in APISIX and Dashboard is consistent with the data actually stored in ETCD.    2. Add a new command line tool to Apache APISIX. When the tool is executed, it will obtain the latest data from ETCD in real time, compare it with the local cache item by item, and check whether there is data out of sync. Need to verify the data of each process.    3. A a new command line tool to the Apache APISIX Dashboard. When the tool is executed, the latest data will be obtained from the ETCD in real time, and compared with the local cache item by item to verify whether there is data out of sync.    ","label":"210050252","link":"","tech_tag":["Go","Cloud Native","Micro Service"],"domain_tag":["Cloud Native","Dev Tools"],"oR":["对主程序代码没有入侵||No intrusion into the main program code ","运行该工具对主程序运行无影响||Running the tool has no effect on the operation of the main program ","有足够的测试用例保证工具的正确性||There are enough test cases to ensure the correctness of the tool "],"tR":["OpenResty","Golang","ETCD"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":" Apache APISIX Ingress Controller 保证 APISIX 历史数据能够兼容||Apache APISIX Ingress Controller ensures that APISIX historical data is compatible ","remark":null,"difficulty":"中","mentor":"金卫","contact":"<kvn@apache.org>","uniont":null,"student_count":0,"description":"如果用户先使用了 APISIX ，再想部署 apisix-ingress-controller，需要一个工具，将 APISIX 历史数据 导出为 yaml 申明式配置。||If the user uses APISIX first, and then wants to deploy apisix-ingress-controller, a tool is needed to export APISIX historical data to yaml declarative configuration.    ","label":"210050253","link":"","tech_tag":["Go","Cloud Native"],"domain_tag":["Cloud Native","Dev Tools"],"oR":[" 将 APISIX 历史数据导出为 apisix-ingress-controller 声明式配置||Export APISIX historical data as apisix-ingress-controller declarative configuration "," yaml 格式需要支持 apisix-ingress-controller 中的 v1 和 v2alpha1 版本||The yaml format needs to support the v1 and v2alpha1 versions in apisix-ingress-controller "],"tR":["了解 APISIX 数据结构||Understand the APISIX data structure "," 对 etcd 有一定的了解||Have a certain understanding of etcd "," 了解 apisix-ingress-controller 中的 yaml 数据格式||Understand the yaml data format in apisix-ingress-controller "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"在 Dashboard 中使用表单配置插件||Using the Form Configuration Plugin in Dashboard ","remark":null,"difficulty":"高","mentor":"琚致远","contact":"<jjzhiyuan@gmail.com>","uniont":null,"student_count":0,"description":"目前在 Dashboard 中配置插件时，需要使用 CodeMirror 以 JSON 格式配置，为了提升使用体验，我们一起实现根据 jsonschema 构建 Form 表单，方便用户完成插件配置。||Currently, when configuring plug-ins in Dashboard, you need to use CodeMirror to configure in JSON format. In order to improve the experience, we work together to build a Form form based on jsonschema to facilitate users to complete the plug-in configuration.    ","label":"210050254","link":"","tech_tag":["JavaScript","NodeJS","React","TypeScript","Git"],"domain_tag":["Web","Programming Language"],"oR":[" 使用 Form 表单可视化配置插件数据。||Use Form forms to visually configure plugin data. "],"tR":["了解 React 与 Ant Design 组件。||Understanding React and Ant Design components. ","熟悉 jsonschema 标准。||Familiarity with the jsonschema standard. "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"提升项目文档质量||Improve the quality of project documentation ","remark":null,"difficulty":"中","mentor":"琚致远","contact":"<jjzhiyuan@gmail.com>","uniont":null,"student_count":0,"description":"近期，我们在 apisix.apache.org 增加了文档站的支持，尽管文档站支持全文搜索，但 APISIX 与 APISIX Dashboard、APISIX Ingress Controller 等项目文档依然有很大的优化空间，可以使它更加清晰、易读！||Recently, we added support for the documentation station at apisix.apache.org. Although the documentation station supports full-text search, there is still a lot of room for optimizing the documentation for projects like APISIX and APISIX Dashboard, APISIX Ingress Controller, etc. to make it clearer and easier to read!    ","label":"210050255","link":"","tech_tag":["JavaScript","Micro Service","Git"],"domain_tag":["Cloud Native","Web"],"oR":["阅读 APISIX 以及其它项目的当前文档||Reading current documentation for APISIX as well as other projects. "," 与导师共同整理新的文档目录与结构组织||Working with the mentor to organize the new documentation catalog and structural organization. "," 完成文档的编写与整理||Completing the documentation and organizing it. "," 发布至文档站。||Publish them to the documentation site. "],"tR":[" 在意文档阅读体验||An interest in the documentation reading experience. ","技术背景优先：需要了解 APISIX 以及其它项目是什么、有什么用||Technical background preferred: need to understand what APISIX and other projects are and what they do. "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"优化 Dashboard 中 GitHub Action 质量与速度||Optimizing GitHub Action Quality and Speed in Dashboard ","remark":null,"difficulty":"中","mentor":"琚致远","contact":"<jjzhiyuan@gmail.com>","uniont":null,"student_count":0,"description":"Dashboard 包含了 ManagerAPI、Web 与 文档内容。随着测试的逐渐增多，修改任一类内容都会造成所有 CI 执行，希望能够支持根据修改的文件类型执行对应的 CI 任务。||Dashboard contains ManagerAPI, Web and document contents. As the number of tests increases, modifying any type of content will cause all CIs to be executed, so we hope to support the execution of CI tasks according to the modified file types.    ","label":"210050256","link":"","tech_tag":["JavaScript","NodeJS"],"domain_tag":["Web"],"oR":["翻阅 Dashboard 项目 Actions 内容，梳理有哪些 CI 检查。||Go through the Dashboard project Actions content and sort out what CI checks are available. ","重新整理 CI，在执行过程中根据修改的文件内容，触发所匹配的检查任务。||Reorganize the CI and trigger matching check tasks during execution based on the contents of the modified files. "],"tR":["了解 GitHub Action，熟悉者优先||Knowledge of GitHub Action, familiarity preferred. ","了解 Golang 与 Node.js||Knowledge of Golang and Node.js. ","有良好的文件、目录组织习惯者优先||Good file and directory organization habits are preferred. "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"改善对 Nacos 的支持||Improve Nacos support ","remark":null,"difficulty":"中","mentor":"罗泽轩","contact":"<spacewander@apache.org>","uniont":null,"student_count":0,"description":"改善现在的 Nacos 服务发现接口的实现||improve the implement of current Nacos service discovery support    ","label":"210050257","link":"","tech_tag":["Go","Cloud Native","Micro Service"],"domain_tag":["Cloud Native"],"oR":["解决现有 Nacos 接口性能损耗大，加载速度慢的问题||Solve the problem of high performance loss and slow loading speed of current implementation "],"tR":["懂得 OpenResty 和 Go||Acquire OpenResty and Go "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"使用 Docker 改善 APISIX CI||Use docker to improve APISIX CI ","remark":null,"difficulty":"低","mentor":"罗泽轩","contact":"<spacewander@apache.org>","uniont":null,"student_count":0,"description":"use docker to improve APISIX CI    【使用docker改善APISIX CI】","label":"210050258","link":"","tech_tag":["Docker"],"domain_tag":["Dev Tools"],"oR":["重构现有CI的代码，通过提前打好docker包，加速CI运行，并简化新人上手门槛||Refactor current CI ","reduce the burden for the new contributor.","使用docker-compose的方式管理CI中的外部服务||manage multiple services in the CI via docker-compose "],"tR":["懂得 docker||Be familiar with docker "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"支持 ext auth||Support ext auth ","remark":null,"difficulty":"中","mentor":"罗泽轩","contact":"<spacewander@apache.org>","uniont":null,"student_count":0,"description":"实现 ext-auth 插件，对目标服务发起请求进行认证、鉴权||implement a plugin to send HTTP request to external service for authentication and authorization purpose    ","label":"210050259","link":"","tech_tag":["Cloud Native","Micro Service","OpenResty"],"domain_tag":["Cloud Native","Programming Language"],"oR":["实现一个 APISIX 插件，支持发起 HTTP 请求||Write this plugin ","允许使用这个请求的响应改写客户端发起的原始请求||Allow using the response to rewrite the original client request "],"tR":["懂得 OpenResty||Acquire OpenResty"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"根据后端提供的 jsonschema 校验规则映射前端字段的校验规则||Mapping FE field validation rules against jsonschema validation rules provided by the BE ","remark":null,"difficulty":"中","mentor":"孙毅","contact":"<sunyi@apache.org>","uniont":null,"student_count":0,"description":"目前，前端对于字段的校验采用前端手动的输入的方式进行校验，如果后端校验规则改变，那么前端就要手动的同步后端的校验规则。我们需要改进这点：根据后端提供的 jsonschema 自动同步。||Currently, the front-end uses manual input for field validation, and if the back-end validation rules change, then the front-end has to manually synchronise the back-end validation rules. We need to improve this: automatic synchronisation based on the jsonschema provided by the back-end.    ","label":"210050260","link":"","tech_tag":["JavaScript","TypeScript"],"domain_tag":["Web"],"oR":["找到 jsonschema 与前端字段的映射关系，提取出 jsonschema 对应的规则||find the mapping relationship between jsonschema and front-end fields, and extract the rules corresponding to jsonschema. ","将提取出来的规则应用到前端字段的校验上||apply the extracted rules to the checksum of the front-end fields. "],"tR":["JSONSchema","React"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"通用打包工具（支持 CentOS、Ubuntu、Fedora 等系统打包统一打包||Universal packaging tool (support CentOS, Ubuntu, Fedora and other systems packaging unified packaging) ","remark":null,"difficulty":"中","mentor":"王院生","contact":"<membphis@apache.org>","uniont":null,"student_count":0,"description":"Apache APISIX is a dynamic, real-time, high-performance API gateway.","label":"210050261","link":"","tech_tag":["Linux","Docker"],"domain_tag":["Linux Kernel"],"oR":["支持 Apache APISIX 在 CentOS、Ubuntu、Fedora 等系统打包||Support Apache APISIX packaging on CentOS, Ubuntu, Fedora, etc. ","CI 测试，验证打包结果正确性||CI test to verify the correctness of the packaging results "],"tR":["基本的 Linux 命令||Basic Linux commands","fpm 工具使用||fpm tool usage ","具备脚本语言 Bash script||Scripting language Bash script ","熟悉 Docker 使用||familiar with the use of Docker "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Apache APISIX SSL session 握手优化||Apache APISIX SSL session handshake optimization","remark":null,"difficulty":"高","mentor":"王院生","contact":"<membphis@apache.org>","uniont":null,"student_count":0,"description":"Apache APISIX is a dynamic, real-time, high-performance API gateway.","label":"210050262","link":"","tech_tag":["C","C++","Nginx"],"domain_tag":["Programming Language"],"oR":["支持 TLS session store fetch 复用，提升 TLS 握手效率||Support TLS session store/fetch reuse to improve TLS handshake efficiency ","支持 Ticket session，提升 TLS 握手效率||Support Ticket session, improve the efficiency of TLS handshake "],"tR":["对 TLS 握手机制有较深了解||TLS handshake mechanism has a deep understanding of","熟悉 C/C++，Lua 语言||Familiar with C/C++, Lua language ","了解 Nginx||Understanding of Nginx ","了解 Test::Nginx 测试框架||Understanding Test::Nginx testing framework "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"为 Apache APISIX 增加短视频的制作||Adding the production of short videos for APISIX","remark":null,"difficulty":"中","mentor":"温铭","contact":"<wenming@apache.org>","uniont":null,"student_count":0,"description":"短视频（B 站、抖音、视频号等）已经成为信息传播的有效渠道，Apache APISIX 也可以增加一些有趣、利于传播的技术短视频。||Short videos (station B, Douyin, video number, etc.) have become effective channels for information dissemination, and Apache APISIX can also add some interesting and disseminating technologies Short video.    ","label":"210050263","link":"","tech_tag":["Micro Service","Apache APISIX/Resources"],"domain_tag":["Cloud Native"],"oR":["根据 Apache APISIX 的文档、技术分享等找到技术点。||According to Apache APISIX documentation and technology Sharing and so on to find technical points. ","和导师一起整理系统的目录和技术点||Organize the catalog and technical points of the system with the instructor ","Expect 30 short videos. Each video is about 3 minutes. / 预期 30 个短视频。每个视频 3 分钟左右。"],"tR":["喜欢短视频的制作，并有相关的经验||Like short video production and have relevant experience.","能从技术中找到灵光一现的idea||You can find an instant idea from technology.","技术背景优先||Technical background is preferred."],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Apache APISIX installation and deployment optimization, and automated packaging","remark":null,"difficulty":"高","mentor":"温铭","contact":"<wenming@apache.org>","uniont":null,"student_count":0,"description":"Apache APISIX is currently packaged manually, and we need an automated packaging platform to reduce the cost of CI and CD.","label":"210050264","link":"","tech_tag":["Linux","Automation","Git"],"domain_tag":["Dev Tools"],"oR":["参考同类产品的安装、部署等，降低 Apache APISIX 的使用门槛||Refer to the installation and deployment of similar products Etc., to lower the threshold of using Apache APISIX","自动化打出各个平台的安装包||Use docker and github actions to automatically print out the installation packages of each platform. / 使用 docker 和 github actions "],"tR":["产品分析能力||Product analysis capabilities ","对于产品和技术有洁癖||Have a cleanliness of products and technologies","熟悉 docker、github actions 等技术||Familiar with docker, github actions and other technologies. "],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"使用 APISIX-ingress-controller 作为 knative serving 网络层||APISIX ingress controller integration with Knative Serving","remark":null,"difficulty":"中","mentor":"吴舒旸","contact":"<shuyangw@apache.org>","uniont":null,"student_count":0,"description":"Knative Serving 是一个基于 Kubernetes 用于支持 Serverless 应用程序部署和服务的平台。目前 Knative 已经支持包括 Istio、Gloo、Kong 等在内的 ingress 网关作为其网络层。在这个项目中，我们希望支持使用 APISIX-ingress-controller 来为 Knative 中 Serverless 负载管理 Ingress 流量。||Knative Serving is a platform allowing you to deploy serverless applications based on Kubernetes. Especially compared to bare Kubernetes, Knative could do scale-to-zero without help with binding to cloud providers.    Currently, Knative has supported ingress gateway like Istio, Gloo and Kong as its network layer. In this project, we hope you could support APISIX ingress controller as an alternative Knative network layer, and then we could use APISIX to manage ingress traffic, especially add APISIX plugins when we need, for serverless workloads in Knative.    ","label":"210050265","link":"","tech_tag":["Go","Cloud Native","Kubernetes","Apache APISIX"],"domain_tag":["Programming Language"],"oR":["完成对于 Knative 的支持||Implement support for APISIX for Knative ","添加测试、文档，最好可以完成新功能介绍文章||Add test, docs, and preferably articles, for the new feature "],"tR":["Golang","Kubernetes","Knative/APISIX-ingress-controller/other ingress"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Add chaos test for APISIX-ingress-controller","remark":null,"difficulty":"中","mentor":"吴舒旸","contact":"<shuyangw@apache.org>","uniont":null,"student_count":0,"description":"Currently APISIX is applying chaos mesh for chaos engineering, aiming to cover the possible effect for errors in hardware and connections, which normal unit test/e2e test could not covers. We hope to also implement chaos tests to APISIX-ingress-controller to improve its robustness","label":"210050266","link":"","tech_tag":["Go","Cloud Native","Kubernetes"],"domain_tag":["Cloud Native","Dev Tools","Programming Language"],"oR":["与社区讨论测试目标||Discuss with community about the test targets ","完成混沌测试的编写||Finish implementation for chaos tests "],"tR":["Golang/Kubernetes","APISIX-ingress-controller","Chaos Mesh"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"为 APISIX-dashboard 添加 混沌测试||Add chaos test for APISIX-dashboard ","remark":null,"difficulty":"中","mentor":"吴舒旸","contact":"<shuyangw@apache.org>","uniont":null,"student_count":0,"description":"目前 APISIX 正在使用 chaos mesh 进行混沌测试，以测试硬件/与其他软件集成时的错误造成的影响。我们希望对 APISIX-dashboard 新增一部分混沌测试。||Currently APISIX is applying chaos mesh for chaos engineering, aiming to cover the possible effect for errors in hardware and connections, which normal unit test/e2e test could not covers. We hope to also implement chaos tests to APISIX-dashboard to improve its robustness.    ","label":"210050267","link":"","tech_tag":["Go","JavaScript","React","Kubernetes"],"domain_tag":["Cloud Native","Programming Language"],"oR":["与社区讨论测试目标||Discuss with community about the test targets ","完成混沌测试的编写||Finish implementation for chaos tests "],"tR":["Golang/Kubernetes","APISIX Dashboard","Chaos Mesh"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Apache APISIX 集成 AWS Certificate Manager||Apache APISIX with AWS Certificate Manager","remark":null,"difficulty":"中","mentor":"张超","contact":"<tokers@apache.org>","uniont":null,"student_count":0,"description":"集成 AWS Certificate Manager 服务，从中获取证书并直接集成到 APISIX，进而无需用户自己配置||We want to integrate the AWS Certificate Manager service to Apache APISIX, so that the latter can fetch certificates from the former and manual configuring steps are no longer required.     ","label":"210050268","link":"","tech_tag":["Go","Cloud Native","Lua","x509"],"domain_tag":["Programming Language"],"oR":["研究 Amazon Certificate Manager Service 的使用，并设计对应 APISIX 插件（以文档形式产出）||Learning how to use Amazon Certificate Manager Service and designing the new Apache APISIX plugin (output the plugin proposal)","编写新的插件对接该服务||Implementing this new plugin","编写丰富的 E2E 测试覆盖该功能||Adding more and more E2E test cases to cover this feature "],"tR":["Basic learning with OpenResty and Lua / 一定的 OpenResty, Lua 基础","Basic learning with x509.v3 digital certificate / 对 x509.v3 数字证书 有一定的认识"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"APISIX Ingress Controller 暴露 Prometheus 指标||Promethues metrics for apisix-ingress-controller ","remark":null,"difficulty":"中","mentor":"张超","contact":"<tokers@apache.org>","uniont":null,"student_count":0,"description":"我们需要为 apisix-ingress-controller 暴露更多的 Promethues metrics，并为 apisix-ingress-controller 提供一个 Grafana 大盘的配置||We want to expose more and more Prometheus metrics for apisix-ingress-controller and prepare a generic Grafana dashboard for it.    ","label":"210050269","link":"","tech_tag":["Go","Kubernetes","Prometheus"],"domain_tag":["Cloud Native","Programming Language"],"oR":["梳理 apisix-ingress-controller 所需的 Prometheus metrics（以文档形式产出）||Design more and more metrics that the apisix-ingress-controller requiring ","在代码中进行埋点处理||Adding these metrics to the apisix-ingress-controller code base","对接 grafana，暴露 json 配置||Prepare the Grafana dashboard and output the json configuration"],"tR":["Basic learning with Kubernetes / 一定的 Kubernetes 基础","Basic learning with Golang / 一定的 Promethues 基础","Basic learning with Prometheus / 一定的 Golang 基础"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Develop status and statistics interfaces in apisix-dashboard","remark":null,"difficulty":"低","mentor":"朱欣欣","contact":"<starsz@apache.org>","uniont":null,"student_count":0,"description":"The Apache APISIX Dashboard is designed to make it as easy as possible for users to operate Apache APISIX through a frontend interface. Users can manage routes, services, certificates, and other configurations in this dashboard. However, there is currently a lack of an overview page to get the current running time of the dashboard and the number of elements in the dashboard database. The goal of this project is to implement the back-end interface, which is used to obtain the running status of apisix-dashboard, and the number of elements in etcd.    apisix-dashboard 是一个方便用户管理和操作 apisix 的控制台，用户可以在该控制台中进行路由、服务、证书等配置的管理。但是目前缺少一个宏观的页面，来直观的获得 dashboard 当前的运行时间，以及 dashboard 数据库中的元素的数量。本项目的目标是实现后端接口，用于获取 apisix-dashboard 的运行状态，以及各个元素的数量等指标。","label":"210050270","link":"","tech_tag":["Go"],"domain_tag":["Programming Language"],"oR":["Know the \bconcept of route, service, certificates in apisix / 理解网关中的路由、服务、证书等概念","Develop an interface to get the runtime status of apisix-dashboard / 开发接口获取 dashboard 运行时状态","Develop an interface to get the number of each element in apisix-dashboard / 开发接口获取各个元素的数量指标"],"tR":["Familiar with golang / 熟悉 golang","Familiar with HTTP / 熟悉 HTTP 协议"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"Support invoke AWS Lambda function through plugin","remark":null,"difficulty":"中","mentor":"朱欣欣","contact":"<starsz@apache.org>","uniont":null,"student_count":0,"description":"Apache APISIX is a dynamic, real-time, high-performance API gateway.AWS Lambda is a serverless compute service that lets you run code without provisioning or managing servers, creating workload-aware cluster scaling logic, maintaining event integrations, or managing runtimes.  The goal of this project is to create a plug-in for AWS Lambda, including authentication with AWS, trigger lambda function, and get the return result of the lambda function. So that we can use lambda more securely and more easily.    apisix 是一个实时、动态、高性能的 API 网关，拥有丰富的插件。AWS Lambda 是一种无服务器的计算服务，无需预置和管理服务器，创建工作集群，维护事件即可运行代码。本项目的目标是开发一个 apisix 插件，包括和 aws 进行鉴权，触发 ， 并且获取 aws Lambda 函数结果，这样我们就可以通过 apisix 更安全，更便捷的使用 aws Lambda 函数。","label":"210050271","link":"","tech_tag":["Cloud Native","Lua","HTTP"],"domain_tag":["Cloud Native"],"oR":["Know the Authentication of aws / 了解 aws 鉴权方式","Develop a plugin to invoke AWS Lambda / 新增插件支持调用 aws Lambda"],"tR":["Familiar with Lua / 熟悉 Lua 语言","Familiar with HTTP / 熟悉 HTTP 协议"],"orgID":154,"spl":0,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"编写 APISIX 在 KubeSphere 中文档并发布相关资源","remark":null,"difficulty":"中","mentor":"李凌","contact":"<liling@apache.org>","uniont":null,"student_count":0,"description":"实践并书写文档，说明APISIX及其Dashboard在KubeSphere 平台的部署, 添加 APISIX 及其 Dashboard 到 KuebeSphere 的 App Store。","label":"210050370","link":"","tech_tag":["Cloud Native"],"domain_tag":["Cloud Native","Programming Language","OpenResty","Lua"],"oR":["Documentation / 书写文档","Publish APISIX and Dashboard to KuebeSphere / 添加 APISIX 与 Dashboard 到 KuebeSphere"],"tR":["Linux","Kubernetes","Knative","APISIX-Ingress-Controller"],"orgID":154,"spl":1,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"优化 APISIX 插件特性","remark":null,"difficulty":"低","mentor":"李凌","contact":"<liling@apache.org>","uniont":null,"student_count":0,"description":"针对 response-write 插件增加 filter_fun 的特性，并且增加更多实践文档。","label":"210050381","link":"","tech_tag":["Cloud Native"],"domain_tag":["Cloud Native"],"oR":["支持 filter_fun 特性","文档"],"tR":["OpenResty","Lua"],"orgID":154,"spl":1,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"},{"name":"改进Dashboard与Apache APISIX网关的版本兼容性","remark":null,"difficulty":"高","mentor":"白泽平","contact":"<bzp2010@apache.org>","uniont":null,"student_count":0,"description":"目前Apache APISIX网关与Dashboard项目版本为一一对应的发布模式，新开发的功能无法迁移到旧版 本Dashboard上。本项目目标为实现各版本网关存储数据模型的兼容性层，使Dashboard可以兼容以往 的多个Apache APISIX版本。","label":"210050386","link":"","tech_tag":["Go","JavaScript"],"domain_tag":["Web"],"oR":["添加Dashboard Manager API 配置项目以设置网关版本","为前端表单添加版本兼容提示，如 Apahce APISIX 2.5 版本开始提供，以防止因版本问题导致的 功能无法使用","向后端添加之前各个版本的数据模型，以实现在各个版本均可生成正确的数据"],"tR":["Golang","JavaScript"],"orgID":154,"spl":1,"organchor":"apacheapisix","orgname":"Apache APISIX||Apache APISIX"}]},{"userId":150,"anchor":"apacheiotdb","slide":"","video":"","img":"apacheiotdb.jpg","title":"Apache IoTDB 社区","project_url":"","url":"http://iotdb.apache.org/","description":"工业物联网时序数据库管理系统","full_des":"IoTDB是支持物联网时序数据收集、存储、查询与分析一体化的数据管理引擎，支持“端-边-云”一体化部署，适用于高端装备管、工厂设备、高速网联设备等多种数据管理场景。开源版开发者百余人，社区成员来自中国高校、东方国信、阿里、云智慧、用友、联想、华为、四维图新、网易等头部公司。","tech_tag":["Java","Database","Stroage","Git","IoT"],"domain_tag":["Big Data","Timeseries，Database"],"mail_list":"dev@iotdb.apache.org（订阅 dev-subscribe@iotdb.apache.org)","email":"dev@iotdb.apache.org","project_list":[{"name":"Apache IoTDB虚拟存储组","remark":"","difficulty":"高","mentor":"薛恺丰","contact":"<xuekaifeng@apache.org>","uniont":"孙泽嵩<szs19@mails.tsinghua.edu.cn>","student_count":0,"description":"在当前Apache IoTDB中，存储组既是数据组织的逻辑单位，也是并发读写的物理单位。实际场景中用户设置存储组往往根据业务语义设置，有时只有一个存储组，这意味着写入和查询的并发程度为1，无法利用多核CPU的优势。为了增加写入和查询的并行度，同时不改变用户数据在磁盘上的组织结构，需要设计一种虚拟存储组结构，解耦内存中的数据写入和磁盘上的数据存储，可以分别设置两者的并行度，实现数据组织和内存并发概念的互相独立。目前已有初步的需求分析和概要设计可供参考：https://cwiki.apache.org/confluence/display/IOTDB/Separate+memory+and+disk+management+in+storage+group+road+map+design","label":"210070148","link":"","tech_tag":["Java","Database","Storage","Git","IoT"],"domain_tag":["Big Data"],"oR":["详细设计文档","实现代码","改进测试报告"],"tR":["LSM结构数据库基础","JAVA编程语言","JAVA并发编程基础"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"Apache IoTDB 分布式链路追踪","remark":null,"difficulty":"高","mentor":"戚厚亮","contact":"<neuyilan@163.com>","uniont":"王超<ccgowork@163.com>","student_count":0,"description":"在一个系统中，一个请求可以理解为一个数据链路，其会经过很多任务处理，对于IoTDB来说，请求可能包含用户的正常读写请求，或是分布式版本中的节点之间的数据同步等请求；如果有一个完备的链路追踪技术，可以便于快速的进行故障定位、链路性能可视化、以及对链路进行分析。本项目旨在为IoTDB(特别是分布式版本)提供链路追踪技术。","label":"210070150","link":"","tech_tag":["Java","Distributed System","Database"],"domain_tag":["Distributed System"],"oR":["支持分布式链路追踪","可以很容易进行扩展，比如新增一个更细粒度的链路节点","支持热加载，即无需重启服务"],"tR":["分布式链路追踪","JAVA编程语言"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"兼容InfluxDB协议或客户端","remark":null,"difficulty":"高","mentor":"王超","contact":"<ccgowork@163.com>","uniont":"乔嘉林<646274302@qq.com>","student_count":0,"description":"InfluxDB是当前全世界排名第一个时序数据库，具有繁荣的生态系统，目前很多用户使用它来作为自己的第一选择。但是，实际上线后，会有高可用，高扩展的需求。如果换成别的数据库，会有比较高的迁移成本。本项目目标是给IoTDB兼容InfluxDB协议，具体可以分为三步：1. 支持InfluxDB写入 2. 支持InfluxDB部分查询  3. 支持完整的InfluxDB查询","label":"210070151","link":"","tech_tag":["Go","Java","Antlr"],"domain_tag":["Protocol"],"oR":["支持InfluxDB协议写入数据","支持InfluxDB常规的时间过滤，值过滤，指定tag值过滤"],"tR":["基本的 Linux 命令","IoTDB建模方式和InfluxDB建模方式","JAVA编程语言"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"Apache IoTDB 查询优化","remark":null,"difficulty":"高","mentor":"田原","contact":"<JackieTien97@gmail.com>","uniont":"乔嘉林<646274302@qq.com>","student_count":0,"description":"对比一个数据库的优劣，数据库的查询性能永远是绕不开的指标。本项目涉及多个方面的查询优化：（1）设计具有良好扩展性的数据库查询计划模块，包括逻辑计划生成、物理计划生成。（2）基于IoTDB v0.13 新增存储结构，设计更优的数据读取方式。","label":"210070154","link":"","tech_tag":["Java","Database"],"domain_tag":["Big Data"],"oR":["可轻松扩展的查询计划生成模块","针对对齐时间序列的读取优化"],"tR":["JAVA编程语言","熟悉数据库查询流程，诸如查询优化、Java的NIO库"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"自适应物理存储优化","remark":"","difficulty":"高","mentor":"乔嘉林","contact":"<646274302@qq.com>","uniont":null,"student_count":0,"description":"挑选 IoTDB 的典型查询，对查询代价进行建模，分析其中的主要耗时部分。并根据收集的查询负载，动态调整磁盘数据组织结构，从而达到加速系统查询吞吐的效果。需要了解IoTDB文件结构、查询流程、磁盘数据读取原理，并在关键流程中进行改动。","label":"210070174","link":"","tech_tag":["Java","Database","Git"],"domain_tag":["Big Data"],"oR":["设计文档","代码实现，PR合并","动态负载的系统性能测试报告"],"tR":["github","java"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"Apache IoTDB 基于数据价值敏感的合并策略","remark":null,"difficulty":"高","mentor":"孙泽嵩","contact":"<szs19@mails.tsinghua.edu.cn>","uniont":null,"student_count":0,"description":"在IoTDB的实际使用场景中，有的时间序列会被经常查询，有的时间序列被查询频率较低，并且对于大部分查询任务来说，较老的数据不会被经常查询，而较新的数据被查询的可能性更高，因此需要新增一种基于数据价值敏感的合并策略，优先合并热点时序和新写入的数据，提高合并对用户带来的查询收益。并且现阶段IoTDB不支持对用户写入和查询规律做动态探测，还需要设计一种对用户写入和查询作动态统计的机制。","label":"210070175","link":"","tech_tag":["Java","Database","Git"],"domain_tag":["Big Data"],"oR":["基于数据价值敏感合并策略的详细设计文档","基于数据价值敏感合并策略的实现代码","相关性能对比测试结果报告"],"tR":["LSM结构数据库基础","JAVA编程语言及基本语法","熟练使用各种设计模式"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"Apache IoTDB 实现对于TEXT类型的字典编解码","remark":null,"difficulty":"中","mentor":"刘大伟","contact":"<atoildw@163.com>","uniont":null,"student_count":0,"description":"在IoTDB中，TEXT 作为一种可写入的数据类型，目前暂无相应的编码方式。字典编码可以在重复字符较高的场景下提供非常好的压缩率，加快磁盘写入，同时还能在查询时，减少反序列化时间，加速读取。本项目目标为增加针对 TEXT 类型的字典编码。","label":"210070186","link":"","tech_tag":["Java","Database","Storage","Git"],"domain_tag":["Big Data"],"oR":["基于现有 encode/decode 接口的字典编码详细设计文档","TEXT类型的字典编码的编解码实现代码","相关性能对比测试结果报告"],"tR":["JAVA编程语言及基本语法","熟练使用各种设计模式","常用编码算法"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"},{"name":"IoTDB 数据文件索引管理","remark":null,"difficulty":"中","mentor":"田原","contact":"<JackieTien97@gmail.com>","uniont":"乔嘉林<646274302@qq.com>","student_count":0,"description":"每个数据文件 TsFile 对应一个时间索引文件（TsFileResource），其中记录了 TsFile 中各个设备的时间范围。当前 IoTDB 在启动时，会将所有 TsFileResource 加载到内存中，这在内存足够大，文件数量和设备数量不多时，是可以接受的。但是在内存受限，文件数量不断增多或者设备数量比较多时，这种方式会导致 TsFileResource 占用过多内存。需要考虑为 TsFileResource 建立缓存机制，在内存中只保留部分活跃的 TsFileResource。","label":"210070274","link":"","tech_tag":["Java","Storage","Git"],"domain_tag":["Big Data"],"oR":["设计与实现TsFileResource的缓存机制","代码实现，PR合并"],"tR":["JAVA编程语言","了解多种缓存策略与实现"],"orgID":150,"spl":1,"organchor":"apacheiotdb","orgname":"Apache IoTDB 社区"}]},{"userId":159,"anchor":"simplexx","slide":"","video":"","img":"simplexx.jpg","title":"Simple-XX||Simple-XX","project_url":"https://github.com/Simple-XX/Summer202X/tree/master/2021","url":"https://github.com/Simple","description":"帮助初学者实现复杂系统。||To help beginners implement complex systems.","full_des":"在学习操作系统、编译原理时觉得难学难懂？你需要自己动手实现它！我们社区使用基于 Git 分支的增量式方案，向初学者提供简单的代码实现，帮助你快速成长。社区贡献者由在校学生组成，欢迎加入我们。||Do you find it difficult to understand when learning operating systems and compilingprinciples? You need to do it yourself! Our community uses an incremental scheme based onGit branch to provide simple code implementation for beginners and help you acquiremaster quickly. Community contributors are made up of on-campus students. Welcome tojoin us.","tech_tag":["Linux","C","C++","Git","Scala"],"domain_tag":["Linux Kernel","OS","CPU，Compiler，Renderer"],"mail_list":"simple-xx@googlegroups.com  zone.niuzh@hotmail.com  302807330@qq.com","email":"https://github.com/Simple-XX/Summer202X","project_list":[{"name":"为SimpleCPU实现可背靠背执行Cache","remark":null,"difficulty":"高","mentor":"陈国凯","contact":"<chenguokai17@mails.ucas.ac.cn>","uniont":null,"student_count":0,"description":"作为现代处理器的关键组件之一，Cache能够充分发掘软件执行中存在的局部性，有效克服冯诺伊曼体系结构下存储墙问题。一个正确且高效的Cache能够有效提升SimpleCPU的执行效率。","label":"210060192","link":"","tech_tag":["risc-v"," CPU Cache"],"domain_tag":["CPU"],"oR":["一个使用Chisel 3语言实现并在verilator仿真环境下正常工作的组相连Cache，在连续访存情形下可连续命中。","Cache可位于AXI接口或SRAM接口处，容量不小于2KB，至少为2路组相连，支持使用risc-v fence系列指令控制。应有机制确保Cache的存在不干扰外设正常工作。"],"tR":["熟悉Chisel或/及 verilog 语言","熟悉AXI协议","最好熟悉RISC-V指令集"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"为SimpleCPU增加Sv39模式TLB支持","remark":null,"difficulty":"高","mentor":"陈国凯","contact":"<chenguokai17@mails.ucas.ac.cn>","uniont":null,"student_count":0,"description":"TLB是现代处理器安全运行的重要保障，也是现代操作系统运行所必需的组件，RISC-V作为新一代开源指令集，其TLB设计规范汲取众家之长，为软件提供了简洁直观的接口。而这也对其硬件实现提出了较高要求。","label":"210060193","link":"","tech_tag":["RISC-V"," CPU TLB"],"domain_tag":["CPU"],"oR":["一个使用Chisel语言实现的符合RISC-V sv39标准的TLB。","TLB实现后，处理器应当能够运行risc-v官方测试集中开启TLB的测试点。"],"tR":["熟悉Chisel或/及verilog语言","对操作系统和TLB有一定了解","最好熟悉RISC-V指令集"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"为SimpleCPU增加Supervisor和User态支持","remark":null,"difficulty":"高","mentor":"陈国凯","contact":"<chenguokai17@mails.ucas.ac.cn>","uniont":null,"student_count":0,"description":"RISC-V当前已定义Machine、Supervisor、User三种特权态，在不同的特权态下软件允许执行的指令、允许操纵的CSR不同，软件也可以借此实现一些安全特性。特别地，配合前述TLB功能即可实现完善的内核/用户程序隔离保护。","label":"210060194","link":"","tech_tag":["RISC-V"," CPU"],"domain_tag":["CPU"],"oR":["一个支持M/S/U特权态规范中全部CSR、全部所需功能的特权态实现，实现相关访问限制与异常触发。"],"tR":["熟悉Chisel或/及verilog语言","最好熟悉RISC-V指令集"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"为SimpleCPU拆分流水线优化时序","remark":"","difficulty":"高","mentor":"临时","contact":"<a6813140@gmail.com>","uniont":null,"student_count":0,"description":"当前SimpleCPU采用二级流水线结构，时序有较大不足，需要将其流水线进行拆分。","label":"210060195","link":"","tech_tag":["RISC-V"," CPU"],"domain_tag":["CPU"],"oR":["将现有流水线拆分为至少3级，并尽可能保证时序划分合理。"],"tR":["熟悉Chisel或/及verilog语言","最好熟悉RISC-V指令集，有时序优化经验"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"完善编译器架构","remark":null,"difficulty":"高","mentor":"牛志宏","contact":"<a6813140@hotmail.com>","uniont":null,"student_count":0,"description":"SimpleCompiler 目前仅完成了部分前端处理，需要进行完善","label":"210060196","link":"","tech_tag":["C++","Compiler"],"domain_tag":["Compiler"],"oR":["支持部分 C99 标准的前端","x86 平台下的后端","简单的优化","设计时需要考虑跨平台问题"],"tR":["C++","编译原理","x86 指令集"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"为 SimpleKernel 编写项目文档","remark":null,"difficulty":"中","mentor":"牛志宏","contact":"<a6813140@hotmail.com>","uniont":null,"student_count":0,"description":"SimpleKernel 是一个用 C++ 实现的简单内核，目前支持 x86，arm，riscv。  需要一份文档帮助使用者熟悉代码。","label":"210060234","link":"","tech_tag":["C++","kernel，文档"],"domain_tag":["kernel"],"oR":["为每个 branch 编写 README，介绍原理与代码实现","说明每个代码目录下的文件用途，有需要注意的地方要单独说明","整理相关资料，存放在相应的目录下","对应的英文版（可选）"],"tR":["内核相关知识","C++","x86，arm，riscv 相关知识"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"多平台内存管理优化","remark":null,"difficulty":"高","mentor":"牛志宏","contact":"<a6813140@hotmail.com>","uniont":null,"student_count":0,"description":"对多平台的内存管理进行改进。  Simple Kernel 已经完成了 x86 平台下的物理内存探测以及二级分页下的虚拟内存，现在需要进行拓展。","label":"210060235","link":"","tech_tag":["kernel，内存管理"],"domain_tag":["kernel"],"oR":["arm，riscv64 下的物理内存探测与管理","重新设计虚拟内存部分，支持最多 4 级页表","malloc，free 的实现","new，delete 的实现(C++17)"],"tR":["内核相关知识","内存管理相关知识","C++","x86，arm，riscv 相关知识"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"多平台多核与任务管理","remark":null,"difficulty":"高","mentor":"临时","contact":"<a6813140@gmail.com>","uniont":null,"student_count":0,"description":"抽象出多核、任务管理相关数据与操作，并实现 x86，arm，riscv 下的任务管理","label":"210060236","link":"","tech_tag":["C++","kernel，任务管理"],"domain_tag":["kernel"],"oR":["平台无关的多核抽象","平台无关的任务抽象","x86/arm/riscv 下任务管理的实现"],"tR":["内核相关知识","C++","任务管理相关知识","x86，arm，riscv 相关知识"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"为 SimpleKernel 实现测试用例和自动化测试流水线","remark":null,"difficulty":"中","mentor":"xiaoerlaigeid","contact":"<xiaoerlaigeid@qq.com>","uniont":null,"student_count":0,"description":"SimpleKernel 是一个用 C++ 实现的简单内核，目前支持 x86，arm，riscv。  需要提供目前simplekernel的测试用例以及CICD流水线。","label":"210060371","link":"","tech_tag":["kernel devops"],"domain_tag":["devops"],"oR":["实现目前功能测试用例，并实现自动化流水线测试"],"tR":["内核相关知识","C++","x86，arm，riscv 相关知识"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"基于原生系统API的光栅化渲染器实现","remark":null,"difficulty":"高","mentor":"xiaoerlaigeid","contact":"<xiaoerlaigeid@qq.com>","uniont":null,"student_count":0,"description":"使用C++和原生系统API实现一个光栅化渲染器","label":"210060372","link":"","tech_tag":["C++","图形学，渲染器"],"domain_tag":["图形学"],"oR":["优化/补充已有代码","填充算法","贴图支持","背面消隐","摄像机的实现","渲染结果输出"],"tR":["熟悉C++","熟悉图形学","了解填充算法","了解背面消隐算法","其它相关图形算法"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"},{"name":"实现 SimplePhysicsEngine 接口以及初步基本功能","remark":null,"difficulty":"高","mentor":"xiaoerlaigeid","contact":"<xiaoerlaigeid@qq.com>","uniont":null,"student_count":0,"description":"重新使用C++实现物理仿真算法。需要借助 基于CGAL和 Eigen 的 API 进行图形学中物理模拟算法的实现。实现包括 弹簧质点模型、有限元模型、碰撞检测等算法。","label":"210060373","link":"","tech_tag":["C++","图形学，物理引擎"],"domain_tag":["图形学，物理引擎"],"oR":["重新编译 dtk 对 deformable toolkit 库当前已有内容的总结","参考dtk API进行移植 重新定义API接口","将之前未实现的FEM 算法实现","使用当前API 编写1-2个简单demo 并可视化。（内容可以后续进行探讨）","实现文档进行简单描述。"],"tR":["熟悉cpp","熟悉图形学"],"orgID":159,"spl":1,"organchor":"simplexx","orgname":"Simple-XX||Simple-XX"}]},{"userId":146,"anchor":"tuna","slide":"","video":"","img":"tuna.jpg","title":"清华大学 TUNA 协会","project_url":"https://tuna.moe/blog/2021/ospp-summer-2021/","url":"https://tuna.moe/","description":"清华大学网络技术与开源软件爱好者团体，有较大影响力的高校开源社区。","full_des":"清华大学 TUNA 协会全名清华大学学生网络与开源软件协会（Tsinghua University TUNA Association），是由清华大学网络技术和开源软件爱好者、技术宅组成的团体。社团成立于2011年，目前校内外成员超过500人，校内注册人数接近300人，校内核心（活跃）成员超过50人。 TUNA 协会维护的清华大学开源软件镜像站，包括数百个开源软件。是中国高校目前规模最大的开源镜像站。TUNA 协会为这些业务开发的许多开源软件，包括镜像管理同步套件 tunasync、直播弹幕套件 danmaQ 等，都被国内外同行采用并广受好评。 TUNA 协会也与其他开源社区进行广泛联络，与多个高校开源学生组织、国内开源社区、企业等开展合作，共同举办软硬件件自由日、Release Party 等公众活动，推广开源理念，普及基础知识，为中国开源事业贡献力量，起到了较好的宣传引导作用。","tech_tag":["Go","Linux","Python","Container","NodeJS","C++","Rust","Stroage","Git","Docker","Mirrors，Qt"],"domain_tag":["Linux Kernel","Dev Tools","服务器运维","网络编程","系统工具"],"mail_list":"tuna-general@googlegroups.com","email":"staff@tuna.tsinghua.edu.cn","project_list":[{"name":"开源弹幕系统改进","remark":null,"difficulty":"高","mentor":"陈晟祺","contact":"<shengqi.chen@tuna.tsinghua.edu.cn>","uniont":"张宇翔<yuxiang.zhang@tuna.tsinghua.edu.cn>","student_count":0,"description":"弹幕是常用的听众与讲者的互动手段。TUNA 开发了自己的 C/S 弹幕系统 danmaQ（见下面的仓库），使用于多种场合，也被多个发行版收录。其服务端使用 Python 编写，客户端使用 Qt 编写，基本实现了跨平台。然而，目前该项目缺乏维护，代码比较陈旧，一些功能缺乏（如 Web 弹幕墙）、不完善（如审核）或已经损坏（如微信互联）。此外，清华大学计算机系科协亦有一套自己实现的弹幕系统 Comment9（见下），使用 Node.js 编写。它与 danmaQ 相比，具有一些高级功能（如多个活动、弹幕墙、多路审核、支持硬件弹幕机），但缺乏弹幕属性配置等。我们希望，整合当前两个系统的功能，改进得到一套全功能的开源弹幕系统，覆盖用户需求。","label":"210160037","link":"","tech_tag":["Python","NodeJS","Qt"],"domain_tag":["Web"],"oR":["无法填写层级，详见 https://tuna.moe/blog/2021/ospp-summer-2021/"],"tR":["Qt + Python + Node.js 编程（基本语言、简单GUI、使用网络框架）","网络编程（WebSocket / HTTP 协议）","NoSQL 数据库（redis / mongoDB）","简单前端设计（CSS / Javascript）"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"跨平台 NFC 读写套件的维护与升级","remark":null,"difficulty":"中","mentor":"陈晟祺","contact":"<shengqi.chen@tuna.tsinghua.edu.cn>","uniont":"党凡<fan.dang@tuna.tsinghua.edu.cn>","student_count":0,"description":"我们基于 Flutter 框架，实现了跨平台的 NDEF 格式解析库、移动端 NFC 框架和 NFC 信息读取应用 NFSee。目前，Flutter 已经发布了 2.0 版本，引入了较多的变化，迁移到新框架有一定的工作量。同时，在使用过程中，这些库积累了一些 bug 和功能请求，需要进一步的修复和实现。","label":"210160038","link":"","tech_tag":["Flutter"],"domain_tag":["NFC，Mobile"],"oR":["将提供的三个项目均迁移到 Flutter 2.0 版本","维护 NDEF 库，修复 bug，提供更多格式支持","维护 flutter_nfc_kit 库，修复 bug，实现流式读卡接口（可选），并相应更新文档","维护 NFSee，修复界面 bug，并添加更多卡片支持（如果有）"],"tR":["使用过 Dart 编程语言和 Flutter 开发框架（或能够及时学习）","了解 NFC 基础知识和常见的 NFC 标准（导师可提供相关文档指导）","有支持 NFC 的 Android / iOS 设备（可提供，但具备更佳）"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"Windows 平台 SSH agent 的统一实现","remark":null,"difficulty":"高","mentor":"许朋程","contact":"<i@jsteward.moe>","uniont":null,"student_count":0,"description":"在 Windows 平台使用 ssh agent 远不及 Linux 平台方便。通常 ssh agent 需要满足以下两个角色：    * 保管用户的 ssh private key 或是和 smartcard 通信  * 接受来自 ssh 客户端的 authentication 请求    Windows 上存在 PuTTY (pageant)，Win32 OpenSSH, WSL OpenSSH 等多种 ssh 实现，有 pageant socket 和 windows named pipe (OpenSSH) 两种 agent 通信协议。同时，agent 实现也有 GnuPG agent (simulated pageant, for gpg smartcard), Windows OpenSSH agent 两种。本项目需要参与学生实现一个 ssh agent 协议翻译器，实现不同 ssh 客户端使用同一个 ssh agent 实例的任务。","label":"210160039","link":"","tech_tag":["C#，GPG，SSH，PowerShell，Network，Socket"],"domain_tag":["Windows"],"oR":["此处无法填写，详见 https://tuna.moe/blog/2021/ospp-summer-2021/"],"tR":["熟悉任何一种 Windows 平台上可以 开箱即用 的的编程语言（推荐 C++/C# .NET，也包括脚本语言，如 PowerShell）","熟悉 Windows named pipe, Unix socket (on Linux and Windows) 相关操作","了解 ssh agent 的工作机理和使用方法","了解 gnupg 使用方法（ssh 模拟部分）"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"MirrorZ：镜像站搜索引擎——镜像站状态的表示、收集与利用","remark":null,"difficulty":"中","mentor":"郑鈜壬","contact":"<hongren.zheng@tuna.tsinghua.edu.cn>","uniont":null,"student_count":0,"description":"项目描述：国内镜像站较多，但其内容、同步状态、网络环境各不相同。例如 OpenWrt 镜像，只有部分镜像站拥有 snapshots 的内容，又例如一些镜像的同步状态落后几天乃至几周，其使用的同步后端也各不相同，又例如一些高校的镜像站对校外限速，例如其接入的线路是教育网，对三大运营商用户来说访问较为不理想。之前的 mirrorhub 项目静态地通过用户的网段进行负载均衡，目前的 mirrorz 只有实验性的自动跳转后端与搜索后端，上述实现的指标与功能都不够完善，效果也不理想，所以一个兼顾上述三项内容的镜像站搜索引擎是我们所需要的。","label":"210160040","link":"","tech_tag":["Go","C++","Database","Rust","Backend，Network"],"domain_tag":["Web","Mirror"],"oR":["对镜像站的状态有较好的表示","对镜像站各镜像的同步状态有较好的表示","将上述指标进行收集","基于收集的指标实现自动跳转或反代的后端","如果可能，实现一个搜索后端"],"tR":["爬取镜像站状态的爬虫（例如使用 Python、Node.js 实现）","数据库 （例如 InfluxDB）","高性能的后端 （例如使用 Rust、Go 实现）"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"SCIM Qt5 移植","remark":null,"difficulty":"高","mentor":"续本达","contact":"<heroxbd@gentoo.org>","uniont":null,"student_count":0,"description":"SCIM 是历史悠久的输入法框架，早期为 GNU/Linux 系统的中文本土化立下了汗马功劳，然而近年来 SCIM 的开发团队已经不再活跃，开发停滞，项目处于维护状态。当前 SCIM 依旧可以在各大发行版上顺畅使用，唯一缺失的功能是对 Qt5 的支持。本项目计划把 SCIM 移植到 Qt5。","label":"210160209","link":"","tech_tag":["Linux","C++","Qt"],"domain_tag":["OS"],"oR":["运行于 Qt5 的 SCIM","修复 bugs.debian.org 上的其它 SCIM bug"],"tR":["有 SCIM 使用经验","C++ 编程能力","Qt 编程经验","有一年以上 Debian 使用经验"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"Gentoo Android App","remark":null,"difficulty":"高","mentor":"许朋程","contact":"<i@jsteward.moe>","uniont":"陈晟祺<shengqi.chen@tuna.tsinghua.edu.cn>,续本达<heroxbd@gentoo.org>","student_count":0,"description":"Gentoo on Android 可以在 Android 上运行 Gentoo Prefix，实现无性能损耗的完整的 GNU 环境。然而，当前的 Gentoo on Android 一方面需要 root 权限，另一方面需要手动安装，亟需一个不需 root 的 Android App 完成安装，更方便地把手机转换成开发和生产工具。在 Android 的系统中，每个 App 有一个专有的用户 uid 和一个保留的空间存放数据，适合嵌入一个这个 uid 下的 Gentoo Prefix 实例，解决当前 Gentoo on Android 的两个问题。","label":"210160210","link":"","tech_tag":["Linux","Android"," Gentoo"],"domain_tag":["OS"],"oR":["自由开源的 Gentoo Android App"],"tR":["有 Android App 开发能力","有一年以上 Gentoo 和 Android 使用经验","熟练使用 Git"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"Emacs Jupyter client","remark":null,"difficulty":"高","mentor":"续本达","contact":"<heroxbd@gentoo.org>","uniont":null,"student_count":0,"description":"Emacs 是久负盛名的编辑器，以其高度的可编程扩展性闻名于世。Jupyter 是基于 HTTP 的远程异步运行系统，在科学计算有广泛的应用。EIN 项目为 Emacs 提供 Jupyter 客户端，可以弥补 Jupyter 网页上输入功能薄弱的劣势，把 Emacs 的强大编辑功能与 Jupyter 异步执行功能有机结合，成为 literate programming 的最强方案之一。但是，EIN使用的 HTTP 框架由基于 callback 的异步编程框架，维护较为困难，本项目将使用 coroutine 的函数式编程模型重写 EIN，完成现代的 Emacs Jupyter 客户端。","label":"210160211","link":"","tech_tag":["Linux","Emacs"," Lisp"],"domain_tag":["Dev Tools"],"oR":["使用函数式 coroutine 重写 EIN 的异步模块，提升 EIN 的稳定性"],"tR":["有一年以上 Emacs 使用经验","有 Emacs LISP 编程经验","熟练使用 Git"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"},{"name":"完善 Gentoo ROCm GPGPU 框架","remark":null,"difficulty":"高","mentor":"续本达","contact":"<heroxbd@gentoo.org>","uniont":null,"student_count":0,"description":"ROCm 是 AMD 显卡的自由开源的科学计算系统，HIP 是 ROCm 的 CUDA 兼容层，提供类似于 CUDA 的 API。然而 ROCm 和 HIP 的文档校为缺乏，除了官方指定的个别平台之外，安装和部署较为困难。Gentoo Linux 作为一个元发行版，已经率先完成了对 ROCm 的支持。但是其构建系统仍有一系列问题不能满足 Gentoo 社区的官方要求。本项目将完善 Gentoo 的 ROCm 软件包，并为 PyTorch, Tensorflow 提供 AMD 设备上的进行方案，完成发行版上开源 GPGPU 框架的布局。","label":"210160212","link":"","tech_tag":["Linux","C","Gentoo"," ROCm"],"domain_tag":["Linux Kernel","OS","Dev Tools"],"oR":["修复 Gentoo 的 ROCm 软件包、PyTorch-ROCm 软件包和Tensorflow-ROCm 软件包的构建系统 bug"],"tR":["有一年以上 Gentoo 使用经验","Gentoo portage/ebuild 理解和写作能力","shell 编程能力","熟练使用 Git"],"orgID":146,"spl":1,"organchor":"tuna","orgname":"清华大学 TUNA 协会"}]},{"userId":164,"anchor":"oiwiki","slide":"","video":"","img":"oiwiki.jpg","title":"OI Wiki||OI Wiki","project_url":"https://github.com/OI-wiki/OI-wiki/wiki/Open-Source-Promotion-Plan-Summer-2021#","url":"https://oi-wiki.org","description":"给所有人的编程竞赛知识整合站点，内含炫酷算术魔法！||Wiki of OI / ICPC for everyone.","full_des":"OI Wiki 是一个编程竞赛知识整合站点，提供有趣又实用的编程竞赛知识以及其他有帮助的内容，帮助广大编程竞赛爱好者更快更深入地学习编程竞赛。同时我们围绕 OI Wiki 主站开展一些相关的基础设施建设，包括 markdown 渲染工具以及周边诸多开发工具。详情可以访问 <https://github.com/OI-wiki>||OI Wiki aims to share knowledge on competitive programming, and we also maintain some related infrastructures, including markdown rendering tools and exporting tools.","tech_tag":["Python","C","JavaScript","NodeJS","AI","C++","TypeScript","Automation","Git","Docker"],"domain_tag":["Dev Tools","Web","Programming Language","Algorithms"," Data Structures"],"mail_list":"https://t.me/oiwiki> 以及 QQ 群 588793226","email":"hi@oi-wiki.org","project_list":[{"name":"OI Wiki 在线运行工具","remark":"","difficulty":"高","mentor":"billchenchina","contact":"<billchenchina2001@gmail.com>","uniont":null,"student_count":0,"description":"**在申请本项目前请一并阅读项目（示例的持续集成），且请进行必要的交流**  目前，我们展示的示例代码只能通过复制到别的平台来进行调试，我们希望能通过本项目，将示例代码与文档分离，并在 CI 时使用样例数据对示例代码进行校验，从而实现更方便的对示例代码的运行和测试。","label":"210140091","link":"","tech_tag":["Python","JavaScript","NodeJS","C++","TypeScript"],"domain_tag":["Algorithms"," Data Structures"],"oR":["与目前编码风格保持一致，尽量以 Typescript 为主要编程语言","实现在线运行工具","协助解决目前项目中存在的 issue"],"tR":["前端开发的相关知识（HTML/CSS/Javascript/Typescript/React）","能使用 Git 进行协作开发"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki 引入计划","remark":"","difficulty":"中","mentor":"sshwy","contact":"<jy.cat@qq.com>","uniont":"ksyx<ksyxmeow@outlook.com>","student_count":0,"description":"在 wiki 的编写过程中需要参考大量的外界资料以使得 wiki 质量更高、更为完善及更易读。本项目主要工作内容为参考、翻译外文资料并将其融入 OI Wiki 现有内容中。","label":"210140092","link":"","tech_tag":["C++"],"domain_tag":["Algorithms"," Data Structures"],"oR":["完成部分的参考资料和现有内容的合并工作"],"tR":["具有一定的英语能力","能使用 Git 进行协作开发","熟悉 Markdown 和 MathJax 语法","热爱算法与数据结构","具有翻译经验者优先"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki 国际化","remark":"","difficulty":"中","mentor":"ksyx","contact":"<ksyxmeow@outlook.com>","uniont":null,"student_count":0,"description":"OI Wiki 上收录了大量优质的算法内容，但是他们主要是以中文编写的，会对外国友人的学习造成一定的障碍，因此为了更好的扩大 OI Wiki 的影响力和帮助到更多的人，开展本项目。本项目主要内容为将 OI Wiki 上现有的内容按照格式要求翻译成英文。","label":"210140093","link":"","tech_tag":["C++"],"domain_tag":["Algorithms"," Data Structures"],"oR":["将部分现有页面（含图片内的中文）翻译成英文","校对现有已翻译内容，将主站增加的部分内容加入"],"tR":["具有一定的英语能力","能使用 Git 进行协作开发","熟悉 Markdown 和 MathJax 语法","热爱算法与数据结构","具有翻译经验者优先"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki 示例的持续集成","remark":"","difficulty":"高","mentor":"ir1d","contact":"<sirius.caffrey+OI@gmail.com>","uniont":null,"student_count":0,"description":"OI Wiki 上目前收录了大量题目等代码，我们希望能整理这部分代码并统一风格（移除快速读入、宏等与主体内容无关的部分）。同时，在这个项目中，我们希望能对这部分代码部署持续集成功能，来方便维护。**在申请本项目前请一并阅读项目 （在线运行工具），且请进行必要的交流**。","label":"210140094","link":"","tech_tag":["JavaScript","NodeJS","C++","TypeScript","Automation"],"domain_tag":["Algorithms"," Data Structures"],"oR":["整理代码风格","对示例代码部署持续集成功能"],"tR":["有持续集成构建经验、C++ 语言能力","能使用 Git 进行协作开发","热爱算法与数据结构"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki Python 示例重构","remark":"","difficulty":"中","mentor":"Xeonacid","contact":"<acid@oi-wiki.org>","uniont":null,"student_count":0,"description":"OI Wiki 上收录了大量题目等代码，主要是使用 C++ 来进行实现的。在这个项目中，我们希望能对经典算法维护 python 版本的简洁实现。","label":"210140095","link":"","tech_tag":["Python","C++"],"domain_tag":["Algorithms"," Data Structures"],"oR":["对经典算法维护 Python 版本的简洁实现","要求可以提交到 Online Judge 进行测试"],"tR":["能使用 Git 进行协作开发","熟悉 Markdown 和 MathJax 语法","熟练使用 Python","热爱算法与数据结构"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"优化基于 unifiedjs 的 markdown 基础设施","remark":"","difficulty":"高","mentor":"mgt","contact":"<mgt@oi-wiki.org>","uniont":null,"student_count":0,"description":"在新前端中，为了支持我们的诸多 markdown 自定义语法，我们使用了 remark 作为 markdown parser，并使用 rehype 生成对应的 html 页面。目前我们采用的是 remark@12.0，为了进一步提升性能，我们计划将基础设施升级到最新版（13.0 以上），并采用 micromark。在这个项目中，我们希望能将这些仓库的实现进行升级（remark-details, remark-math-space, remark-clang-format,  rehype-details）。","label":"210140096","link":"","tech_tag":["JavaScript","NodeJS","TypeScript"],"domain_tag":["Dev Tools"],"oR":["将这些仓库的实现进行升级（remark-details, remark-math-space, remark-clang-format,  rehype-details）"],"tR":["熟练使用 JavaScript","能使用 Git 进行协作开发","熟悉 remark 系列生态者优先"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"优化 OI Wiki pdf 导出工具","remark":"","difficulty":"高","mentor":"mgt","contact":"<mgt@oi-wiki.org>","uniont":null,"student_count":0,"description":"目前，我们已有将 markdown 导出为基于 LaTeX 的 pdf 工具，我们希望在本项目中进一步将其完善（https://github.com/OI-wiki/OI-Wiki-export ）。","label":"210140097","link":"","tech_tag":["JavaScript","NodeJS","TypeScript","LaTeX"],"domain_tag":["Dev Tools"],"oR":["优化对链接的处理，将 pdf 中的超链接对应到页码或者二维码（并将二维码嵌入页面）","实现 .epub / .azw3 格式的导出","优化输出的 pdf 的样式，处理不同语言的字形和字体","升级 remark 版本"],"tR":["熟练使用 JavaScript","能使用 Git 进行协作开发","熟悉 LaTeX 与常用宏包","熟悉 remark 系列生态"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki 在线题单提名及投票功能","remark":"","difficulty":"高","mentor":"ir1d","contact":"<sirius.caffrey+OI@gmail.com>","uniont":null,"student_count":0,"description":"随着 NOI 考纲的发布，我们希望能尽量按照考纲整合优质题目资源。然而，由于题目质量参差不齐，我们希望在新上线的前端系统中支持提名优质题目并对现有例题进行投票的功能。","label":"210140098","link":"","tech_tag":["JavaScript","NodeJS","TypeScript"],"domain_tag":["Algorithms"," Data Structures"],"oR":["与目前编码风格保持一致，尽量以 Typescript 为主要编程语言","实现在线题单提名及投票功能","协助解决目前项目中存在的 issue"],"tR":["前端开发的相关知识（HTML/CSS/Javascript/Typescript/React）","熟练使用 Git 进行协作开发"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"优化 OI Wiki 前端渲染框架","remark":"","difficulty":"高","mentor":"xd","contact":"<xd.summer@liquid.ist>","uniont":null,"student_count":0,"description":"当前，OI Wiki 使用 mkdocs 作为静态页面生成引擎。然而由于 mkdocs 并非专门为 Wiki 类项目设计，因而与我们的需求存在较大差距，此外还难以实现对语法和页面的定制。因此，目前 OI Wiki 正在将前端迁移到基于 React 和 GraphQL 的页面生成框架 Gatsby 上，从而实现对页面的深度定制。目前，我们已经实现了基本的框架代码（见下面的仓库）。然而它还不尽完善，我们希望为它添加更多的功能，覆盖用户的需求。","label":"210140144","link":"","tech_tag":["JavaScript","NodeJS","TypeScript"],"domain_tag":["Dev Tools","Web"],"oR":["协助升级 gatsby 到最新的版本","与目前编码风格保持一致，尽量以 Typescript 为主要编程语言","优化前端代码，提升在移动设备上的响应速度","尽可能实现 i18n 功能，为页面及框架提供中英双语支持","加入用户推荐和投票功能，对用户提交的推荐链接根据 vote 高低的顺序进行展示","协助解决目前项目中存在的 issue"],"tR":["前端开发的相关知识（HTML/CSS/Javascript/Typescript/React）","能使用 Git 进行协作开发","熟悉 remark 工具链或 gatsby 者优先"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"OI Wiki 在线编辑工具","remark":"","difficulty":"高","mentor":"xd","contact":"<xd.summer@liquid.ist>","uniont":null,"student_count":0,"description":"目前，如果想参与 OI Wiki 的编辑，就需要 clone 整个仓库进行构建，我们希望在即将上线的基于 Gatsby 的网站中，支持在线编辑 markdown 文档。由于我们使用了一些 remark 插件，Github 自带的 markdown 预览功能相比之下比较匮乏。","label":"210140145","link":"","tech_tag":["JavaScript","NodeJS","TypeScript"],"domain_tag":["Dev Tools","Web"],"oR":["与目前编码风格保持一致，尽量以 Typescript 为主要编程语言","完善项目的 Typescript 支持，将部分使用 Javascript 书写的旧代码迁移至 Typescript","实现在线编辑工具","协助解决目前项目中存在的 issue"],"tR":["前端开发的相关知识（HTML/CSS/Javascript/Typescript/React）","能使用 Git 进行协作开发","熟悉 remark 工具链或 gatsby 者优先"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"撰写、完善 OI Wiki 上的内容","remark":"","difficulty":"高","mentor":"marcythm","contact":"<marcythm@gmail.com>","uniont":null,"student_count":0,"description":"OI Wiki 是一个编程竞赛知识整合站点，提供有趣又实用的编程竞赛知识以及其他有帮助的内容，帮助广大编程竞赛爱好者更快更深入地学习编程竞赛。然而，算法与数据结构知识迭代更新较快，仍有很多 OI Wiki 尚未涉及的内容。本项目目标是选定若干新颖有趣的 topic，并将其引入 OI Wiki。寻找有趣的 topic 可以参考 Issue 中的 Iteration Plan，[e-maxx-eng](https://cp-algorithms.com/)， [AlgoWiki](https://wiki.algo.is/) ，以及 NOI 考纲等资料 。","label":"210140146","link":"","tech_tag":["Python","C++"],"domain_tag":["Algorithms"," Data Structures"],"oR":["编写完整而易于理解的文档，能使初学者快速了解到算法或数据结构的主要思想","使用 C / C++ 完整实现所选的算法数据结构","设计 testcase","协助解决目前项目中存在的 issue"],"tR":["能使用 Git 进行协作开发","熟悉 C / C++","热爱算法与数据结构"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"},{"name":"编修、清理、校订 OI Wiki 文档","remark":"","difficulty":"中","mentor":"marcythm","contact":"<marcythm@gmail.com>","uniont":null,"student_count":0,"description":"OI Wiki 上收录了大量优质的算法内容，但是仍有相当多的页面在语言表述上较为随意，会对大家学习体验与效果产生一定的影响。本项目希望能将 OI Wiki 上现有的内容按照格式要求进行合理的编修、调整格式、清理、校订。","label":"210140147","link":"","tech_tag":["Python","C++"],"domain_tag":["Algorithms"," Data Structures"],"oR":["梳理部分现有页面的语言风格及表述"],"tR":["具有文档 / wiki 维护经验","能使用 Git 进行协作开发","熟悉 Markdown 和 MathJax 语法","热爱算法与数据结构"],"orgID":164,"spl":1,"organchor":"oiwiki","orgname":"OI Wiki||OI Wiki"}]},{"userId":233,"anchor":"openlookeng","slide":"","video":"","img":"openlookeng.jpg","title":"openLooKeng社区||openLooKeng Community","project_url":"https://openlookeng.io/zh-cn/events/summer-2021.html","url":"https://openlookeng.io/","description":"openLooKeng是一款开源的数据虚拟化引擎，像使用数据库一样使用大数据。||openLooKeng is a distributed, low latency, reliable data engine for all data, big or small, local or remote. It help big data users to use big data like database.","full_des":"openLooKeng是一款开源的高性能数据虚拟化引擎，提供统一SQL接口，具备跨数据源/数据中心分析能力以及面向交互式、批、流等融合查询场景。openLooKeng致力于为大数据用户提供极简的数据分析体验，让用户像使用“数据库”一样使用“大数据”。||openLooKeng is a drop in engine which enables in-situ analytics on any data, anywhere, including geographically remote data sources. It provides a global view of all of your data via its SQL 2003 interface. With high availability, auto-scaling, built-in caching and indexing support, openLooKeng is ready for enterprise workload with required reliability.The goal of openLooKeng is to support data exploration, ad hoc queries, and batch processing with near real time latency ranging from 100+ms to minutes, without moving your data around. openLooKeng also supports hierarchical deployment enabling geographically remote openLooKeng clusters to participate in the same query. With its cross region query plan optimization capability, queries involving remote data can achieve close to “local” performance.","tech_tag":["大数据","数据虚拟化引擎"],"domain_tag":["大数据"],"mail_list":"dev@openlookeng.io","email":"contact@openlookeng.io","project_list":[{"name":"openLooKeng 支持 HA Proxy||openLooKeng supports HA Proxy","remark":"Project Link: https://openlookeng.io/zh-cn/events/summer-2021.html\r\n【项目链接：https://openlookeng.io/zh-cn/events/summer-2021.html】","difficulty":"中","mentor":"张景芳","contact":"<410920672@qq.com>","uniont":null,"student_count":0,"description":"openLooKeng 支持 HA 模式，借助 Nginx 等第三方代理的能力，可以实现多个 Coordinator 之间的负载均衡，但 Nginx 等第三方代理无法自动发现 Coordinator，如果有新的 Coordinator 加入，那么需要手动修改 Nginx 等第三方 Proxy 的配置，这样给集群管理带来一定的难度。项目通过扩展 openLooKeng 原有的 Proxy 逻辑，结合 openLooKeng 的 discovery 框架，实现：  a) 自动发现和监测，当 Coordinator 节点加入或退出时，可以近实时（ms级）的更新服务列表；  b) 负载均衡，默认实现一种策略即可，但接口必须可扩展以便支持多种负载均衡策略；  c) 高性能转发，以 Nginx 为标杆。    相关的开源软件仓库列表：  https://gitee.com/openlookeng/hetu-core||openLooKeng supports the HA mode. With the capabilities of third-party agents, such as Nginx, load balancing can be implemented among multiple coordinators. However, third-party agents, such as Nginx, cannot automatically discovery coordinators. If a new coordinator is added, in this case, you need to manually modify the configuration of third-party proxies such as Nginx, which makes cluster management difficult. This project extends the original proxy logic of openLooKeng and combines the discovery framework of openLooKeng to implement the following functions:  a) Automatic discovery and monitoring. When a Coordinator node joins or exits, the service list can be updated in near real time (at the millisecond level).  b) Load balancing. By default, only one policy is required to be implemented, but the interface must be scalable to support multiple load balancing policies.  c) High-performance forwarding, taking Nginx as the benchmark;    ","label":"210200082","link":"","tech_tag":["Java","Distributed System","Database","Big Data"],"domain_tag":["Big Data"],"oR":["proxy设计文档||Proxy design documents","Proxy 代码和相关测试用例||Proxy code and related test cases","Proxy 性能测试结果||Proxy performance test result"],"tR":["正向代理原理||Mechanism of Forward proxy","NIO 理论知识||Theoretical knowledge of NIO","负载均衡理论知识||Load balancing theory","Airlift Discovery 框架||Airlift Discovery framework"],"orgID":233,"spl":0,"organchor":"openlookeng","orgname":"openLooKeng社区||openLooKeng Community"},{"name":"openLooKeng AI 参数调优||openLooKeng AI parameter optimization","remark":"Project Link: https://openlookeng.io/zh-cn/events/summer-2021.html\r\n【项目链接：https://openlookeng.io/zh-cn/events/summer-2021.html】","difficulty":"中","mentor":"李铮","contact":"<lizheng@hust.edu.cn>","uniont":null,"student_count":0,"description":"当部署 openLooKeng 到一个新的集群当中时，对于参数的调整追求更高的性能是一个永恒的难题。openLooKeng 核心参数众多，性能调优涉及各种配置文件中的参数，比如各特性的配置属性，JDK参数等，如何根据多个维度的输入，如集群的结点个数，CPU核数、内存大小以及网络情况推荐更好的参数配置，进行设计方案，实现 AutoML，进行参数的自适应学习，得到更好的参数配置，让 openLooKeng 运行的更快。    相关的开源软件仓库列表：  1. https://gitee.com/openlookeng/hetu-core  2. DAC: Datasize-Aware High Dimensional Configurations Auto-Tuning ｜Zhibin Yu et al. （2018）｜  3. Vega: Towards an End-to-end configurable AutoML pipeline ｜Jiajin Zhang et al. 2020｜||When openLooKeng is deployed in a new cluster, parameter adjustment to achieve higher performance is an eternal challenge. openLooKeng has many core parameters. Performance optimization involves parameters in various configuration files, such as feature configuration attributes, JDK parameters and so on. How to recommend better parameter configurations based on inputs from multiple dimensions, such as the number of nodes in a cluster, the number of CPU cores, memory size, and network conditions, so implement AutoML, and perform adaptive parameter learning to obtain better parameter configurations. Make openLooKeng run faster.    ","label":"210200083","link":"","tech_tag":["Java","Distributed System","Database","Big Data"],"domain_tag":["Big Data"],"oR":["AutoML模型，结合 openLooKeng 进行参数自动调优||AutoML model and automatic parameter optimization based on openLooKeng","TPCDS Benchmark，调参前后性能对比测试||TPCDS benchmark and performance comparison test before and after parameter adjustment"],"tR":["在 openLooKeng 参数中寻找最优参数，性能相对默认参数有明显性能提升||Search for the optimal parameters in parameters of openLooKeng. Compared with the default parameter, the performance is significantly improved.","可以参考多种AutoML模型||Multiple AutoML models can be referenced."],"orgID":233,"spl":0,"organchor":"openlookeng","orgname":"openLooKeng社区||openLooKeng Community"},{"name":"openLooKeng Elasticsearch Connector 支持算子下推||The openLooKeng Elasticsearch Connector supports pushdown","remark":"Project Link: https://openlookeng.io/zh-cn/events/summer-2021.html\r\n【项目链接：https://openlookeng.io/zh-cn/events/summer-2021.html】","difficulty":"中","mentor":"黎一泽 / Armlly","contact":"<liyizeyouxiang@live.cn>","uniont":null,"student_count":0,"description":"当前通过openLooKeng Elasticsearch Connector查询Elasticsearch数据源数据时，需要全数据表取回。当涉及的数据量比较大，且 openLooKeng 中输入的 SQL 语句含有较多的数据过滤条件，数据项全取回时大量的取回的数据为无用数据，非常浪费网络带宽。Elasticsearch数据源具有较强的计算能力，能够对数据进行过滤计算操作。将openLooKeng内核中的过滤算子映射为 Elasticsearch 可执行的过滤操作，使得数据能够提前在 Elasticsearch过滤计算 （例如将 openLooKeng 中的‘count’算子推到 Elasticsearch），减少数据传输，使得 openLooKeng SQL 作业执行时间大幅缩短，是本项目的需要达到的目标。    相关的开源软件仓库列表：  https://gitee.com/openlookeng/hetu-core||When the openLooKeng Elasticsearch Connector is used to query Elasticsearch data source, the entire table data needs to be retrieved. When a large amount of data is involved and the SQL statements entered in the openLooKeng contains many data filtering conditions, a large amount of data that is retrieved is useless when all data items are retrieved, which wastes network bandwidth. Elasticsearch data source has strong computing capabilities and can filter and calculate data. Map filtering operators in the openLooKeng kernel to filtering operations that can be performed by Elasticsearch so that data can be filtered and calculated in Elasticsearch in advance. (For example, the count operator in openLooKeng is pushed to Elasticsearch.) , reducing data transmission and greatly shortening the execution time of openLooKeng SQL jobs, which is the purpose of this project.  ","label":"210200084","link":"","tech_tag":["Java","Distributed System","Database","Big Data"],"domain_tag":["Big Data"],"oR":["openLooKeng过滤算子到Elasticsearch过滤操作的映射模型||Mapping model from the openLooKeng filtering operator to the Elasticsearch filtering operation;","重构现有openLooKeng Jdbc connector算子下推框架，提交可执行代码||Reconstruct the existing openLooKeng jdbc connector operator pushdown framework and submit executable code.","TPCDS Benchmark，执行下推前后TPCDS执行性能对比和分析||TPCDS Benchmark: comparison and analysis of TPCDS execution performance before and after pushdown"],"tR":["SQL、Java编程||SQL and Java programming ","数据库内核引擎相关技术||Database kernel engine related technologies","openLooKeng 和 Elasticsearch 使用||openLooKeng and use Elasticsearch"],"orgID":233,"spl":0,"organchor":"openlookeng","orgname":"openLooKeng社区||openLooKeng Community"}]},{"userId":284,"anchor":"opengauss","slide":"","video":"","img":"opengauss.jpg","title":"openGauss社区","url":"https://opengauss.org/zh/","project_url":"","description":"openGauss是一款高性能、高安全、高可靠的企业级开源关系型数据库。|| openGauss is an enterprise-grade open source relational database with high-performance, high-security, high-reliability.","full_des":"openGauss是一款开源关系型数据库管理系统，采用木兰宽松许可证v2发行。深度融合华为在数据库领域多年的经验，结合企业级场景需求，持续构建竞争力特性。同时openGauss也是一个开源的数据库平台，鼓励社区贡献、合作。||openGauss is an open source relational database management system that is released with the Mulan PSL v2. with the kernel derived from PostgreSQL, openGauss is built on Huawei's years of experience in the database field and continuously provides competitive features tailored to enterprise-grade scenarios. At the same time, openGauss is also an open source database platform, encouraging community contributions and cooperation.","tech_tag":["Python","Java","C++"],"domain_tag":["database management system"],"mail_list":"community@opengauss.org","email":"contact@opengauss.org","project_list":[]},{"userId":148,"anchor":"zstackcloud","slide":"","video":"","img":"zstack.jpg","title":"ZStack Cloud 平台||ZStack Cloud","project_url":"","url":"https://www.zstack.io/","description":"ZStack 是一款具备简单、健壮、弹性、智能等特性的 IaaS 产品。||ZStack is open source IaaS(infrastructure as a service) software aiming to automate datacenters, managing resources of compute, storage, and networking all by APIs.","full_des":"ZStack 云平台具备自主知识产权、自主开源云代码、自主云平台三大优势，凭借云计算的 4S 特性，践行产品化，普惠云计算。其中，ZStack 开源代码提供了整个产品的框架、底座和基础的计算，网络，存储等 IaaS 软件的功能。||ZStack is open source IaaS(infrastructure as a service) software aiming to automate datacenters, managing resources of compute, storage, and networking all by APIs. Users can setup ZStack environments in a download-and-run manner, spending 5 minutes building a POC environment all on a single Linux machine, or 30 minutes building a multi-node production environment that can scale to hundreds of thousands of physical servers.ZStack provides the capability of managing everything in a datacenter by APIs, fulfilling the goal of software-defined datacenter. Users control their clouds using either web UI or command line tool both of which interact with ZStack management nodes; NO scattered configurations, dependent software installation, services HA, and thirdparty monitoring are needed, all of them are taken care of by ZStack itself, which provides a great simplicity for stable long-term operation.","tech_tag":["Go","Linux","Python","Java","Distributed System"],"domain_tag":["Vitualization","Distributed System"],"mail_list":"zstack@googlegroups.com  wei.wang@zstack.io","email":"contact@zstack.io","project_list":[{"name":"为 ZStack 添加 API 限流限速的功能","remark":null,"difficulty":"中","mentor":"李群","contact":"<qun.li@zstack.io>","uniont":"王为<damon.devops@gmail.com>","student_count":0,"description":"ZStack 目前没有 API 限流限速的功能，当有 API DDoS 时，需要依赖前面配置反向代理等方法来限制速率。    应当在 ZStack 中添加 API 限流限速的功能，最好能根据不同的 API 做不同的配置（例如区分 Get 方法和 Post 方法，区分具体不同的 API，例如查询云主机显然可以更频繁一些，而创建虚拟机则不能太频繁），此外，需要确定超过了一定速率是丢弃请求还是对请求做队列等，以及 ZStack 多管理节点情况下的效果。","label":"210390177","link":"","tech_tag":["Linux","Java","Distributed System"],"domain_tag":["Cloud Native","Distributed System","Web"],"oR":["形成 PR 提交到 ZStack 仓库"],"tR":["比较熟悉 Java，能够独立完成 Java 开发","对 Linux 有一定了解，熟悉常见 Linux 命令"],"orgID":148,"spl":1,"organchor":"zstackcloud","orgname":"ZStack Cloud 平台||ZStack Cloud"},{"name":"为 ZStack 添加 API 进度展示、耗时预测的功能","remark":null,"difficulty":"高","mentor":"李耀宁","contact":"<yaoning.li@zstack.io>","uniont":null,"student_count":0,"description":"1.与API绑定，能够获知某个API的步骤数，例如可以获取APICreateVmInstanceMsg的总步数  2.当API执行时，可以查询该API当前执行的步数  3.能够预测API执行耗时  4.能够统计每个步骤的执行耗时  5.采用描述性编程，不应该侵入当前业务代码","label":"210390380","link":"","tech_tag":["Java","Database"],"domain_tag":["Cloud Native","Web"],"oR":["形成 PR 提交到 ZStack 仓库"],"tR":["熟悉 JAVA","需要学习 ZStack API 调用逻辑","有算法工作经验","了解一些统计学知识","熟悉 MySQL"],"orgID":148,"spl":1,"organchor":"zstackcloud","orgname":"ZStack Cloud 平台||ZStack Cloud"}]},{"userId":297,"anchor":"jenkins","slide":"","video":"","img":"jenkins.jpg","title":"Jenkins 中文社区||Jenkins Chinese community","project_url":"https://jenkins-zh.cn/about/summer-2021/","url":"https://jenkins-zh.cn/","description":"共建开放、包容、活跃的 Jenkins 社区||Build an open, inclusive, active Jenkins community","full_des":"Jenkins 中文社区是由 Jenkins 国内的爱好者、贡献者组成，共同推广以及完善 CI/CD 技术的学习试用和落地。我们秉承开源的精神，在社区治理上高度开放，代码、文档以及设计等开源免费，致力于为我们的用户带来更好的体验。||Jenkins Chinese community is composed of Jenkins domestic fans and contributors to jointly promote and improve the learning, trial, and implementation of CI/CD technology. We uphold the spirit of open source and are highly open in community governance. Open source code, documentation, and design are free, and we are committed to bringing a better experience to our users.","tech_tag":["jenkins"],"domain_tag":["CI/CD","jenkins","DevOps","OpenSource"],"mail_list":"developer@jenkins-zh.cn","email":"admins@jenkins-zh.cn","project_list":[{"name":"通过 CLI 对 Jenkins 实现安全升级||Implement a secure upgrade to Jenkins through the CLI","remark":"","difficulty":"中","mentor":"Rick","contact":"<Rick@jenkins-zh.cn>","uniont":"yJunS<shiyanjun@jenkins-zh.cn>","student_count":0,"description":"Jenkins 有 1500+ 由社区提供的[插件](http://plugins.jenkins.io/)，利用这些插件，几乎可以完成任何你想完成的任务。但是，在这众多的插件中，并没有非常严格的标准，因此，用户有可能会使用到部分对兼容性、安全性等方面表现不是很好的插件。那么，升级 Jenkins 或者插件将会是一件非常繁琐、甚至容易出问题的操作。    [Jenkins CLI](https://github.com/jenkins-zh/jenkins-cli) 是用 Golang 实现的，目前可以实现对 Jenkins 的大部分操作，部分非核心功能是[通过插件实现](https://github.com/jenkins-zh/jcli-plugins)。||Jenkins has 1500+ [plugins](http://plugins.jenkins.io/) provided by the community. With these plugins, you can accomplish almost any task you want to accomplish. However, among these many plug-ins, there are no very strict standards. Therefore, users may use some plug-ins that do not perform well in terms of compatibility and security. Then, upgrading Jenkins or plug-ins will be a very cumbersome and even problem-prone operation.  [Jenkins CLI](https://github.com/jenkins-zh/jenkins-cli) is implemented in Golang. At present, most of the operations on Jenkins can be implemented, and some of the non-core functions are [implemented through plug-ins](https: //github.com/jenkins-zh/jcli-plugins).    ","label":"210440157","link":"","tech_tag":["Go","Java","Jenkins"],"domain_tag":["Jenkins"],"oR":["当用户执行升级操作时，命令行（CLI）给出一个升级向导，通过询问用户的方式进行交互式地升级：||When the user performs the upgrade operation, the command line (CLI) will give an upgrade wizard, which can be upgraded interactively by asking the user: ","是否希望升级 Jenkins，以及希望升级到哪个版本: 给出可以升级的版本列表，并给出相关的安全、稳定性、更新日期等信息||Do you want to upgrade Jenkins, and which version you want to upgrade to  - Give a list of versions that can be upgraded, and give relevant information such as security, stability, update date, etc.","是否希望升级插件: 1. 根据官方社区公布的安全漏洞，给出建议升级的插件列表以及目标版本  2. 用户可以看到插件的当前维护信息，例如：star、watch、安装量、最新发布日期等||Do you want to upgrade the plugin - According to the security vulnerabilities announced by the official community, a list of plug-ins that are recommended to be upgraded and the target version are given. ","启动临时升级环境: 安装目标版本的 Jenkins 以及插件||Start a temporary upgrade environment  - Install the target version of Jenkins and plugins","对临时环境的 Jenkins 执行兼容性测试: 1. 针对不同的插件执行不同的 API 测试 2. 给出一个非常容易扩展的方式来对不同插件的兼容性测试进行补充||Perform compatibility test on Jenkins in temporary environment  - Perform different API tests for different plugins - Give a very easy to extend way to supplement the compatibility test of different plug-ins","输出兼容性测试报告||Output compatibility test report","提示用户是否要进行备份||Prompt the user if they want to make a backup","提示用户是否要进行升级||Prompt the user whether to upgrade"],"tR":["Golang","Java","Jenkins","RESTful"],"orgID":297,"spl":0,"organchor":"jenkins","orgname":"Jenkins 中文社区||Jenkins Chinese community"}]},{"userId":132,"anchor":"openeuler","slide":"","video":"","img":"openeuler.jpg","title":"openEuler社区||openEuler Community","project_url":"https://openeuler.org/zh/activities/","url":"https://openeuler.org/","description":"一个开源、免费的 Linux 发行版平台。||An open source and a free platform for Linux released edition.","full_des":"openEuler 是一个开源、免费的 Linux 发行版平台，将通过开放的社区形式与全球的开发者共同构建一个开放、多元和架构包容的软件生态体系。同时，openEuler 也是一个创新的平台，鼓励任何人在该平台上提出新想法、开拓新思路、实践新方案。||An open source and a free platform for Linux released edition, which aims to build an open, diversified and architecture inclusive software ecosystem with global developers through openEuler community. At the same time, it is also an innovative platform, which encourages anyone to put forward new ideas, develop new ideas and practice new schemes.","tech_tag":["Linux","操作系统","虚拟化","容器"],"domain_tag":["操作系统"],"mail_list":"community@openeuler.org","email":"contact@openeuler.io","project_list":[{"name":"为 openEuler DDE 桌面添加系统资源监控报警应用","remark":"","difficulty":"高","mentor":"魏东","contact":"<weidong@uniontech.com>","uniont":null,"student_count":0,"description":"当前DDE桌面系统虽然有类似系统监视器的应用，但是它不会发出告警信息。部分使用情况下，桌面会卡死，导致用户无法操作。需要有一个桌面应用，它会监控系统的资源使用情况(cpu/mem/disk等)。并在系统资源持续高于用户设定的数值或默认数值时，桌面会发出告警信息。  参考监控指标：CPU 利用率、内存使用率、磁盘使用情况。本应用并不做细节监控，只做核心指标监控和报警  警告方式：警告方式为系统通知","label":"210010002","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DHL8?from=project-issue","tech_tag":["桌面环境"],"domain_tag":["操作系统"],"oR":["告警阈值可设定","系统资源使用高于应用默认值或用户设定值时，会在桌面发出告警信息","告警信息需支持国际化，初步可以只支持中英文。"],"tR":["了解linux 操作系统","了解桌面应用","c++\\qt或python\\pyqt"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开源项目开发者流失预测分析","remark":"","difficulty":"高","mentor":"钟君","contact":"<jun.zhongjun@huawei.com>","uniont":null,"student_count":0,"description":"有研究表明获取新用户的成本是留住已有用户成本的五倍。openEuler想要成为更活跃的开源社区，用户的留存就显得更为重要，因此，识别开发者的流失情况，及时预测及发现，及时阻止，能有效提高社区活跃度。    通过AI等能力建立数据分析服务，可更好的提取流失度量模型，识别或者预测流失的开发者、识别流失关键事件，从而改进社区事件，提升社区人员留存率。    本任务会提供源数据供同学们研究流失模型。数据包括正向数据及负向数据等样本数据。","label":"210010003","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DO3J?from=project-issue","tech_tag":["AI"],"domain_tag":["开源度量"],"oR":["输出流失最优预测模型（比如：随机森林模型、xgboost模型等）","及时发现即将流失的开发者","召回率达到0.5以上。","流失看板输出：按照时间段输出之前活跃当前不活跃的sig","流失看板输出：按照时间段输出之前活跃当前不活跃的开发者"],"tR":["了解linux 操作系统","了解大数据分析系统spark相关","熟悉java、python","了解基本模型分析、特征工程等"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"LOOP设备支持IO并行化","remark":"","difficulty":"低","mentor":"张奇龙","contact":"<zhangqilong3@huawei.com>","uniont":null,"student_count":0,"description":"内核中的loop设备IO会顺序提交到相应kwoker的链表并依次被内核处理。当某个loop设备所在的文件系统IO比较繁忙或者其处理IO请求的kwoker没有得到及时调度时，此时该loop设备的IO以及后续IO请求都会被阻塞，此时极容易导致使用该loop设备的上层应用卡顿。","label":"210010004","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DUOS?from=project-issue","tech_tag":["kernel"],"domain_tag":["操作系统"],"oR":["在openEuler-21.03内核中给出触发该问题的场景或者测试用例（较高概率出现就可以），loop设备IO并行化能够正常使能和挂载运行，代码合入该内核中（请优先使能ext4或者f2fs文件系统支持loop设备IO的并行化）"],"tR":["了解linux操作系统","熟悉文件系统子模块","熟悉IO子模块"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 openEuler提供OpenStack Swift软件包","remark":"","difficulty":"低","mentor":"王玺源","contact":"<wangxiyuan@huawei.com>","uniont":null,"student_count":0,"description":"OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。整个OpenStack框架由众多组件组成，这些组件为云计算平台提供不同的服务。","label":"210010005","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DUTE?from=project-issue","tech_tag":["Linux","openstack",""],"domain_tag":["OS","云计算"],"oR":["在openEuler上使用rpmbuild工具完成RPM打包","在openEuler Gitee软件仓库中创建OpenStack Swift软件仓库，并提交对应Spec文件","完成Swift服务全量功能测试，保证服务正常可用，与其他OpenStack组件正常配套使用。"],"tR":["熟练使用Linux操作系统","了解基本的云计算概念"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"将MindSpore 1.1.1版本引入openEuler","remark":"","difficulty":"低","mentor":"郑振宇","contact":"<zheng.zhenyu@outlook.com>","uniont":null,"student_count":0,"description":"MindSpore是由华为开源的端边云全场景按需协同的华为自研AI计算框架，提供全场景统一API，为全场景AI的模型开发、模型运行、模型部署提供端到端能力。MindSpore社区目前已经成为了国内最活跃的AI开源社区，将MindSpore引入到openEuler可以极大的丰富openEuler在AI领域的生态。。更多有关MindSpore的内容请参考：https://www.mindspore.cn    MindSpore的安装方式有三种，一种是通过源码直接安装，这种方式安装需要进行编译适配等工作，对使用者能力要求高，另一种是通过pip工具进行安装，这种安装方式需要依赖外部网络连接，对于网络环境不好的情况下比较耗时，最后一种是通过rpm安装是Linux系统上最为常用的安装方式，这种方式将预先编译好的MindSpore和其依赖打包在rpm软件包中，并上传到操作系统的中央软件仓库，安装时只需要使用\"yum install MindSpore\"命令就可以安装。","label":"210010006","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DUTG?from=project-issue","tech_tag":["openEuler，Mindspore"],"domain_tag":["AI","操作系统"],"oR":["在openEuler操作系统上使用rpmbuild工具完成MindSpore 1.1.1版本本地打包","在openEuler Gitee软件代码仓库中创建MindSpore仓库，并提交对应Spec文件，使用MindSpore完成MNIST训练。"],"tR":["熟练使用Linux操作系统","了解MindSpore的基本使用方法"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"将Hadoop 3.3.0版本引入openEuler","remark":"项目相关链接\r\n\r\nHadoop项目主页：https://hadoop.apache.org\r\nopenEuler软件代码仓库：https://gitee.com/src-openeuler\r\nopenEuler软件包制作指南：https://gitee.com/openeuler/community/blob/master/zh/contributors/packaging.md","difficulty":"低","mentor":"郑振宇","contact":"<zheng.zhenyu@outlook.com>","uniont":null,"student_count":0,"description":"ARM架构，是一类采用精简指令集设计的处理器架构，被广泛地使用在许多嵌入式系统、移动通信和智能终端中。随着ARM架构的不断演进，在最近今年已经出现了多款基于ARM架构的个人电脑和数据中心芯片，包括华为鲲鹏920、AWS Gravition2、Ampere Altra、Apple M1等，并且由于其出色的性能表现，已经在市场引起了很好的反响。由于Arm架构与传统的x86架构在底层编译上有所不同，因此业务软件需要进行相应的适配。    Hadoop是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。    Hadoop 3.3.0版本于2020年7月14日发布，是首个源生支持Arm平台的Hadoop版本，将其引入openEuler可以减少用户在Arm平台使用Hadoop的适配难度。","label":"210010007","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DUUJ?from=project-issue","tech_tag":["Hadoop"],"domain_tag":["操作系统"],"oR":["在openEuler上使用rpmbuild工具完成RPM打包","在openEuler Gitee软件仓库中创建Hadoop 3.3.0软件仓库，并提交对应Spec文件","完成Hadoop服务TeraSort测试。"],"tR":["熟练使用Linux操作系统","了解Hadoop各个组件和使用方法"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"MariaDB上游ARM64优化patch回合老版本","remark":"项目相关链接：\r\n\r\nMariaDB项目主页：https://mariadb.org/\r\nopenEuler软件代码仓库：https://gitee.com/src-openeuler\r\nopenEuler软件包制作指南：https://gitee.com/openeuler/community/blob/master/zh/contributors/packaging.md","difficulty":"高","mentor":"赵波","contact":"<zhaobo6@huawei.com>","uniont":null,"student_count":0,"description":"ARM架构，是一类采用精简指令集设计的处理器架构，被广泛地使用在许多嵌入式系统、移动通信和智能终端中。随着ARM架构的不断演进，在最近今年已经出现了多款基于ARM架构的个人电脑和数据中心芯片，包括华为鲲鹏920、AWS Gravition2、Ampere Altra、Apple M1等，并且由于其出色的性能表现，已经在市场引起了很好的反响。由于Arm架构与传统的x86架构在底层编译上有所不同，因此业务软件需要进行相应的适配。    这几年随着ARM平台生态的不断完善，越来越多的软件都可以运行在ARM平台上。但是对于近几年的更新，大多数ARM优化都是做在软件的最新版本，那么对于老牌的开源数据库，用户群体比较分散，大多数用户都会选用稳定运行的版本，而不是最新版本，所以为了客户，我们将现有最新版的优化返合回老的社区版，并经过打包，基准测试，性能测试等等。让用户同样能够体验老版本软件在ARM平台上的性能提升是十分必要的。特性优化列表由导师提供。    MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。","label":"210010008","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DUXZ?from=project-issue","tech_tag":["Linux","MariaDB"],"domain_tag":["OS","数据库"],"oR":["社区上游ARM优化返合至数据库老版本。代码适配","将合入优化的软件包打成rpm包。","输出优化后软件基准测试及性能测试报告。"],"tR":["了解MariaDB/MySQL开源数据库。","熟悉C/C++","熟悉ARM架构与X86架构差异，了解指令集差异","了解如何使用工具对数据库软件进行性能测试。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 openEuler提供OpenStack容器化部署能力","remark":"项目相关链接\r\n\r\nOpenStack项目主页：https://www.openstack.org/software/\r\nKubernetes项目主页：https://kubernetes.io/\r\niSula项目主页：https://openeuler.org/zh/docs/20.09/docs/Container/iSula%E5%AE%B9%E5%99%A8%E5%BC%95%E6%93%8E.html","difficulty":"高","mentor":"王玺源","contact":"<wangxiyuan@huawei.com>","uniont":null,"student_count":0,"description":"OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。整个OpenStack框架由众多组件组成，这些组件为云计算平台提供不同的服务。更多有关OpenStack内容请见：https://www.openstack.org/software/    OpenStack包含组件繁多，其安装部署是非常令人头疼的问题。使用容器化技术，可以显著降低OpenStack的部署难度。本题目使用OpenStack+Kubernetes+Isula技术栈，实现OpenStack在openEuler上的容器化快速部署能力。","label":"210010009","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DV1S?from=project-issue","tech_tag":["openstack",""],"domain_tag":["OS","Cloud Native"],"oR":["完成OpenStack对应的kubernetes部署文件编写；","部署、测试并验证OpenStack+kubernetes+isula集群环境，输出相关测试报告。"],"tR":["熟练使用Linux操作系统。","了解基本的云计算概念。","了解并会使用docker或isula等容器服务。","了解并会使用kubernetes容器编排服务。","对虚拟化或容器化网络有一定了解。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为openEuler提供ClickHouse rpm包","remark":"项目相关链接：\r\n\r\nClickHouse项目主页：https://clickhouse.tech/\r\nopenEuler软件代码仓库：https://gitee.com/src-openeuler\r\nopenEuler软件包制作指南：https://gitee.com/openeuler/community/blob/master/zh/contributors/packaging.md","difficulty":"低","mentor":"赵波","contact":"<zhaobo6@huawei.com>","uniont":null,"student_count":0,"description":"ClickHouse是俄罗斯第一大搜索引擎Yandex开发的列式储存数据库,主要用于数据分析（OLAP）领域。ClickHouse 的性能超过了目前市场上可比的面向列的 DBMS，每秒钟每台服务器每秒处理数亿至十亿多行和数十千兆字节的数据。    当前 openeuler 的数据库领域对于AP领域的数据库软件仍然比较少，但是有越来越多的客户聚焦AP场景，需要丰富客户选择的数据库软件，不能仅仅提供TP场景数据库。AP对于大数据解决方案有重要意义，所以引入新的AP数据库以及新的技术是十分必要的。","label":"210010010","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DV25?from=project-issue","tech_tag":["ClickHouse"],"domain_tag":["OS","数据库"],"oR":["创建ClickHouse软件仓库，完成RPM打包，并提交对应Spec文件，","完成ClickHouse服务全量功能测试，保证服务正常可用，运行基准测试及性能测试，并数据验证报告。"],"tR":["了解ClickHouse开源数据库。","熟悉C/C++编译构建工具。","熟悉RPM出包流程。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"构建openEuler开发者用户画像","remark":"项目相关链接：\r\n\r\n软件代码仓库：https://gitee.com/opensourceway/","difficulty":"高","mentor":"钟君","contact":"<jun.zhongjun@huawei.com>","uniont":null,"student_count":0,"description":"用户画像是指根据用户的属性、用户偏好、开发习惯、用户行为等信息而抽象出来的标签化用户模型。通俗说就是给用户打标签，而标签是通过对用户信息分析而来的高度精炼的特征标识。通过打标签可以利用一些高度概括、容易理解的特征来描述用户，可以让人更容易理解用户，并且可以方便计算机处理。    开源用户画像包括对开发者基本信息、开发者历史贡献信息、社区信息、开发者的其他爱好以及擅长的技术技能等信息的专属于开发者的标签化用户模型。    其中开发者基本信息包括开发者gitee id、开发者参与项目列表、邮箱等；开发者历史贡献信息包括开发者在代码托管平台提交的issue、pull request、评论、fork仓库等贡献信息。    构建开发者用户画像，通过开发者特性模型建立，识别开发者特征，识别潜在个人及团队明星开发者。分析开发者行为，实现精细化运营","label":"210010011","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DV26?from=project-issue","tech_tag":["openEuler。开源度量"],"domain_tag":["OS"],"oR":["用户画像标记体系建立","开发者特性建模","开发者关系图谱","核心开发者看板","开发者行为看板"],"tR":["了解linux 操作系统","了解大数据分析系统spark相关","熟悉java、python","了解基本模型分析、特征工程等","了解k8s"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为openEuler社区提供一个FAQ的web服务","remark":"","difficulty":"中","mentor":"曹志","contact":"<george.cao@huawei.com>","uniont":null,"student_count":0,"description":"概要：使用python进行web编程，实现一个FAQ的web服务，后期可集成到openEuler主页。  背景：随着openEuler社区逐渐壮大，参与者越来越多，前期参与者遇到的一些问题需要及时的存档并得以传递；社区当前只提供博客这种形式做为经验传递的载体，希望能实现一套FAQ来承载一些问题的处理经验。  基础功能：提供新增FAQ条目、内容提交保存（包括文本和图片）、敏感信息扫描、邮件通知审查人、确认发布等基础功能接口。  附加功能：访问统计预埋，点击排名，搜索功能。","label":"210010028","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3DV2B?from=project-issue","tech_tag":["Python"],"domain_tag":["开源基础社区"],"oR":["使用Python实现一个web服务，提供新增内容编辑，内容扫描，内容展示，和简单查询功能。"],"tR":["了解python web服务编程","了解FAQ系统大致功能和流程"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开源软件版本演进中的License冲突检测","remark":"","difficulty":"中","mentor":"李自","contact":"<lizi4@huawei.com>","uniont":null,"student_count":0,"description":"开源软件虽然可以在网络上公开免费下载，但使用开源软件必须遵循开源License的要求，例如开发者静态链接了GPL类License的开源软件，按照License条款的要求，作者自研的代码也要对外开源，对于那些希望闭源代码构建产品的开发者来说，这显然是有风险的。我们希望通过工具自动化检测不同开源软件版本中License条款的变化，并将诸如“不允许商用”、“必须开源”、“不允许在云服务中使用”等风险进行标识并形成报告。","label":"210010029","link":"https://gitee.com/openeuler-competition/summer-2021/issues/I3E2PG?from=project-issue","tech_tag":["License","openEuler"],"domain_tag":["开源合规"],"oR":["输出开源软件版本间License冲突检测工具，能够识别不同开源软件版本间license的异同（包括是否可商用、是否要求对外开源、是否可在云服务集成）","输出openEuler开源软件版本间License冲突报告。报告示例（以elasticsearch软件包为例，以下分析结果仅供参考，最终结论以律师专业结论为准）： http://https://shimo.im/sheets/9kKTPPyHGtqhxcvv/MODOC/"],"tR":["熟悉使用go/python语言进行开发","熟练使用mysql等数据库进行数据读写","熟悉文本文件、字符串操作","对开源软件license有一些了解"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发基于freerdp 的 openeuler rdp 连接桌面应用","remark":"","difficulty":"高","mentor":"叶青龙","contact":"<yeqinglong@uniontech.com>","uniont":null,"student_count":0,"description":"目前大家的工作生活中，依旧有大量的Windows主机。当切换至国产操作系统后，需要提供一种工具来连接Windows主机。本题的要求是基于freerdp开发Windows连接桌面应用。桌面为openEuler DDE桌面。","label":"210010030","link":"","tech_tag":["DDE桌面"],"domain_tag":["OS"],"oR":["产出一个界面友好的桌面应用，可以连接Windows主机，产品形态可参考Microsoft Remote Desktop client."],"tR":["了解linux 操作系统","了解freerdp","了解桌面应用","c、c++/qt、python/pyqt"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发iso刻录DDE桌面应用","remark":"","difficulty":"高","mentor":"叶青龙","contact":"<yeqinglong@uniontech.com>","uniont":null,"student_count":0,"description":"日常工作中，需要把iso镜像刻录至u盘或光盘上。要求编写一个类似UltraISO软碟通的openEuler DDE桌面应用。可以完成iso刻录至u盘。","label":"210010031","link":"","tech_tag":["Linux","DDE桌面，openEuler"],"domain_tag":["OS"],"oR":["产出一个界面友好的iso刻录桌面应用，产品形态参考UltraISO"],"tR":["了解linux 操作系统","了解桌面应用","有一定的 c++/qt、python/pyqt、c 基础"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发DDE桌面上基于 rpm 的软件包安装器","remark":"","difficulty":"低","mentor":"叶青龙","contact":"<yeqinglong@uniontech.com>","uniont":null,"student_count":0,"description":"开发一个软件包安装器，用户在DDE桌面上点一下rpm包，就可以完成rpm包安装。不需要再使用命令去安装rpm包。","label":"210010032","link":"","tech_tag":["Linux","DDE桌面，openEuler"],"domain_tag":["OS"],"oR":["软件安装器可以通过鼠标点击打开rpm包，选择继续安装。","软件安装器应用打开之后，可以选择打开的文件。产品形态可参考deepin软件安装器。"],"tR":["了解linux 操作系统","了解桌面应用","了解 c++/qt、pthon/pyqt、c"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为openEuler社区适配开源的学之思在线考试系统","remark":"","difficulty":"高","mentor":"魏东","contact":"<weidong@uniontech.com>","uniont":null,"student_count":0,"description":"学习考试系统可以录入openEuler的教学课程。方便初学者了解安装使用openEuler操作系统。也方便初学者验证自己对openEuler的掌握情况。  要求迁移学之思在线考试系统到openEuler操作系统","label":"210010033","link":"","tech_tag":["Linux","DDE桌面，openEuler"],"domain_tag":["OS"],"oR":["在openEuler上可以通过yum快速安装学之思考试系统","在openeuler DDE桌面可以通过浏览器登陆访问考试系统"],"tR":["了解linux","熟悉rpm打包","熟悉JavaScript，node，vue"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"linux内核的维测工具page owner增强","remark":"","difficulty":"低","mentor":"刘勇强","contact":"<liuyongqiang13@huwei.com>","uniont":null,"student_count":0,"description":"page_owner是一个linux内核的维测工具，用于跟踪页的分配，常用于定位linux内核内存泄漏问题[1]。本项目希望利用page_owner统计各个进程的占用物理页的统计信息并根据SLUB,CMA等分类。并且利用tools/vm/page_owner_sort.c 做特性增强。","label":"210010034","link":"","tech_tag":["Linux","系统维测"],"domain_tag":["Linux Kernel","OS"],"oR":["基于openEuler 21.03 (k5.10)，在x86和arm64架构下均能够统计各个进程的占用物理页的统计信息","并且根据分配器的种类(SLUB/CMA等)进行分类","将结果输出到当前目录文档中"],"tR":["了解linux操作系统以及内核","熟悉linux内存管理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"树莓派, 移动终端等资源受限场景KSM性能优化","remark":"","difficulty":"高","mentor":"樊成阳","contact":"<cy.fan@huawei.com>","uniont":null,"student_count":0,"description":"KSM全称Kernel SamePage Merging, 用于将内容相同页面进行合并, 从而减少页面冗余. 当前KSM对内存的扫描与比较会占用cpu资源, 如果想达到较好的去重效果, 将会导致CPU使用率过高. 这对于树莓派, 移动设备等资源受限设备来说会增加功耗, 影响性能, 变得无法接受. 因此需要在限制CPU的情况下保证KSM的去重效率, 从而提高系统内存的利用率.","label":"210010035","link":"","tech_tag":["Linux","KSM"],"domain_tag":["Linux Kernel","OS"],"oR":["达到稳定状态时去重量不低于原有KSM的90%","相较于原有KSM方案的CPU占用率应该降低50%以上","达到稳定时CPU的使用时间提升20%以上"],"tR":["了解linux操作系统","熟悉linux内存管理","熟悉KSM"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"pud/pmd-level mremap特性回合并支持risc-v架构","remark":"","difficulty":"高","mentor":"刘世鑫","contact":"<liushixin2@huawei.com>","uniont":null,"student_count":0,"description":"在Linux内核中，虚拟地址和物理地址通过多级页表建立映射，以四级页表为例，分别称为pgd、pud、pmd、pte。mremap模块用于对虚拟地址进行重新映射，扩大（或缩小）原来的内存映射。在mremap时需要重新建立新虚拟地址与物理地址的映射，这个过程需要一个页一个页的修改pte项，非常耗时。  当前Linux主线版本中x86/arm架构下支持pud/pmd-level mremap，即不修改pte项，只修改pud/pmd项。    目标 ：  首先需要将该特性补丁集合入openeuler版本中，该补丁集中同时包含功能测试代码，可用于验证。  之后实现在risc-v架构下的pmd-level mremap特性支持。","label":"210010036","link":"","tech_tag":["Linux","risc-v"],"domain_tag":["Linux Kernel","OS"],"oR":["在x86/arm/risc-v架构下通过补丁集中测试代码用例。（risc-v架构下不要求pud-level mremap）"],"tR":["了解Linux内核的基础知识","了解多级页表的概念及其在x86/arm/risc-v架构下的实现"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"RISC-V栈回溯增强","remark":"","difficulty":"中","mentor":"陈煌","contact":"<chenhuang5@huawei.com>","uniont":null,"student_count":0,"description":"目前riscv的函数调用栈信息在Linux上使能CONFIG_FRAME_POINTER以及不使能在CONFIG_FRAME_POINTER情况都存在打印信息残缺。存在残缺信息的主要场景包括：1. 内核的dump test module，复现方法：跑driver/misc/lkdtm下的测试用例；2. proc接口下的打印信息，复现方法包括但不限于：echo t &gt; /proc/sysrq-trigger, cat /proc/1/stack 3.内核维测模块的打印信息，复现方法如：cat /sys/kernel/debug/page_owner等。可以通过跟其他架构下的打印信息进行比较来进行验证。","label":"210010043","link":"","tech_tag":["RISC-V"],"domain_tag":["OS"],"oR":["可以通过上述复现方法，打印出正确的栈信息，该栈信息可以通过手动查看函数的调用过程，或者借助于ftrace工具。","向Linux申请提交补丁来进行解决遇到的问题。"],"tR":["熟悉Linux 内核",".熟悉程序内存布局和栈帧原理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现RISCV架构下支持qspinlock","remark":"","difficulty":"高","mentor":"童甜根","contact":"<tongtiangen@huawei.com>","uniont":null,"student_count":0,"description":"当前Linux主线版本中RISCV架构下spinlock的实现是cas spinlock, 相比于qspinlock, cas spinlock存在如下问题：  1、无序竞争，不保证先申请就一定能先获取到锁，在处理器拓补结构中临近自旋锁拥有者的处理器可能会更快地刷新缓存，因而增大获得自旋锁的机率。  2、由于每个申请自旋锁的线程均在同一个全局变量上忙等待，系统总线将因为处理器间的缓存同步而导致繁重的流量，从而降低了系统整体的性能。  因此我们可以通过对RISCV架构支持qspinlock以提升相关场景下的性能。","label":"210010045","link":"","tech_tag":["Linux","RISC-V"],"domain_tag":["OS"],"oR":["在RISCV架构下使能qspinlock，并通过spinlock测试用例。"],"tR":["了解Linux内核的基础知识。","了解锁与原子操作基础知识。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"基于 Linux Lab 搭建 openEuler 内核开发环境","remark":"","difficulty":"高","mentor":"谢秀奇","contact":"<xiexiuqi@huawei.com>","uniont":null,"student_count":0,"description":"Linux Lab 是一套用于 Linux 内核学习、开发和测试的即时实验室，可以极速搭建和使用，功能强大，用法简单！本题目要求基于 Linux Lab 搭建 openEuler 内核的开发环境。","label":"210010046","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["基本要求：  基于 Linux Lab v0.6, 完成 openEuler 21.03 内核开发环境的搭建 Host OS 不限 要求完成基于 Linux Lab 提供的虚拟开发板搭建开发环境，至少搭建 aarch64 和 x86_64 的环境； 在开发环境上可以编译安装和启动内核 输出指导手册和示例，发表在 openEuler 社区","扩展要求：  搭建 riscv 的开发环境 使用 openEuler 20.03 SP1 做 Host OS 搭建开发环境 使用 openEuler 搭建的开发环境信息反馈到 Linux Lab 开源社区 使用搭建好的内核开发环境，编译验证1个补丁，并将其提交到 openEuler kernel 社区"],"tR":["了解linux 操作系统","熟悉Linux内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"基于 openEuler kernel 出一个实时内核，并评估实时性","remark":"","difficulty":"高","mentor":"谢秀奇","contact":"<xiexiuqi@huawei.com>","uniont":null,"student_count":0,"description":"Linux 是一个通用内核，并不是一个实时内核，也不做到硬实时。针对 Linux 内核实时性的不足，开源社区有一组针对 Linux 的实时补丁。本题目要求基于 openEuler kernel 合入实时补丁，将其改造成一个实时内核，并评估其实时性。  补丁地址：http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.10/","label":"210010047","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","Cloud Native"],"oR":["基于将 Linux 实时补丁移植到 openEuler 21.03 5.10 内核上","评估其实时性，含测试结果与对比报告，分析明显影响实时性的问题","将移植和评估报告，发表在openEuler社区"],"tR":["熟练使用Linux操作系统","熟悉Limux 内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"优化 openEuler 内核启动时间(重启时间)","remark":"","difficulty":"中","mentor":"谢秀奇","contact":"<xiexiuqi@huawei.com>","uniont":null,"student_count":0,"description":"系统启动时间和重启时间是故障恢复的重要指标，优化启动时间是缩短故障恢复时间的重要手段之一。本题目要求基于 openEuler 21.03 优化系统启动时间和重启时间。","label":"210010048","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["基本要求：  基于 PC、虚拟机或服务器，分析影响启动时间的因素  裁剪或优化相关特性，缩短启动时间  裁剪后的系统，不能影响基本功能，如联网，磁盘等基本特性。  评估和对比优化前后的启动时间，和优化方法形成优化报告，发表在 openEuler 社区","扩展要求：  在优化启动时间的基础上，优化重启时间（含关机时间） 说明：只考虑操作系统的启动时间和重启时间，不包含硬件启动和自检的时间。"],"tR":["了解linux 操作系统","熟悉Linux内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"优化 Linux 系统的 CPU 占用时间统计","remark":"","difficulty":"高","mentor":"谢秀奇","contact":"<xiexiuqi@huawei.com>","uniont":null,"student_count":0,"description":"Linux 系统常用 top 来查看CPU的占用率和各Task的CPU占用率。TOP 显示的CPU占用率的数据来源是 /proc/stat 。/proc/stat 个数据字段的具体含义可以参考“Documentation/filesystems/proc.rst”中 “1.8 Miscellaneous kernel statistics in /proc/stat”。内核中该CPU占用率的统计是基于 cpu tick 来统计的，比如 1 个 tick 间隔是 4ms，当 tick 中断到来时，cpu 运行的是哪个task，就把整个 4ms 全部算到这个 task 上。这样统计简单，开销小，针对长时间运行的 task，误差也可以接受。但是如果针对频繁切换的 task，统计误差就会很大，甚至不可接受。","label":"210010049","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["本题目要求对内核中CPU占有率的统计进行改进，减少误差，能尽量接近真实的CPU 占用率：  基于 openEuler 5.10 内核 改进 top 显示的 CPU 占用率 改进 top 显示的 task 的CPU占用率"],"tR":["熟练使用Linux操作系统","熟悉Linux内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"改进的JDK的intrinsic添加手段","remark":"","difficulty":"高","mentor":"王篁","contact":"<wanghuang3@huawei.com>","uniont":null,"student_count":0,"description":"目前在Hotspot里面添加一个intrinsic较为麻烦。它需要若干重复性的步骤，并且如果同时为Int C1和C2增加intrinsic需要重复性的工作量。本issue目的是改进目前Hotspot中较为繁琐的添加intrinsic手段，建立一种较为易用的添加方式。","label":"210010050","link":"","tech_tag":["JDK"],"domain_tag":["OS"],"oR":["生成针对jdk/jdk和(或)Bisheng JDK11的开源patch","在jdk/jdk最新仓或者Bisheng JDK 11上完成相应工作","基本目标：用户可能只需要写少量的C++代码，使用改良后的基础架构和工具链，即可以达到为特定函数增加intrinsic的目标。","升级目标：可以在添加intrinsic的时候，添加对于新指令的扩展","代码可维护性好。"],"tR":["熟练使用Java语言","了解JDK"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"使能Files cgroup系统支持 stat功能","remark":"","difficulty":"中","mentor":"卢佳琳","contact":"<lujialin4@huawei.com>","uniont":null,"student_count":0,"description":"Files Cgroup是对系统处理文件个数的控制的cgroup子系统。目前该子系统实现较为简单，功能比较单一，非root下只有查询和设置files.limit和files.usage两个成员从而该cgroup下的打开的文件数。  本项目的目标是支持Files Cgroup的stat的功能，提供了以下files cgroup统计项：    增加cgroup的状态显示  增加cgroup中每一个进程的状态显示和该进程中打开的文件数统计；","label":"210010051","link":"","tech_tag":["Linux","Files Cgroup"],"domain_tag":["OS"],"oR":["提供方案的设计文档","提供linux内核的修改补丁","提供功能验证的demo"],"tR":["熟练使用Linux操作系统。","了解基本的cgroup概念。","了解基本的文件系统概念"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现Selinux支持独立控制SocketCAN设备的读权限","remark":"","difficulty":"高","mentor":"修剑锋","contact":"<xiujianfeng@huawei.com>","uniont":null,"student_count":0,"description":"SELinux 全称 Security Enhanced Linux (安全强化 Linux)，是 MAC (Mandatory Access Control，强制访问控制系统)的一个实现，目的在于明确的指明某个进程可以访问哪些资源(文件、网络端口等)。  SocketCAN子系统是在Linux下CAN协议(Controller Area Network)实现的一种实现方法。CAN是一种在世界范围内广泛用于自动控制、嵌入式设备和汽车领域的网络技术。  本项目的目标是实现Selinux主体对CAN网络设备读权限的独立控制功能（比如允许从CAN设备A收包，禁止从CAN设备B收包）。  不需要考虑复杂的组网场景。","label":"210010052","link":"","tech_tag":["Linux","SELinux"],"domain_tag":["OS"],"oR":["提供方案的设计文档","提供linux内核的修改补丁","提供功能验证的demo"],"tR":["了解linux 操作系统","熟悉操作系统安全知识"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"StratoVirt虚拟化平台启动时间的优化","remark":"","difficulty":"高","mentor":"高炜","contact":"<gaowei66@huawei.com>","uniont":null,"student_count":0,"description":"轻量虚拟机（Mirto VM）是近几年新兴的一项虚拟化技术，StratoVirt是华为openEuler开源的轻量虚拟化软件，使用内存安全语言Rust编写，基于Rust语言编写，具备功能完善、启动快速、内存开销小等特点，在容器和serverless场景有广阔的应用空间。本实验的目标是基于StratoVirt现有的能力，进一步提升其的轻量低噪的能力。主要目标为：    进一步降低StratoVirt在x86_64平台上的启动时间。","label":"210010053","link":"","tech_tag":["Linux","Rust"],"domain_tag":["Linux Kernel","OS","Virtualization"],"oR":["在x86_64平台上达到kunpeng920平台的启动时间","总结整个开发流程和遇到的问题，并形成文档"],"tR":["熟悉Linux内核启动流程","对虚拟化技术有一定了解","熟悉Rust语言"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在StratoVirt虚拟化平台实现io_uring特性","remark":"","difficulty":"高","mentor":"郭馨乐","contact":"<guoxinle1@huawei.com>","uniont":null,"student_count":0,"description":"StratoVirt作为华为openEuler开源软件，是面向虚拟机、容器、Serverless三种场景的一种虚拟化平台。如何使用StratoVirt平台可查看参考资料【1】。在云化场景下，追求性能提升是永恒的主题。目前StratoVirt已经集成异步io(aio)，性能较竞品提升50%以上。在linux内核5.1版本中，合入了一个新的异步IO框架：io_uring。该特性具有简单易用，io性能好，特性丰富等优点。本实验的目的是在StratoVirt虚拟化平台实现io_uring特性，进一步提升StratoVirt的io性能。","label":"210010054","link":"","tech_tag":["Linux","Cloud Native","Container"],"domain_tag":["Linux Kernel","OS","Virtualization"],"oR":["开发io_uring特性","io_uring特性在4K随机读写性能提升30%以上","做技术总结，形成技术文档"],"tR":["熟悉异步IO技术","了解Rust编程语言"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为内核ftrace设计一个轻量级中断处理、关中断、关抢占时长监测工具","remark":"","difficulty":"高","mentor":"崔毕轩","contact":"<cuibixuan@huawei.com>","uniont":null,"student_count":0,"description":"内核ftrace支持检测和统计中断处理时长、关CPU中断和抢占时长等：tracing/events/irq和irqsoff tracer，但是irq处理时长需手动计算entry和exit time；irqsoff tracer需使能CONFIG_ITRACE_IRQFLGS，会对性能带来较大的影响。  因此可设计一个轻量级中断处理、关中断、关抢占时长监测工具（列出耗时最长的top10），协助定位不正常（耗时较长）的如上行为，并可查找触发源（中断/函数），设置监控阀值。  附加说明：  1）性能消耗请尽量小；  2）中断仅涉及外部组件注册中断（SPI类），核间通信或内核内部中断不涉及（比如PPI、SGI类中断）；","label":"210010055","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["1.通过某接口可查询中断处理、关中断、关抢占时长（top10），并可查找触发源（中断/函数），设置监控阀值。"],"tR":[".熟悉内核ftrace中irqsoff的实现；","熟悉GIC中SPI中断的处理过程；"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现perf 支持IRQ监控","remark":"","difficulty":"中","mentor":"崔毕轩","contact":"<cuibixuan@huawei.com>","uniont":null,"student_count":0,"description":"操作系统任务运行过程中，软中断和硬中断处理程序会影响任务运行效率。比如某CPU软中断过多，会造成此CPU繁忙，这种情况需要均衡软中断任务到其他CPU；或者硬中断处理函数过长，比如超过1ms，那么直接造成当前核的任务1ms无法得到调度。因此操作系统性能调优过程中，会考虑每个CPU的软硬中断是否合理。  Perf是linux提供的工具，支持对sched、mem等子系统进行监控和数据整理分析，但暂时不支持对IRQ的监控。添加perf irq [cmd]，支持对softirq/hardware irq的监控以及性能数据分析。","label":"210010056","link":"","tech_tag":["Linux","perf"],"domain_tag":["OS"],"oR":["对softirq的监控","监控时间段内CPU软中断处理名称和对应的处理次数"],"tR":["熟练掌握perf源码"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"内核踩内存问题定位辅助驱动","remark":"","difficulty":"高","mentor":"崔毕轩","contact":"<cuibixuan@huawei.com>","uniont":null,"student_count":0,"description":"踩内存是内核开发中高发的一种bug，并且此类问题很难定位，因为程序或系统崩溃日志，是被踩的程序的异常信息，踩人者已经“逃之夭夭”，所以根据异常信息无法直接找到问题根因。  对于踩已知固定地址的问题，可以将关键内存属性修改为只读，可以尽早发现踩内存的元凶，加速踩内存问题的定位。内核可添加功能，支持用户态修改某段物理地址的属性（可读、可写、可执行）。  说明：修改普通内存属性，对于不可修改内存（代码段等）直接返回错误。","label":"210010057","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["支持通过接口修改某段物理地址的属性（可读、可写、可执行），对于不可修改内存（代码段等）直接返回错误。"],"tR":["支持通过接口修改某段物理地址的属性（可读、可写、可执行），对于不可修改内存（代码段等）直接返回错误。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"将AMD ROCm开源软件栈逐步引入openEuler实现GPU加速计算","remark":"","difficulty":"高","mentor":"周杰","contact":"<jammy.zhou@gmail.com>","uniont":null,"student_count":0,"description":"针对高性能计算和人工智能，GPU加速计算在数据中心的作用日益显著。英伟达CUDA是一套闭源的软件栈，需要厂商提供直接的支持，而AMD ROCm是一套完全开源的软件栈，社区可以针对不同的Linux发行版和硬件架构进行适配，从而实现基于AMD GPU的加速计算。ROCm整体架构可查看参考资料【1】，本项目希望能够将基本的ROCm Runtime支持引入到openEuler社区中，并使用一些测试程序进行相关的功能验证。在此基础上，后续可基于openEuler，对ROCm软件栈中的编程模型、上层库和框架进行使能，并验证TensorFlow和PyTorch的ROCm加速（TensorFlow和PyTorch上游已默认支持ROCm）。本项目暂时只需要考虑单GPU的情况。","label":"210010058","link":"","tech_tag":["Linux","AI"],"domain_tag":["OS"],"oR":["基于openEuler，实现脚本完成软件模块的编译安装和验证测试","向上游社区提交相关补丁以解决遇到的问题","总结整个开发流程和遇到的问题，并形成文档（建议使用英文）"],"tR":["熟悉Linux操作系统及内核","有GPU和人工智能开发背景更佳"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openeuler内核中引进maple tree，优化vma管理","remark":"","difficulty":"高","mentor":"余松平","contact":"<yusongping@huawei.com>","uniont":null,"student_count":0,"description":"Linux使用rbtree组织VMA，搜索，插入和删除操作的时间负载度为O(log(n))。但是，对于按数字顺序遍历来讲，rbtree不是很有效。而VMA的遍历是通过在VMA之间创建双向链接列表来完成的。VMA双链表的开头(mmap)在存在mm_struct中;跟踪VMA之间的间隙可以做进一步的优化，以便更快地搜索到足够大的VMA空间。不过，rbtree要求用户编写自己的搜索功能，这导致了除内存管理子系统以外的其他很少使用的地方。  因此，Oracle开发人员Liam Howlett提出Maple tree，一种基于Btree的RCU-safe树，能更好地使用的处理器cache。适用于非重叠(non-overlapping)的范围的树(vma的管理)。","label":"210010059","link":"","tech_tag":["Linux","openEuler，vma"],"domain_tag":["OS"],"oR":["基于maple tree的vma实现的完整代码、测试结果以及详细说明"],"tR":["熟悉kernel mm模块","熟悉RCU","熟悉rbtree、B-tree"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"优化secGear编译框架","remark":"","difficulty":"中","mentor":"陈茂冬","contact":"<chenmaodong@huawei.com>","uniont":null,"student_count":0,"description":"secGear是一套兼容sgx和trustzone的编程框架，但是目前用户进行代码编译的时候还是会在Cmakelist里感知到许多sgx与trustzone的差异，框架的兼容性还是不是很完善，需要对编译框架进行优化。  目标：  1.优化编译框架，让用户书写Cmakelist时不直接感知sgx与itrustee的接口组件  2.利用cmake的Module特性，将编译框架中需要对sgx和itrustee进行差异化处理的部分划分到module中，此部分对用户不可见。","label":"210010060","link":"","tech_tag":["Linux","编译框架，openEuler"],"domain_tag":["OS"],"oR":["用户基于secGear编程时，直接面对secGear提供的接口和头文件和库，在Cmakelist等编译文件中看不到sgx或itrsutee的组件","编写出来的demo源码可以直接在两个不同的架构上直接编译运行。"],"tR":["了解Cmakelist","了解机密计算基本原理","有C基础"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"Linux内核的PELT算法改进","remark":"","difficulty":"中","mentor":"王辉","contact":"<john.wanghui@huawei.com>","uniont":null,"student_count":0,"description":"PELT全名Per-entity Load Tracking，是Linux内核用于跟踪计算每个任务（组）负载的机制。其默认的半衰期为32ms，也就是说假如某进程一直占用cpu执行32ms后，它的cpu占用率为50%，在139ms后才能达到95%；cpu占用率的衰减也是类似，一个进程不再运行后，32ms之后其cpu占用率才会降为50%。对于服务器系统来说，看到的更多的是cpu占用率的趋势，PELT这种算法是可接受的。但是对于终端设备来说，比如手机，会根据进程的cpu负载进行调频，而过慢的cpu占用率调整速度，会造成cpu调频随之变慢，进而一方面导致来不及调频，系统发生卡顿；另一方面，明明已经不运行的进程，但cpu占用率仍然很高，导致无法降频，造成功耗浪费。如果可以通过缩短半衰期，提升cpu占用率的反应速度，则可极大的避免上述问题。可以考虑将半衰期设为16ms，甚至是8ms","label":"210010061","link":"","tech_tag":["Linux","PELT"],"domain_tag":["Linux Kernel","OS"],"oR":["改进PELT算法，使其能够更快伴随着进程的运行情况进行其cpu占用率的计算","提供补丁并提交到openEuler内核"],"tR":["理解内核调度子系统","理解内核Load Tracking机制"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"统计一个内核模块占用的内存","remark":"","difficulty":"高","mentor":"王辉","contact":"<john.wanghui@huawei.com>","uniont":null,"student_count":0,"description":"用户态进程拥有独立的地址空间，通过top，/proc//smaps等手段可以获取进程占用的内存情况。而内核和内核模块处于同一地址空间，无法区分哪些内存是内核自身占用的，哪些是内核模块占用的。  在云计算/数据中心场景下，内存是非常宝贵的资源，必须准确的评估内存的占用情况，否则就可能因为内存不足出现OOM，进而影响业务的正常运行。举个例子，某些网卡驱动刚开始内存占用量可能只有数百M，但在网络流量大时会达到1G甚至2G的内存占用（从内存占用总量上侧面推测得出），如果不预留出充足的内存，就可能会触发OOM导致业务进程被杀。  如果能有一种方式能够较准确的评估内核模块的内存占用，则可以更加合理的规划服务器的内存使用。","label":"210010062","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["基于openEuler内核、操作系统提供一个工具/脚本，能够收集指定模块的内存占用情况","工具or内核补丁提交到openEuler社区"],"tR":["了解内核内存子系统"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发一个系统内存使用情况统计工具","remark":"","difficulty":"中","mentor":"王辉","contact":"<john.wanghui@huawei.com>","uniont":null,"student_count":0,"description":"当前系统中关于内存的信息比较零散，用户态进程的内存占用，内核态的占用，需要从不同的位置获取不同的信息，能否有个统一的工具，快速清晰的呈现系统内存开销在何处，并且支持按照numa node分别显示内存占用和剩余内存情况，这样就可以方便直观的查看系统内存的占用是否合理","label":"210010063","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["提供一个工具，支持一键式呈现系统内存开销情况，比如用户态整体内存占用情况，Top10内存占用的进程分别是哪些，内核的内存占用开销主要在哪等信息","支持按numa node统计不同node上的内存开销情况"],"tR":["了解linux 操作系统","熟悉linux内存管理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"支持通过ftrace原始数据分析系统整体的调度latency","remark":"","difficulty":"中","mentor":"王辉","contact":"<john.wanghui@huawei.com>","uniont":null,"student_count":0,"description":"通过ftrace可以跟踪进程/线程什么时候加入队列，以及什么时候得到调度执行。perf sched record/latency命令可以记录/解析出调度时延信息，但是perf无法直接口解析ftrace raw data。那么是否可以通过一个工具，直接基于raw ftrace数据解析最大调度延迟信息；或是能够format raw ftrace数据为perf所需的格式，再通过perf进行解析。  ftrace wakeup tracer可以解析最大调度时延的进程及其调用栈信息，但无法像perf sched latency打印出所有进程/线程的平均及最大调度延迟","label":"210010064","link":"","tech_tag":["ftrace"],"domain_tag":["Linux Kernel","OS"],"oR":["提供一个工具，支持根据/sys/kernel/debug/tracing/trace输出的原始数据计算最大进程/线程的调度延迟及发生时间点","或者提供一个工具，支持将/sys/kernel/debug/tracing/trace的输出转化为perf sched latency可解析的格式"],"tR":["理解内核调度子系统","理解调度延迟的概念"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在Linux内核批量页申请接口支持","remark":"","difficulty":"中","mentor":"王克锋","contact":"<wangkefeng.wang@huawei.com>","uniont":null,"student_count":0,"description":"随着存储和网络等硬件设备能力的提升，这些高速设备申请内存也非常频繁，对内存的使用也越来越多，提供更有效的内存申请接口，可以提高吞吐量。批量的申请内存页申请相较循环多次申请单个页可以提高性能。","label":"210010065","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["提供详细的方案介绍文档，基于openEuler 21.03 内核(k5.10)提供代码补丁、测试结果以及相关说明。"],"tR":["熟悉kernel mm模块"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"提供通用的软件故障注入工具","remark":"","difficulty":"高","mentor":"陈立福","contact":"<chenlifu@huawei.com>","uniont":null,"student_count":0,"description":"电信、金融等领域对系统的可靠性要求非常高，通常要求达到5个9（平均年中断时间5分钟）或6个9（平均年中断时间5秒钟）甚至更高。这些系统又极其复杂，存在大量潜在的故障场景，当系统发生故障而没有及时恢复时，往往会造成不可估量的损失。然而，有些系统故障多数情况下不会发生，平常的测试方法很难验证系统是否对这些故障采取了足够的恢复措施。因此，通过故障注入的方式触发故障以验证系统的可靠性是不可或缺的重要方法之一。","label":"210010066","link":"","tech_tag":["Linux","ebpf"],"domain_tag":["Linux Kernel","OS"],"oR":["修改内核态的指定函数的入参或者出参、返回值，或指定内存地址的值，以模拟某种异常。","修改指定用户进程的函数的入参或者出参、返回值，或指定内存地址的值，以模拟某种异常。","模拟函数处理时延增加。","模拟函数替换(PC替换)。","模拟网络丢包、错包。"],"tR":["理解linux kprobe/uprobe机制","理解linux ebpf机制"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"ARM64平台实现硬件长数据断点功能","remark":"","difficulty":"中","mentor":"何鹰","contact":"<heying24@huawei.com>","uniont":null,"student_count":0,"description":"Linux kernel对arm64架构的硬件断点特性中没有使用WCR寄存器中的Address range mask特性，利用此特性可以实现较大范围的数据监控，即长数据断点功能。  WCR寄存器中的Address range mask，指的是WCR中的bits [28:24]，把这些位设置为特定的值，可以对观察的地址最低一些位进行mask，从而达到观察一定范围内地址的目的（最高可达2G范围），具体细节可参考arm v8手册的“D12.3 Debug registers”章节。","label":"210010067","link":"","tech_tag":["Linux","ARM"],"domain_tag":["Linux Kernel","OS"],"oR":["提供方案的设计文档","提供linux内核的修改补丁","提供功能验证的demo"],"tR":["了解linux 操作系统","熟悉Linux内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"使用secGear机密计算框架保护openssh的落盘口令","remark":"","difficulty":"中","mentor":"陈茂冬","contact":"<chenmaodong@huawei.com>","uniont":null,"student_count":0,"description":"ssh协议在利用秘钥进行登录认证时需要使用盘上的存储的公私钥对进行加解密认证，其中私钥以明文方式保存在磁盘上，极易被窃取，并且加解密过程中的数据以明文方式在内存中进行，假如内存数据被窃取，则ssh认证流程的可靠性就丧失了。    目标：  改造openssh，利用secGear对秘钥进行加密，让数据和数据处理流程都在机密计算的可信执行环境当中。","label":"210010068","link":"","tech_tag":["Linux","机密计算，ssh"],"domain_tag":["OS"],"oR":["加解密流程应当在可信执行环境中进行","加解密秘钥应当由可信执行环境中生成"],"tR":["基本的Linux命令","了解ssh协议","了解机密计算技术"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"通过Cephadm在openEuler上部署Ceph并完整测试集群功能","remark":"","difficulty":"中","mentor":"赵帅","contact":"<kevin.zhao@linaro.org>","uniont":null,"student_count":0,"description":"Ceph是目前业界最主流的开源分布式存储框架，在开源私有云场景中得到了广泛地应用，关于Ceph的基本信息可以参考【1】。目前，社区中主流的部署方式有Cephadm，Ceph-ansible和Ceph-deploy。其中，Cephadm是目前社区中快速迭代开发的部署工具，因为其原生的容器化部署能力，简单易用的部署体验获得了非常广泛地关注。本项目希望能够将Cephadm的部署能力引入openEuler，在openEuler系统中完整使能Cephadm来部署整个Ceph集群，并使用一些测试用例进行Ceph集群的功能验证，包括但不限于块存储RBD，对象存储Rados,iSCSI以及CephFS等。    目标：  基于openEuler 21.03 (k5.10)，移植Cephadm部署工具，部署Ceph集群V15版本，并完整运行Ceph集群功能测试集。","label":"210010069","link":"","tech_tag":["Linux","ceph","openEuler"],"domain_tag":["OS"],"oR":["完整移植Cephadm部署工具到openEuler","使用Cephadm部署工具基于openEuler部署Ceph集群","对Ceph集群进行全量功能验证","向上游社区提交相关补丁以解决遇到的问题","总结整个开发流程和遇到的问题，并形成文档（建议使用英文）"],"tR":["熟悉云计算基本概念和分布式存储基本概念","有Ceph相关使用经验和开发经验更佳"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现一个类似开源ROW的IO调度器","remark":"","difficulty":"高","mentor":"余长春","contact":"<yuchangchun1@huawei.com>","uniont":null,"student_count":0,"description":"ROW(Read Over Write)是一个开源的Linux IO调度器（未进内核主线），主要用于注重用户体验的移动设备上。  请考虑在OpenEuler内核上实现一个类ROW的调度器，针对读写混合场景赋予读/同步IO更高的优先级下发IO请求，提升读/同步IO的性能。  由于当前内核已经支持BLK-MQ（多队列）可以考虑基于MQ框架实现调度器接口功能(包括请求入队、下发、完成处理等)，当前可以仅考虑读、同步写、普通写3种IO场景，参考ROW队列或自定义各IO队列的优先级。注意考虑不能饿死写请求。","label":"210010070","link":"","tech_tag":["Linux","IO，openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["代码需要模块的宏隔离，减少侵入式修改影响","代码提交到openEuler开源社区","提供对应的文档说明设计思路，测试数据（FIO等benchmark与其他调度器的性能对比数据)"],"tR":["熟悉Linux存储栈（fs/block层)","理解IO调度原理、ROW/MQ等IO调度器"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现openEuler平台下基于secGear框架的身份认证功能","remark":"","difficulty":"中","mentor":"刘忻","contact":"<xinl@lzu.edu.cn>","uniont":null,"student_count":0,"description":"secGear是华为自主研发的机密计算框架，通过将计算隔离到基于硬件的受信任执行环境以保护运行态数据，并且将不同处理器架构的机密计算方案的差异在软件层面抹平。secGear在Base Layer、Middleware Layer、Service Layer三层分别实现了统一的接口，开发者只需调用这些接口即可使用机密计算相关功能。  目标：  本项目的目标是构建基于openEuler系统，通过secGear机密计算框架实现贯彻零信任理念的统一身份认证功能。该身份认证功能的最终成果应装载在openEuler系统上，为openEuler系统的使用者们提供统一的、安全的身份认证服务，将安全能力融于具体业务。该方法应可以、但不限于建立统一的用户管理，身份配给和身份认证体系，实现用户身份和权限的动态同步，加强信息安全预警和审计。该认证功能后期也可为华为的远程办公、社区管理等应用场景提供更安全的认证服务。","label":"210010071","link":"","tech_tag":["Linux","机密计算，openEuler"],"domain_tag":["OS"],"oR":["构建基于机密计算的、较完备的统一身份认证功能 1.认证平台对用户与系统的注册认证; 2.对用户异常的登录状态检测; 3.需要使用secGear框架对数据计算的安全性进行保护 4.需要尽量使用secGear框架对存储态和传输态的数据进行保护 5.系统应当具有详细的使用文档与开发文档"],"tR":["技术要求：  对openEular具有一定认识  熟悉掌握Linux命令及应用程序部署流程  对机密计算具有一定认识  熟悉掌握secGear框架的开发流程  熟悉掌握C、C++等编程语言  熟悉 Git 等代码版本管理工具  基于可选框架的后端开发 相关项目"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"openEuler平台下基于secGear框架的数字作品权属保护","remark":"","difficulty":"中","mentor":"刘忻","contact":"<xinl@lzu.edu.cn>","uniont":null,"student_count":0,"description":"机密计算是一项突破性的技术，其通过将计算隔离到基于硬件的受信任执行环境（TEE）来保护使用中的数据，以此解决运行态数据难以保护的问题。secGear 是由华为自主研发的机密计算框架，通过在Base Layer、Middleware Layer、Service Layer三层实现的丰富接口，为开发者提供的一个统一的应用开发框架，在软件层面抹平了不同处理器架构的机密计算方案的差异，解决了机密计算多架构的痛点。同时，也大幅度降低了开发者编写安全应用的复杂度，提高了他们的开发效率。  目标：  本项目的目标是基于openEuler系统通过secGear机密计算框架开发一个对个人数字作品的权属进行保护的系统。该系统的最终成果应该以本地原生应用程序的形式装载在openEuler系统上，通过机密计算的高安全性，为openEuler系统的使用者们提供便捷安全的数字作品权属生成和认证等服务，以此成为保护使用者知识产权的有力屏障。项目的后期也将可以应用于华为openEuler开源社区和华为的数字产业之中，为华为提供更安全的数字作品保护服务。","label":"210010072","link":"","tech_tag":["Linux","机密计算，openEuler"],"domain_tag":["OS"],"oR":["较为完整和科学的数字作品权属保护流程 流程需要适配一种及以上的数字作品（图片、音乐、视频、软件、文档等） 流程需要具有数据权属的生成步骤 流程需要具有数据权属的认证步骤","系统需要使用secGear框架对数据计算的安全性进行保护","系统需要尽量使用secGear框架数据存储及传输过程中的用户隐私数据进行保护","系统需要兼容不同硬件环境","系统应该进行优化，以具有良好的性能","系统应该具有详细的使用文档和开发文档"],"tR":["对openEular具有一定认识","熟悉掌握Linux命令及应用程序部署流程","对机密计算具有一定认识","熟悉掌握secGear框架的开发流程","熟悉掌握C、C++等编程语言","熟悉 Git 等代码版本管理工具"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"isula-build镜像构建工具支持跨架构镜像构建","remark":"","difficulty":"中","mentor":"李翔","contact":"<lixiang172@huawei.com>","uniont":null,"student_count":0,"description":"isula-build镜像构建工具目前尚不支持跨架构镜像构建，即在x86_64平台上构建arm64镜像（反之亦然）。","label":"210010073","link":"","tech_tag":["Linux","Cloud Native","Container","openEuler"],"domain_tag":["OS","Container"],"oR":["在已有功能上开发，使得isula-build支持跨架构镜像构建。","接口可拓展，暂时只需支持x86_64、arm64两种架构，未来可以无痛扩展到更多架构。","自测充分，有go test看护相关代码。","相关文档说明输出。"],"tR":["熟悉Linux下开发","了解容器镜像","热爱探索新事物"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"将per-memcg LRU lock 特性移植到openEuler的内核上","remark":"","difficulty":"低","mentor":"缪晴朗","contact":"<miaoqinglang@huawei.com>","uniont":null,"student_count":0,"description":"自内核引入memcg以来，系统单一的lru list已经分成了每个内存组一个lru list，由每个内存组单独管理自己的 lru lists。但per memcg lru lock却没有同时引入，导致lru锁在不同memcg上的竞争十分激烈。社区中per-memcg LRU lock的补丁集为每个memcg引入了lru lock，来解决这个存在已久的问题。    该任务是把希望该特性移植到openEuler的内核上，并验证性能的提升。","label":"210010074","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["把该特性移植到openEuler的内核。","特性分析文档。","在openEuler上验证性能的提升。"],"tR":["了解linux操作系统以及内核","了解linux内存管理（尤其是memcg 与 lru）或对它感兴趣"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为Linux内核寻找更多的补丁修改范式","remark":"","difficulty":"低","mentor":"缪晴朗","contact":"<miaoqinglang@huawei.com>","uniont":null,"student_count":0,"description":"Linux内核代码中的很多缺陷是可以提取出范式的，而coccinelle是一个利用范式来做静态扫描的工具。  本项目基于对Linux内核代码和coccinelle语法的理解，希望找到更多的补丁修改范式，更好地支撑开源工作并回馈社区。","label":"210010075","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["输出至少3个原创的coccinelle规则，并开源至Linux社区","根据上条规则，向内核社区贡献20+修复补丁。"],"tR":["了解linux操作系统以及内核","了解Linux社区补丁发送流程或对它感兴趣。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发Linux内核结构体关联关系分析工具","remark":"","difficulty":"高","mentor":"郭雪楠","contact":"<guoxuenan@huawei.com>","uniont":null,"student_count":0,"description":"我们在阅读linux代码过程中长遇到的问题是结构体纷繁复杂，如果能够理清代码中相关结构体的关联关系，那么对于系统设计和代码分析理解非常有帮助。因此，本项目期望是实现一个工具，能够对指定特定模块或者结构体 ，导出并绘制所有与此结构体相关的关联关系图谱。    基本的软件模块包括：  openeuler linux4.19 内核代码  gcc编译工具链等","label":"210010076","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["基于openEuler，实现一个简易的解析系统，完成对内核代码的结构体关联图谱解析和展示。","总结整个流程和遇到的问题，并形成文档"],"tR":["熟悉c编译原理，了解c代码的编译链接等过程","熟悉Linux操作系统及内核的模块编译方法","有web或者图形化界面项目开发经验更佳"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"基于openEuler的5.10内核实现对系统page cache限制","remark":"","difficulty":"中","mentor":"荆向峰","contact":"<jingxiangfeng@huawei.com>","uniont":null,"student_count":0,"description":"系统长时间运行后，page cache往往占用大量内存，导致系统整体内存较少。此时若业务突然来了大量内存分配请求，就有可能导致边回收便分配的情况出现，由于内存分配时间变慢，会导致业务性能降低。page cache限制特性实现两个功能：用户可配置page cache使用上限和定期清理page cache。","label":"210010077","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["通过/proc/vm/可以配置page cache使用上限;","系统定期回收page cache（效果与用户配置使用上限一致）","输出开发流程的文档"],"tR":["熟悉linux操作系统内存管理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"优化Linux内核中的复杂头文件依赖","remark":"","difficulty":"中","mentor":"缪晴朗","contact":"<miaoqinglang@huawei.com>","uniont":null,"student_count":0,"description":"Linux内核中的头文件依赖是一个复杂的课题。本项目希望能尽可能精简Linux内核中复杂的头文件依赖，优化编译路径。","label":"210010078","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["分析Linux头文件依赖问题，输出一篇技术文章。","调研或开发解决复杂依赖的算法。","依据上述算法，开发一个自动检测'Linux头文件依赖可优化点'的工具，能切实有效地帮助该问题的解决。"],"tR":["熟悉C预处理过程","熟悉makefile原理","解linux操作系统以及内核"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"erofs文件系统的 dump 工具开发","remark":"","difficulty":"中","mentor":"郭雪楠","contact":"<guoxuenan@huawei.com>","uniont":null,"student_count":0,"description":"erofs压缩文件系统 是华为最新推出到社区的压缩文件系统，广泛应用在华为手机和终端存储设备中，但目前针对erofs文件系统镜像的分析工具尚未有进行开发，dump工具对于数据压缩情况分析和异常问题定位都很有帮助，可以通过开发dump工具，提高对文件系统磁盘结构以及文件系统实现细节有更深入的理解，并且能够贡献代码到erofs-tools    基本的软件模块包括：  openeuler linux4.19 内核代码  gcc编译工具链等    目标：  基于openEuler 4.19版本内核的erofs文件系统磁盘结构，基于现有的erofs-utils 完成erofs dump工具","label":"210010079","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["实现dump工具并贡献代码到erofs-utils"],"tR":["熟悉Linux操作系统及内核的模块编译方法","了解基本的文件系统原理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现Linux memory cgroup 子系统的水线分级功能","remark":"","difficulty":"中","mentor":"荆向峰","contact":"<jingxiangfeng@huawei.com>","uniont":null,"student_count":0,"description":"memory cgroup的使用内存达到上限时会触发内存回收，而内存慢速路径(涉及到脏页回写/swapd等操作)上的直接回收会严重影响业务性能。  memcg水线分级的目的是实现异步内存回收，引入usage high 和low水线，当usage到high时触发异步回收，  当free到达 low时，停止回收。","label":"210010080","link":"","tech_tag":["Linux","cgroup"],"domain_tag":["Linux Kernel","OS"],"oR":["可以动态配置low和high水线；","当usage到high触发内存回收，回收到low时停止；","输出开发流程的文档；"],"tR":["熟悉linux操作系统内存管理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"基于secGear机密计算框架实现用户信息表保护与“一次一密”","remark":"","difficulty":"中","mentor":"刘忻","contact":"<xinl@lzu.edu.cn>","uniont":null,"student_count":0,"description":"构建基于secGear机密存储计算框架和DAC动态轮转机制的“一次一密”功能，使用secGear对主密钥进行机密存储，结合机密计算动态轮转用户凭证密文，达到安全目的。与此同时，应该充分考虑系统的可用性，能够使该扩展功能满足高可用性的要求。对外提供接口，该认证功能后期也可为欧拉操作系统上运行的软件提供用户表与权限表的“一次一密”的保护服务。","label":"210010081","link":"","tech_tag":["Linux","机密计算，openEuler"],"domain_tag":["OS"],"oR":["密钥在TEE环境中存储","密钥的使用全程处于安全可信机密计算环境","用户表内容动态轮转","系统应当具有详细的使用文档与开发文档"],"tR":["对openEular具有一定认识","熟悉掌握Linux命令及应用程序部署流程","对机密计算具有一定认识","熟悉掌握secGear框架的开发流程","熟悉掌握C、C++等编程语言","熟悉 Git 等代码版本管理工具","基于可选框架的后端开发"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"Data Access Monitor DAMON特性回合","remark":null,"difficulty":"高","mentor":"邹悦","contact":"<zouyue3@huawei.com>","uniont":null,"student_count":0,"description":"DAMON是一个内核模块，允许用户监控一个特定用户空间的进程的实际内存访问。 其目的是要足够精确到可以帮助性能优化，并且足够轻量，可以实现实时在线监控，辅助性能优化。DAMON模块的整体架构和具体实现可查看参考资料【1】，本项目希望能够将该特性移植到openEuler的内核上，并验证DAMON可以辅助进行性能优化的应用场景。","label":"210010303","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["把该特性移植到openEuler的内核","输出特性分析文档","在openEuler上验证DAMON特性应用场景"],"tR":["了解linux操作系统以及内核","了解linux内存管理或对它感兴趣"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现memory cgroup子系统OOM优先级的功能","remark":null,"difficulty":"中","mentor":"荆向峰","contact":"<jingxiangfeng@huawei.com>","uniont":null,"student_count":0,"description":"在现有的OOM基础上引入CGroup OOM优先级，数值越大优先级越高，优先级的生效范围为同级memcg之间；这样在触发OOM时kill低优先级的cgroup的进程.    示例：https://gitee.com/openeuler-competition/summer-2021/issues/I3EL9X?from=project-issue    当发生memcg OOM时，从根组(root)开始按每个层级数据最小原则遍历路径  root-&gt;B-&gt;E,最终从E中选择进程kill","label":"210010304","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["可以动态配置memcg的优先级，范围[0,12];","触发OOM，kill低优先级的cgroup的进程","输出开发流程的文档；"],"tR":["熟悉linux操作系统内存管理"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"openEuler基础镜像优化","remark":null,"difficulty":"中","mentor":"邢为政","contact":"<xingweizheng@huawei.com>","uniont":null,"student_count":0,"description":"当前openEuler基础镜像体积较大，作为普通应用的构建基础，并不需要安装过多与运行该普通应用无关的软件包依赖。且openEuler软件包依赖关系较重部分软件包minimal版本实现并未引入，进一步使得基础镜像体积增大。要求分析openEuler软件包源依赖关系，提供相应的分析结果，给出openEuler基础镜像轻量化体积实现。","label":"210010305","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["OS"],"oR":["提供软件包分析的相应结果以及相应优化的软件包","提供openEuler基础镜像、镜像制作工具及源码","体积较当前21.03 openEuler基础镜像减少10%及以上，见openEuler基础镜像优化"],"tR":["了解统基础软件包管理dnf/rpm","掌握其中一门语言工具（shell，python，golang）"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"设计一套Arm64/RISCV内核代码分析工具","remark":null,"difficulty":"高","mentor":"廖畅","contact":"<liaochang1@huawei.com>","uniont":null,"student_count":0,"description":"当前RISCV作为一个新兴的指令集，已经引入到Linux内核。但由于RISCV微架构和指令集仍处于发展和演进阶段，所以在很多功能特性上缺乏内核的支持，当前arch/riscv目录下的代码规模在20K，而arch/arm64目录下的代码规模在400K。为了指导工程师快速识别和补齐RISCV内核缺失的功能，同时为RISCV架构师提供一个OS层面功能全景图，本项目希望设计一套内核代码分析工具，分析Arm64和RISCV的内核代码。    基本的软件模块：    linux-5.12 内核代码  llvm编译工具链等  目标：  根据linux-5.12版本的内核代码，通过llvm分析arch/riscv和arch/arm64下的Makefile，Kconfig，.c源码，.h头文件，提取出每个指令集涉及的CONFIG_XXX，函数，宏，变量。并且根据描述里的提及的方式，来建立CONFIG_XXX和文件，文件和函数，宏，变量之间的关系。    分析结果能按照功能特性进行分类，具体而言，对每种指令集的源码文件，输入如下格式的分析报告：    [CONFIG_XXX]: {foo.c, foo.h, bar.c ...}  [foo.c]: {func_a, func_b, ...}  [foo.h]: {macro_a, func_c，var_d, ...}。  其中CONFIG_XXX是内核配置宏，它代表的内核的一个功能特性，CONFIG_XXX后面是一个文件列表，它代表是该特性涉及的arch目录源文件和头文件。针对该列表里的每个文件，进一步生成它包含个函数，全局变量，宏定义列表。通过对比RISCV和Arm64的分析报告，就可以形成一个功能沙盘图，进而帮助工程师快速补齐和改善功能。","label":"210010306","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["Linux Kernel","OS"],"oR":["基于linux-5.12生成arch/riscv和arch/arm64的代码分析报告","总结整个开发流程和遇到的问题，并形成文档"],"tR":["熟悉Linux内核的代码组织结构，Kconfig，Makefile","熟悉llvm并能利用AST分析工具对Makefile，C源码文件和头文件进行结构化的处理，提取语法对象（比如obj-xxx，函数，变量，宏）"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"基于X86平台超线程提升系统性能","remark":null,"difficulty":"高","mentor":"马军海","contact":"<majunhai2@huawei.com>","uniont":"郑祖程<zhengzucheng@huawei.com>","student_count":0,"description":"SMT（Simulate MultiThreading）或HT（Hyper-Threading Technology）是超线程技术的学术名称。这技术的引入是为了更好的利用CPU的空闲资源，Intel从奔腾处理器就开始引入超标量、乱序运行、多流水线、大量的寄存器及寄存器重命名、多指令解码器、预测运行等特性，这些特性的原理是让CPU拥有大量资源，并可以乱序执行，提高指令运行效率，可是在现实中这些资源经常闲置，为了有效利用这些资源，运行第二个线程，有效的提升CPU的利用率和改善计算机的性能。  给定特定硬件资源的话，着眼于多线程中的某个线程的话，超线程技术实际会拉低单线程性能，因为会分出一些硬件资源给其他线程。即：单个线程的硬件资源利用率下降了。但是即便某个线程独占所有硬件资源的话，也会因为一些指令执行相关性（比如cache miss，table walk等等）而不得不停下来等这些完成。等的时候很多硬件资源是闲置的，利用率也就会下降。但是把这些线程合起来考虑的话，总体IPC应该是上升的。因为一个线程在等、硬件资源闲置下来的时候，另外一个线程可以把这些闲置的资源利用起来。所以所有线程的资源利用率会比单个线程全部占有硬件资源时的利用率高。  由于超线程是共享同个物理CPU资源，如果多个超线程同时运行出现资源竞争情况下，会导致性能下降，本课题是为了怎么有效的利用超线程的特性，提升系统的性能。","label":"210010307","link":"","tech_tag":["Linux"],"domain_tag":["OS"],"oR":["基于X86平台，在开启超线程的场景下，实现系统性能的提升，给出原型demo及验证结果文档"],"tR":["熟悉调度，MU，AI"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"提供openEuler云原生基础镜像集","remark":null,"difficulty":"中","mentor":"邢为政","contact":"<xingweizheng@huawei.com>","uniont":null,"student_count":0,"description":"云原生场景下，以kubernetes等技术为基础的云化OS成为各行各业快速完成数字化转型的基础，而其调度的基础便是基础容器镜像。为了支持不同场景下不同应用的基础构建需求，需要提供不同形式的基础镜像以满足需求。对于高安全场景下，考虑distroless镜像，例如，静态编译应用仅考虑相关基础配置文件环境的提供，例如包含ca-certificates证书文件，tzdata时区等文件的环境；对于普通场景考虑Universal Base Image镜像，提供相应的yum软件包栈及OpenSSL软件包栈等；同时，考虑提供相应debug调试镜像的以方便开发者进行开发测试。","label":"210010308","link":"","tech_tag":["Linux","Cloud Native","容器，openEuler"],"domain_tag":["OS","Cloud Native"],"oR":["使用openEuler21.03，x86，arm平台任选其一","提供openEuler云原生基础镜像集制作工具及源码","提供openEuler云原生基础镜像集，包括但不限于以下内容并尽可能提供更小的镜像：  静态编译应用环境（基础配置） 基础应用环境（静态编译应用环境 + glibc等） 语言环境（基础应用环境 + golang | python | java 语言运行环境） 语言调试环境（语言环境 + 调试工具链） 基础软件包栈环境 （openeuler基础镜像环境） 基础软件包栈语言环境 （基础软件包栈环境 + golang | python | java 语言运行环境） 基础软件包栈语言调试环境 （基础软件包栈语言环境 + 调试工具链）","提供openEuler云原生基础镜像集分析技术文档"],"tR":["了解基础容器运行环境","了解基础软件包管理dnf/rpm","掌握其中一门语言工具（shell，python，golang）"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现日志文件系统xfs 支持 subpage dirty","remark":null,"difficulty":"中","mentor":"余快","contact":"<yukuai3@huawei.com>","uniont":null,"student_count":0,"description":"背景  xfs是一种高性能的日志文件系统，CentOS 7开始，预设的文件系统由原来的EXT4变成了XFS文件系统。    但是目前对于特定的场景，xfs仍然存在缺陷    xfs缺陷  buffer IO是linux中常见的 io 方式，在buffer 写时，数据会被存放到缓存中，此时写操作就算完成。数据真正地落到物理介质上需要用户主动触发fsync操作，或者由操作系统会定期的回刷。    缓存页是page cache中管理数据的基本单位，其大小是固定的(一般是4k-64k)，当用户buffer写后，对应的缓存页的状态会被置为脏，进行回刷操作时，会将这些置脏的缓存页写到磁盘。    当页大小为64k时，即使用户只写入一个字节时，整个page都会被置脏，这就导致回写时xfs需要往磁盘写入64k的数据(理论上只用写入文件系统支持的块大小，在格式化时指定)    解决方案  ext4存在subpage dirty可以解决该问题，缓存页被划分为了多个子页，当数据写入缓存时，只将对应的子页置脏，因此回刷数据时只需要将置脏的子页中的数据落盘即可。    对于xfs，需要实现类似的subpage dirty的机制(xfs已经有subpage uptodate的机制，可以参考实现)","label":"210010309","link":"","tech_tag":["Linux","文件系统"],"domain_tag":["OS"],"oR":["实现xfs的subpage dirty机制，优化大内存页场景下小io+fsync的性能"],"tR":["熟悉linux内核代码的组织结构，能做到编译内核","熟悉虚拟机的使用方式，能做到启动自己编译的linux内核虚拟机","了解linux的io栈，并且熟悉buffer io在xfs文件系统层的流程"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 isula-build 实现 export 接口：将镜像导出为 rootfs","remark":null,"difficulty":"中","mentor":"卢景晓","contact":"<lujingxiao@huawei.com>","uniont":null,"student_count":0,"description":"isula-build 是 iSula 团队推出的容器镜像构建工具，通过输入Dockerfile，优化后的构建速度，输出符合Docker和OCI镜像规范的容器镜像，并分发至指定的镜像仓库、容器引擎或本地存储。    当前isula-build save出来的镜像都是按照image spec要求的、按镜像层分层的输出件格式。需要添加如下功能：    添加ctr-img export接口，支持将镜像保存为一个展开的 rootfs 的 tarball 格式  基于ctr-img export接口，添加flag，支持将镜像保存为一个仅包含image spec的empty.tar 和 一个展开的 rootfs  给 ctr-img import 接口添加 flag，以支持导入这种镜像形式  使用文档请见：《openEuler 21.03 容器用户指南》https://docs.openeuler.org/zh/docs/21.03/docs/Container/isula-build%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7.html     源码仓地址：https://gitee.com/openeuler/isula-build","label":"210010354","link":"","tech_tag":["Go","Linux","Cloud Native","容器，openEuler"],"domain_tag":["Linux Kernel","OS","Cloud Native"],"oR":["编写 isula-build 的源码、单元测试以及tests","更新 isula-build 相关使用文档","源码提交至 isula-build 源码仓"],"tR":["熟悉go语言开发"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 iSulad 设计并开发性能测试框架","remark":null,"difficulty":"中","mentor":"刘昊","contact":"<liuhao27@huawei.com>","uniont":null,"student_count":0,"description":"iSula 是一种云原生轻量级容器解决方案，iSulad 作为轻量化的容器底座，可以为多种场景提供灵活、稳定、安全的底层支撑。本项目任务是为 iSulad 设计并开发性能测试框架，实现：    -支持iSula性能测试的，执行、结果数据处理以及结果展示；  ​- 支持多种类型的性能测试：包括CRI和Client两种接口类型的性能测试；  -支持多种容器引擎的性能测试对比，例如iSula和docker、cri-o等引擎的对比；  -结果显示友好，清晰；","label":"210010398","link":"","tech_tag":["Linux","Cloud Native"],"domain_tag":["OS","Cloud Native"],"oR":["完成上述性能测试的基本要求；","项目框架具备高可拓展性，建议参考微服务的设计思想；","代码高效简洁、模块高内聚；","用户交互友好；"],"tR":["良好的代码设计和开发能力，能够熟练使用一种语言进行代码编写（C/C++/Python...）；","了解容器引擎iSulad/Docker；","对性能测试有一定的了解；"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 iSulad 镜像下载过程添加进度条显示","remark":null,"difficulty":"高","mentor":"王丰土","contact":"<wangfengtu@huawei.com>","uniont":null,"student_count":0,"description":"当前执行isula pull命令下载镜像时没有任何提示信息，无法知道当前的下载的进度，需要增加下载进度的显示，下载进度显示的打印信息可以参考docker下载镜像时的打印信息。","label":"210010399","link":"","tech_tag":["Linux","Cloud Native"],"domain_tag":["OS","Cloud Native"],"oR":["isula pull下载过程中能显示下载和注册镜像的进度，界面友好(类似docker的界面显示)。"],"tR":["了解isula/docker的镜像下载过程","了解grpc流式服务"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 iSulad 创建容器命令增加User namespace的能力","remark":null,"difficulty":"中","mentor":"吴景","contact":"<wujing50@huawei.com>","uniont":null,"student_count":0,"description":"当前iSulad默认没有隔离宿主机用户和容器中的用户，要求通过客户端isula配置—setns接口参数isula来隔离容器中的用户。","label":"210010400","link":"","tech_tag":["Linux","Cloud Native"],"domain_tag":["OS","Cloud Native"],"oR":["完成客户端iSula及服务端iSulad相应代码的编写（客服端实现参数的透传，服务端实现参数的校验，并从主机/etc/subuid和/etc/subgid中获取相应的配置信息转发置lcr）"],"tR":["熟悉c语言的使用","了解 Linux user namespace"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 iSulad 的查询(inspect)命令增加size 以及 type 子命令","remark":null,"difficulty":"中","mentor":"张晓雨","contact":"<zhangxiaoyu58@huawei.com>","uniont":null,"student_count":0,"description":"docker的inspect命令具有size及type子命令：    -s, --size Display total file sizes if the type is container    --type string Return JSON for specified type    而当前的isula inspect 并没有 size 及 type 子命令，本项目任务要求为isula inspect 查询命令添加 -s, --size 以及 --type 子命令。","label":"210010401","link":"","tech_tag":["Linux","Cloud Native"],"domain_tag":["AI","Cloud Native"],"oR":["为 isula inspect 提供 -s, --size 子命令，当查询的对象为容器时展示文件大小(\"SizeRw\"、\"SizeRootFs\"等)","为 isula inspect 提供 --type 子命令，对于指定的type(container、image等)进行查询"],"tR":["熟悉C语言的使用","了解iSulad/Docker的使用"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"利用kprobe等工具实现快速定位网络丢包和时延问题的工具","remark":null,"difficulty":"中","mentor":"王海","contact":"<wanghai01@corp.netease.com>","uniont":null,"student_count":0,"description":"项目背景：在实际的网络通信中，丢包和时延都属于常见问题，需要开发一款能快速定位丢包和查找时延大的工具，本次项目主要针对udp的丢包和时延进行分析。    项目环境：两台机器，一台发udp包，一台收udp包  1. 构造各种丢包场景（如短时间发大量包，tc注入故障等），通过工具，可以抓取丢包点（可以将\"netstat -s\"查看的丢包原因，和kretprobe获取导致丢包的函数的返回值结合起来，分析出具体函数的丢包具体位置和丢包原因）。  2. 构造高时延场景（如利用tc延迟数据包的发送，或在某个函数中加延时），通过kprobe工具，可以获取数据包在经过每一个关键函数的时候的耗时，最后找到耗时长的函数和原因","label":"210010402","link":"","tech_tag":["Linux"],"domain_tag":["OS"],"oR":["快速找到网络数据包的丢包点，并给出丢包的函数和丢包的原因","抓取网络数据包经过协议栈每一层关键函数的时间，过滤出某些时延大的数据包，并找出耗时长的原因"],"tR":["熟悉linux网络编程","熟悉网络协议栈"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"统计分析JDK中的Deoptimization模型","remark":null,"difficulty":"高","mentor":"王篁","contact":"<wanghuang3@huawei.com>","uniont":null,"student_count":0,"description":"Deoptimization在Hotspot 中指的是从JIT到解释器的过程。它实际上是另一种栈上替换。Deoptimization（以下简称Deopt）会导致执行上下文切换等操作，而且放弃了高效的JIT,从而使得执行效率变差。本项目任务为研清楚常见的四种Benchmark[1]中Deopt的模式，并给出相应的Hotspot的解决方案。","label":"210010403","link":"","tech_tag":["Linux","Java","JDK"],"domain_tag":["OS"],"oR":["在jdk/jdk最新仓或者Bisheng JDK 11上完成相应工作","基本目标：调研清楚常见的四种Benchmark[1]中Deopt的模式，并给出相应的解决方案。","生成针对jdk/jdk和(或)Bisheng JDK11的开源patch","代码可维护性好。"],"tR":["了解汇编知识","了解虚拟机，特别是Hotspot相关知识"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发IO热度统计的可视化工具","remark":null,"difficulty":"中","mentor":"王承珂","contact":"<wangchengke2@huawei.com>","uniont":null,"student_count":0,"description":"根据文件系统和IO日志信息统计读写访问热度，并提供可视化工具，按磁盘地址或目录结构等维度进行展示","label":"210010404","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["基于openEuler，使用相关trace工具（如btrace、ftrace、ebpf等）实时获取IO相关日志","实现工具处理日志并自动统计IO热度，可自选统计维度，如磁盘地址被访问的频率、文件被访问的频率等","设计和实现IO热度可视化工具，按磁盘地址或目录结构等维度进行展示，如色阶图、目录树等，也可以自行设计界面UI","总结整个开发流程和遇到的问题，并形成文档"],"tR":["熟悉Linux操作系统及内核","有文件系统开发背景更佳"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为 iSulad 添加checkpoint/restore 功能","remark":null,"difficulty":"高","mentor":"李峰","contact":"<lifeng68@huawei.com>","uniont":null,"student_count":0,"description":"本项目任务是为iSulad增加checkpoint/restore 功能支持，可以将容器中进程状态、内存资源等持久化到磁盘，可以通过restore功能恢复容器运行。    CRIU（Checkpoint/Restore In Userspace）是运行在linux操作系统上的一个软件工具，其功能是在用户空间实现Checkpoint/Restore功能。使用这个工具，你可以冻结一个正在运行的程序，并且checkpoint它到一系列的文件，然后你就可以使用这些文件在任何主机重新恢复这个程序到被冻结的那个点(白话就是实现对已运行程序的备份和恢复)。所以criu通常被用在程序或者容器的热迁移、快照、远程调试等。CRIU 起初是Virtuozzo的一个项目，随着开源社区的帮助，现在也被整合到OpenVZ（它是 Virtuozzo 的开源版本）, LXC/LXD, Docker, Podman等软件项目里。","label":"210010405","link":"","tech_tag":["Linux","Cloud Native"],"domain_tag":["OS","Cloud Native"],"oR":["为iSulad增加checkpoint/restore 功能支持，可以将容器中进程状态、内存资源等持久化到磁盘，可以通过restore功能恢复容器运行"],"tR":["了解 CRIU 项目","了解iSulad项目"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"Rust-usimd项目建设","remark":null,"difficulty":"中","mentor":"李原","contact":"<liyuan179@huawei.com>","uniont":null,"student_count":0,"description":"本题目为基于Rust simd标准库stdarch中提供的arm架构指令集，实现一套应用于鲲鹏(armv8)架构的simd接口，在Rust-ndarray中落地，使其关键运算(例如矩阵间四则运算)性能提升100% ~ 400%。","label":"210010406","link":"","tech_tag":["Linux","Rust"],"domain_tag":["OS","Rust"],"oR":["基于Rust标准库中stdarch库实现的，硬件特性对用户透明化的，面向ndarray关键运算场景的simd接口，在ndarray中落地。"],"tR":["熟悉Rust语言，有相关开发经验。","了解simd单指令多数据加速的概念，对并行加速有实践经验更佳。","了解arm架构相关知识，有arm汇编技术基础者更佳。","有一定的线性代数理论基础。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发完善Rust社区中的度量工具","remark":null,"difficulty":"中","mentor":"陈硕","contact":"<chenshuo17@huawei.com>","uniont":null,"student_count":0,"description":"根据项目要求完善Rust社区中的代码度量工具，部分可选内容如下：  1)代码重复率统计;  2)函数平均圈复杂度统计;  3)源文件重复率统计;  4)冗余代码行数统计;  5)文件平均代码行数统计；  6)函数平均代码行数统计；","label":"210010407","link":"","tech_tag":["Linux","Rust"],"domain_tag":["OS","Rust"],"oR":["输出代码满足内存安全、结构清晰、可扩展等标准",".使用Rust语言开发并集成到cargo工具，用户可通过命令行获得结果；"],"tR":["了解或对Rust语言感兴趣；","对编译原理的入门性了解，如抽象语法树等；","文本处理、常用数据结构和算法知识；"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发完善Rust社区中的代码规范检查工具","remark":null,"difficulty":"高","mentor":"陈硕","contact":"<chenshuo17@huawei.com>","uniont":null,"student_count":0,"description":"根据代码规范的具体要求，开发自动化检测工具，扫描代码，报告不符合规范的代码并展示提示信息","label":"210010408","link":"","tech_tag":["Linux","Rust"],"domain_tag":["OS","Rust"],"oR":["输出代码满足内存安全、结构清晰、可扩展等标准","集成到cargo工具，可通过命令行使用","输出包含总体统计信息和每个违规点的展示"],"tR":["了解或对Rust语言感兴趣","了解编译原理","文本处理、常用数据结构和算法知识"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"将复古游戏机模拟器RetroPie移植到树莓派openEuler平台上","remark":null,"difficulty":"中","mentor":"李宝林","contact":"<libaolin@huawei.com>","uniont":null,"student_count":0,"description":"RetroPie是一款流行的复古游戏机模拟器，可以装在树莓派或者PC上，从而让树莓派或者PC成为一台游戏机；目前RetroPie仅对树莓派官方操作系统Raspberry Pi OS支持较好。现在需要完成RetroPie对树莓派openEuler操作系统的完整支持，并预装至少3个复古游戏。","label":"210010409","link":"","tech_tag":["Linux","树莓派"],"domain_tag":["OS","游戏开发"],"oR":["RetroPie可以运行在树莓派openEuler平台上且预装的游戏可以流畅地运行；","RetroPie在树莓派openEuler平台的安装过程尽可能方便简单；","将RetroPie对树莓派openEuler平台的支持贡献到上游社区。"],"tR":["熟悉openEuler操作系统的安装使用","软件包的编译安装并能解决依赖问题；","shell脚本的熟练使用"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"Linux系统实现direct-thread-switch轻量级线程切换","remark":null,"difficulty":"中","mentor":"陈辉","contact":"<judy.chenhui@huawei.com>","uniont":null,"student_count":0,"description":"在操作系统中，线程是一个独立的运行单元，一般认为每个线程是独立运行的；但是在实际应用中，经常出现一个业务功能需要多个线程协同处理，这时候线程和线程之间存在逻辑上的关联关系，经常出现线程之间的唤醒与被唤醒。线程的每次“交互”需要内核调度模块参与，一次完整的交互，内核调度模块需要参与选核，入队列，更新负载信息，选任务等流程。系统中如果线程比较多（有数千个线程）,线程负载比较小的场景下，会导致内核调度开销比较大，而且线程之间交互的效率比较低（线程B需要入队列，等待CPU资源，导致runable的时间比较长）。    在《The Case for Thread Migration- Predictable IPC in a Customizable and Reliable OS》这篇论文中讲述了一种新的线程切换思路：执行实体与调度实体分离，在同步IPC场景中，线程之间发生切换，只切换执行实体不切换调度实体，从而提升IPC的通信效率，降低调度开销。通过测试，这种技术可以使得同步IPC的效率提升近10倍。    执行实体与调度实体分离的技术适用于微内核架构，在linux系统中并不适用，主要因为linux系统在设计之初就将执行实体与调度实体融合成一个结构体：task_struct, 经过多年的开发，task_struct结构体已经散布到linux内核的各个模块中，此时拆分执行实体和调度实体，工作量大，难度高，质量难以保障。    我们可以重新审视执行实体和调度实体分离的技术原理，在线程交互时，切换执行实体而不切换调度实体，本质上是利用了原任务的剩余时间片来运行新任务，bypass调度，降低了内核调度开销，同时原任务直接切换到新任务时，新任务不用重新入队列等待CPU资源，这时没有尾时延（runnable时间），大大提升线程交互的效率。这种往往用在同步线程模型中（原任务进入休眠，新任务执行）。    我们讲原任务直接切换到新任务，bypass调度的技术命名为direct-thread-switch, 这里强调下，bypass调度的前提必须是利用原任务的剩余时间片，否则会打破CFS调度的公平性。    在Linux环境下实现sync_yield_to功能，sync_yield_to的线程切换模型按照direct-thread-switch方法进行实施。    基本的软件模块包括：  1、内核线程切换（direct-thread-switch）  2、用户态接口（sync_yield_to）    验证内容：  1、验证sync_yield_to较yield在CPU调度开销上节省空间；  2、验证sync_yield_to较yield在E2E的效率上提升的空间；    验证说明：系统环境需要有1000个运行线程（用于衡量runable的时间）；    目标：  1、基于openEuler 21.03 (k5.10)，实现上述功能，在Qemu虚拟机上编译安装并验证效果；  2、（挑战，可选）基于linux同步交互场景如binder，poll等，挑选合适的场景，应用上述功能，并验证收益。","label":"210010410","link":"","tech_tag":["Linux"],"domain_tag":["OS"],"oR":["基于openEuler，实现相关的功能并验证效果；","总结整个设计方案，形成文档（建议英文）","对于挑战目标，可以不实现，但必须有对应的设计方案，体现在文档中。"],"tR":["熟悉Linux操作系统及内核。","有Linux内核调度相关的实践经验。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"统计调度系统的性能","remark":null,"difficulty":"低","mentor":"余家华","contact":"<yujiahua1@huawei.com>","uniont":null,"student_count":0,"description":"操作系统在调度任务运行时，有很多流程，如给任务选核、选出下一个运行的任务等，这些开销也是cpu的负载的一部分。在真实业务场景下，为了提升CPU的使用率及响应速度，使用了很多优化调度开销的手段，如协程等。为了统计调度系统的性能，需要统计出调度系统各个步骤所花费的时间。","label":"210010411","link":"","tech_tag":["Linux"],"domain_tag":["OS"],"oR":["实现demo，能用统计出如下数据：  从当前任务将要被切出cpu开始，到选出下一个任务所需的时间（task_struct 出队、入队、cfs选任务流程所花时间） context_switch所需时间 整个系统运行过程中，cpu花费在调度系统上的时间占总运行时间的百分比 整个系统中，所有线程的被阻塞的时间（处于runnable状态，但是没在cpu上运行的时间）"],"tR":["了解cfs调度原理、linux调度流程"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发Rust crates包仓库病毒扫描功能","remark":null,"difficulty":"中","mentor":"王齐林","contact":"<wangqilintech@gmail.com>","uniont":null,"student_count":0,"description":"根据项目要求开发Rust crates包仓库病毒扫描功能，包括但不限于  1)调研已有病毒扫描引擎，选择合适方案  2)完成 crates包仓库服务中 调用病毒扫描引擎的流程设计和后端代码开发  3)完成病毒扫描引擎的部署测试并输出文档  4)完成前端扫描结果显示模块的开发","label":"210010412","link":"","tech_tag":["Linux","Rust"],"domain_tag":["OS","Rust"],"oR":["输出代码满足内存安全、结构清晰、可扩展等标准；","病毒扫描基础功能完整可用"],"tR":["了解Rust语言基础；","有前后端开发的基础知识；","了解病毒扫描基础知识"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"openEuler异常信号监测","remark":null,"difficulty":"中","mentor":"唐艺舟","contact":"<tangyizhou@huawei.com>","uniont":null,"student_count":0,"description":"生产环境中的进程众多，我们对进程因信号导致异常退出的事件感兴趣。比如A进程因错误编程误杀(kill -9或kill -15)B进程，又比如C进程非法访问内存导致收到内核SIGSEGV信号退出。请记录openEuler中产生的信号，并记录在日志中。    说明：收集信号事件可能涉及内核源码修改或者新开发内核模块。","label":"210010413","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["OS"],"oR":["提供详细的方案介绍文档，基于openEuler 21.03 内核(k5.10)提供内核补丁、用户态程序代码、测试结果以及相关说明。  Demo能收集信号事件，并通过用户态日志输出。 支持配置我们感兴趣的信号种类。如果出现被过滤掉的信号，不生成用户态日志。 构造几个能产生信号的用例来验证Demo的正确性。"],"tR":["熟悉Linux内核编程。","熟悉Linux用户态C语言系统编程和shell脚本。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"ext4文件系统只读故障告警监测","remark":null,"difficulty":"中","mentor":"唐艺舟","contact":"<tangyizhou@huawei.com>","uniont":null,"student_count":0,"description":"ext4文件系统出现故障时可能变为只读状态。请记录这样的事件，并在用户态输出日志。    说明：可以模拟SCSI盘，并且通过dd命令故意破坏device block来构造故障。","label":"210010414","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["OS"],"oR":["产出标准： 提供详细的方案介绍文档，基于openEuler 21.03 内核(k5.10)提供内核补丁、用户态程序代码、测试结果以及相关说明。  Demo能收集文件系统只读故障事件，并通过用户态日志输出。 构造能产生文件系统只读故障的用例来验证Demo的正确性。"],"tR":["熟悉Linux内核编程。","熟悉Linux用户态C语言系统编程和shell脚本。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"BPF实现PACKET_MMAP下的CAN数据过滤器","remark":null,"difficulty":"中","mentor":"章仲昌","contact":"<zhangchangzhong@huawei.com>","uniont":null,"student_count":0,"description":"当前Linux的SocketCAN协议栈使用recvmsg接口接收CAN数据帧，每捕获一个报文就需要一次系统调用和内存拷贝，在数据量较大时会占用大量CPU时间。PACKET_MMAP是在内核空间中分配一块环形缓冲区，然后用户空间程序调用mmap将其映射到用户空间，通过这种方式，可以在一定时间后一次收取缓冲区中所有报文，减少了系统调用和内存拷贝。然而使用PACKET_MMAP接收CAN数据使用的是AF_PACKET协议，不经过SocketCAN协议栈，因此无法使用SocketCAN（CAN_RAW模块）中的过滤器来过滤CAN帧。本项目要求用BPF编写一个可以在PACKET_MMAP CAN数据接收程序中使用的CAN数据过滤器。","label":"210010415","link":"","tech_tag":["Linux","openEuler","BPF"],"domain_tag":["OS"],"oR":["使用PACKET_MMAP技术实现一个CAN数据接收程序，要求能接收CAN和CANFD数据","参考SocketCAN的过滤器用BPF实现一个可以在PACKET_MMAP CAN数据接收程序中使用的CAN数据过滤器，要求过滤器规则设置方法与SocketCAN过滤器一致","编写相应的测试用例并且通过测试"],"tR":["了解Linux网络协议栈和socketcan协议栈"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"硬盘I/O时延上升监测","remark":null,"difficulty":"低","mentor":"唐艺舟","contact":"<tangyizhou@huawei.com>","uniont":null,"student_count":0,"description":"机械硬盘I/O时延上升可能意味着硬盘出现故障，也可能意味着可以做I/O负载均衡优化。请记录I/O时延超过自定义阈值的事件，并记录在日志中。    说明：可以通过fio工具对硬盘加压。","label":"210010416","link":"","tech_tag":["Linux"],"domain_tag":["OS"],"oR":["提供详细的方案介绍文档，提供用户态程序代码、测试结果以及相关说明。  Demo能自定义I/O时延阈值，收集I/O时延超过阈值的事件，并通过用户态日志输出。 构造引发I/O时延过大的用例来验证Demo的正确性。"],"tR":["熟悉Linux用户态C语言系统编程和shell脚本。"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"openEuler支持KubeEdge边缘侧云原生部署  待办的","remark":null,"difficulty":"低","mentor":"章松","contact":"<zhangsong34@huawei.com>","uniont":null,"student_count":0,"description":"当前k8s已经成为了容器编排领域的事实标准，随着边缘侧云服务部署的需求越来越强烈，KubeEdge作为一个基于k8s构建的边缘侧云原生解决方案，其目标是用于将容器化应用程序编排功能扩展到Edge，并为云和边缘之间的网络，应用部署和元数据同步提供基础架构支持。","label":"210010418","link":"","tech_tag":["Linux","Cloud Native","Kubernetes","openEuler"],"domain_tag":["OS","Cloud Native"],"oR":["在openeuler CloudNative SIG上创建KubeEdge软件仓库","移植KubeEdge源码到openeuler平台并完成rpm打包","完成KubeEdge全量测试，保证功能可用"],"tR":["熟悉k8s基本概念及操作使用","熟悉k8s各组件实现原理，理解operator机制更佳"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为树莓派openEuler操作系统添加轻量级桌面环境","remark":null,"difficulty":"中","mentor":"李宝林","contact":"<libaolin@huawei.com>","uniont":null,"student_count":0,"description":"树莓派开发板因其成本较低、功能完善受到全球开发者的热爱；openEuler社区RaspberryPi SIG已经将openEuler移植到树莓派开发板上，且同步openEuler版本节奏一起发布。为了提升树莓派openEuler平台的开发体验，现需要为树莓派openEuler添加轻量级桌面环境及常用开发工具。","label":"210010419","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["OS","树莓派"],"oR":["添加的轻量级桌面可以在树莓派openEuler平台上流畅地运行，资源占用率较低，桌面简洁高效且美观，操作简单易上手；","常用的开发工具完善且功能完善，响应较快，包括但不限于：代码开发调试工具、文档编辑工具、图片查看工具、浏览器、视频解码工具等；","将开发成功贡献到openEuler RaspberryPi SIG。"],"tR":["熟悉linux操作系统环境的开发及使用；","具备软件包移植适配能力；"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为openEuler添加Volcano软件包增强集群调度能力","remark":null,"difficulty":"低","mentor":"雷钟凯","contact":"<leizhongkai@huawei.com>","uniont":null,"student_count":0,"description":"Volcano是华为云开源基于Kubernetes 的批处理系统，主要用于高性能计算场景。同时，olcano是CNCF旗下首个也是唯一的基于Kubernetes的容器批量计算平台。  openEuler目前还未集成Volcano，所以需要将其打包并提交到openEuler社区，编译出可用版本。","label":"210010420","link":"","tech_tag":["Linux","Cloud Native","openEuler"],"domain_tag":["OS","Cloud Native"],"oR":["在openeuler CloudNative SIG上创建Volcano软件仓库","移植Volcano源码到openeuler平台，并通过OBS平台完成rpm打包","完成Volcano开源测试套的全量测试，保证功能可用"],"tR":["熟悉k8s基本概念及操作使用","熟悉k8s的调度系统"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"实现一个新的调度类，较CFS任务具有更高的抢占优先性，较RT任务具有公平性","remark":null,"difficulty":"高","mentor":"陈辉","contact":"<judy.chenhui@huawei.com>","uniont":null,"student_count":0,"description":"目前linux系统中，包括deadline, rt, cfs, idle 4个调度类，deadline一般用在硬实时系统中，一般常用的是rt, cfs和idle 3个调度类，rt调度类具有较高的抢占优先性，TOP-N的选核策略，但是在任务的时间片上划分和选任务机制上比较简单； cfs调度类采用EAS选核策略，同时根据任务的优先级划分时间片，但是cfs任务内部之间不存在明确的抢占优先性。idle 调度类是优先级最低的调度类，当CPU上没有其他任务运行时会调度idle任务运行。    在某些应用场景下，有一批关键业务线程（100个左右），这批关键业务线程直接影响系统的性能指标，如果直接采用RT线程，会造成这些关键业务线程按固定时间片分配，导致时间片分配不公平；如果采用CFS调度策略，由于这些关键业务线程与其他普通cfs任务没有确定的抢占优先性，导致业务性能抖动很大。    目前需要这样一个调度类(X调度类）：  1、具有较CFS任务更高一级，但是较RT任务低的抢占优先性，X调度类内部任务之间抢占优先性按照cfs的抢占优先性规则来实现。  2、具有TOP-N的选核策略，选择每个核上VIP负载最低的核运行，同时保证cpu的capacity &gt; 任务的util;  3、时间片划分，按照任务的优先级进行划分优先级；  4、按照CFS的选任务机制，根据vruntime的大小选择最小的vruntime任务；  5、具有cpu bandwidth和load-balance功能；    实现要求：  1、实现完整的X调度类，具有选核，选任务，负载均衡，负载计算，bandwidth, 抢占等功能；  2、有完整的用户态接口，包括设置设置优先级，设置调度类接口  3、完整的设计文档和测试代码    验证内容：  1、X调度类的功能验证，验证接口功能并测试x调度类的选核，选任务，负载均衡，bandwidth，抢占等功能；  2、验证X调度类的抢占及时性数据。    验证说明：增加X调度类不能对原系统的功能造成影响。","label":"210010421","link":"","tech_tag":["Linux"],"domain_tag":["Linux Kernel","OS"],"oR":["基于OpenEuler，实现相关的功能，有完整的测试程序，并验证效果；","总结整个设计方案，并形成文档。"],"tR":["熟悉Linux操作系统及内核","有Linux内核调度相关的实践经验"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"StratoVirt虚拟化平台内存底噪优化","remark":null,"difficulty":"中","mentor":"杨晓鹤","contact":"<yangxiaohe2@huawei.com>","uniont":null,"student_count":0,"description":"轻量虚拟机（Micro VM）是近几年新兴的一项虚拟化技术，StratoVirt是华为openEuler社区开源的轻量虚拟化软件，基于Rust语言编写，具备功能完善、安全可靠、启动快速、内存底噪小等特点，在容器和serverless场景有广阔的应用空间。本实验的目标是基于StratoVirt现有的能力，进一步增强其轻量低噪的能力。  主要目标为：进一步降低StratoVirt在x86_64平台上的内存占用。    本题目要求对轻量虚拟机在x86_64平台上的内存进行优化，可以尝试并不限于以下方案：    优化StratoVirt项目中数据类型等  裁剪与StratoVirt适配的guest kernel内核","label":"210010422","link":"","tech_tag":["Linux","Rust"],"domain_tag":["OS","Container"],"oR":["优化StratoVirt进程的内存占用20%以上","总结整个开发流程和遇到的问题，并形成文档"],"tR":["熟悉Rust语言","了解虚拟化技术"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openeuler社区孵化生物信息单细胞领域开源应用软件","remark":null,"difficulty":"中","mentor":"周中元","contact":"<zhouzhongyuan96@163.com>","uniont":null,"student_count":0,"description":"openeuler的sig-bio组致力于发展openeuler的行业领域生态，而生物信息学开源软件是我们的重点关注对象。我们计划从openeuler社区孵化出一些生物信息领域的开源应用软件，扩大openeuler在生物信息领域的影响力，助力openeuler行业生态的发展。  我们的目标是：基于openeuler平台，开发一款解决生物信息学单细胞领域研究问题的应用软件，不限定软件具体解决的功能和技术问题，只要能够在单细胞领域解决有价值的问题即可。比如说更高效的单细胞数据比对工具、细胞抗原免疫原性识别应用等等","label":"210010423","link":"","tech_tag":["Linux","openEuler","生物信息"],"domain_tag":["OS"],"oR":["完成生物信息学单细胞领域应用软件的设计与开发（源代码+文档）","软件开源并托管在openeuler社区，以社区化形式迭代开发","完成软件的说明文档、使用案例以及论文等"],"tR":["熟悉一门编程语言（python\\C\\C++\\JAVA任一门）","熟悉生物信息学单细胞领域研究","具有开源软件和社区开发经验"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openeuler社区孵化生物信息单细胞领域交互式数据分析平台","remark":null,"difficulty":"中","mentor":"周中元","contact":"<zhouzhongyuan96@163.com>","uniont":null,"student_count":0,"description":"openeuler的sig-bio组致力于发展openeuler的行业领域生态，而生物信息数据的处理\\分析是生信领域的关键问题之一。  我们计划从openeuler社区孵化出一个典型生信场景下的生信数据分析平台，自动化生信数据处理流程。同时数据分析平台应该实现从生信数据流的整合，一键生成有效的分析结果，且保持便捷的用户体验。  我们的目标是：基于openeuler平台，在生物信息学单细胞数据分析领域，开发出一个单细胞测序数据动态交互式整合分析平台，实现一键式完成单细胞测序数据的自动化分析和整合。","label":"210010424","link":"","tech_tag":["Linux","openEuler","生物信息"],"domain_tag":["OS"],"oR":["完成生物信息学单细胞数据分析平台开发（代码+文档）","应用平台代码开源并托管在openeuler社区，以社区化形式迭代开发","完成生物信息学单细胞数据分析平台的说明文档、应用案例以及论文等"],"tR":["熟悉一门编程语言（python\\C\\C++\\JAVA）","熟悉生物信息学单细胞数据分析研究","熟悉web应用开发和js开发","具有开源软件和开源社区开发经验"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openEuler系统中提供可扩展的应用可视化配置软件","remark":null,"difficulty":"中","mentor":"杨昭","contact":"<yangzhao1@kylinos.cn>","uniont":null,"student_count":0,"description":"linux长期以来需要专业的技术人员进行操作及管理，技术门槛较高，对于初学者使用不够友好。linux环境已经拥有优秀的软件包管理机制，但是在软件使用上，基于文件的配置也带来手动编辑的繁琐。对比windows应用生态，所有的软件都具有良好的配置可视化功能。  我们的目标是：降低linux环境的使用门槛，使初学者能快速上手使用linux环境。","label":"210010425","link":"","tech_tag":["Linux","openEuler"],"domain_tag":["OS"],"oR":["完成项目的设计、开发、测试并提供架构和使用以及插件二次开发的文档","前端提供尽可能详细的配置描述","优先考虑将核心功能设计成独立的库，如插件库等","支持至少5个常用应用软件的配置（如mysql、redis、httpd等），并考虑不同版本之间的配置差异，也可考虑扩展系统内置的应用配置（如网络、防火墙、crontab等），提供重启服务生效功能","在openEuler社区中开源"],"tR":["使用go语言进行开发","基于web的前端可视化及配置","插件架构，支持扩展任意软件的配置"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开源软件测试平台Compass-CI的git-mirror 模块加速","remark":null,"difficulty":"中","mentor":"李萍","contact":"<liping136@huawei.com>","uniont":null,"student_count":0,"description":"git-mirror 是Compass-CI中一个把远端代码仓镜像到本地，并监控更新情况的模块。  但是，随着监控的代码仓越来越多（20万+），同时由于代码仓托管网站（github、gitee等）对访问频率的限制和网络带宽的有限性，更新的效率越来越低。  我们希望通过以下两个方式来提高更新效率：    同步更新不同来源的代码仓（github.com/gitee.com/...）。不同代码仓托管网站的限制并不相互影响，同步更新，可以最大化利用网站允许的ratelimit  分布式部署git-mirror服务(阿里云/华为云/个人电脑等)。代码托管网站的ratelimit是基于同一个ip的，分布式部署在不同ip的机器上，，可以成倍提升有效速率","label":"210010446","link":"","tech_tag":["Linux","测试","git"],"domain_tag":["OS"],"oR":["能够同步更新不同托管平台的仓库，当某个托管平台的仓库（比如github）由于某些原因更新缓慢时，不会影响其他托管平台仓库（比如gitee）的快速更新。","多个服务部署在不同的机器上，相互之前会进行负载均衡，共同完成对众多代码仓的更新监控。"],"tR":["熟悉git","熟悉分布式部署"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openEuler的UKUI桌面环境适配麒麟影音","remark":null,"difficulty":"中","mentor":"窦龑","contact":"<douyan@kylinos.cn>","uniont":null,"student_count":0,"description":"麒麟影音是UKUI桌面默认的视频播放器，但由于在目前openEuler缺少ffmpeg等基础媒体库支持，在openEuler平台无法正常运行，现需要为openEuler适配kylin-video.","label":"210010447","link":"","tech_tag":["Linux","桌面环境"],"domain_tag":["OS"],"oR":["麒麟影音(根据自身能力和兴趣，也可自行编写一套视频播放软件)可在openEuler平台流畅运行，支持播放常见的视频格式如mp4、avi、flv，及音频格式mp3等","完善麒麟影音的功能，包括但不限于字幕的自动匹配和添加，字幕的延迟及微调，截图"],"tR":["熟悉linux操作系统环境的开发及使用；","具备软件包移植适配能力；","熟悉C++\\qt"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"为openEuler的UKUI桌面增加或适配日程管理应用","remark":null,"difficulty":"中","mentor":"窦龑","contact":"<douyan@kylinos.cn>","uniont":null,"student_count":0,"description":"目前在UKUI桌面任务栏的右下角，提供了日历，但是却无法管理日程，未完善整体生态，希望能够针对UKUI桌面研发或者适配一款日程管理的相关软件。","label":"210010448","link":"","tech_tag":["Linux","桌面环境"],"domain_tag":["OS"],"oR":["能够增加、删除、编辑日程","能够多种视图来显示日程，如月、周、日的模式显示日程","支持任务栏托盘","最好能够同步outlook或是其它账户建立的日程"],"tR":["熟悉linux操作系统，具备在Linux系统下的研发能力"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openEuler的UKUI桌面中增加一款快速启动的软件","remark":null,"difficulty":"中","mentor":"杨昭","contact":"<yangzhao1@kylinos.cn>","uniont":null,"student_count":0,"description":"在桌面的日常使用中，有时会有一些重复的操作，比如：回到桌面-&gt;打开菜单-&gt;点击启动，或者一些简易需求，如计算、汇率计算等。希望能够简化用户流程，在全局呼出搜索框，输入少量字母，实现快速打开网页、翻译单词或是搜索文件等功能。","label":"210010449","link":"","tech_tag":["Linux","桌面环境"],"domain_tag":["OS"],"oR":["在全局通过快捷键快速显示搜索框","结构可扩展，日后可快速加入别的功能插件","提供计算、翻译单词、搜索文件、汇率计算、已安装应用模糊匹配、ukui桌面设置搜索等常用功能","提供插件管理功能"],"tR":["熟悉linux操作系统，具备在Linux系统下的研发能力"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"在openEuler的UKUI桌面环境中增加一款取色计软件","remark":null,"difficulty":"低","mentor":"窦龑","contact":"<douyan@kylinos.cn>","uniont":null,"student_count":0,"description":"测色计应用主要用于获得屏幕或是屏幕上某个应用在某个位置的颜色，为设计师及其它相关有需求 的人员提供支持。我们希望增加一款自研的测色计，配合目前的计算器等一系列应用，完善桌面的应用生态。","label":"210010450","link":"","tech_tag":["Linux","桌面环境"],"domain_tag":["OS"],"oR":["提供对桌面全部位置的取色支持，支持双屏，支持显示在侧边栏的插件中心。","提供对本地图片的取色。","颜色输出支持RGB、十六进制等多种格式。","能够记录取色历史"],"tR":["熟悉linux操作系统，具备在Linux系统下的研发能力；"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"完成在树莓派上部署测试服务平台Compass-CI","remark":null,"difficulty":"低","mentor":"李萍","contact":"<liping136@huawei.com>","uniont":null,"student_count":0,"description":"树莓派（英语：Raspberry Pi）是基于 Linux 的单片机电脑，目的是以低价硬件及自由软件促进学校的基本计算机科学教育。为了降低成本，树莓派省去了传统计算机用来存储引导加载程序的板载存储器(BIOS), 直接把引导程序放在了SD卡中。    Compass-CI是开放式测试服务平台，集构建&测试系统、登录调测、测试分析比较、辅助定位于一体，旨在给社区开发者提供友好的开发体验，与社区开发者一起繁荣开源软件生态及提升开源软件质量。    本项目目标是在树莓派上部署compass-ci完毕，并可以跑通self-test.yaml。","label":"210010451","link":"","tech_tag":["Linux","测试"],"domain_tag":["OS","树莓派"],"oR":["树莓派部署完成compass-ci","部署完成的compass-ci可以跑通self-test.yaml","记录操作过程中遇到的问题及处理方案，归纳成文档。"],"tR":["熟悉linux"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"},{"name":"开发openEuler社区原生的运维管理平台","remark":null,"difficulty":"高","mentor":"杨昭","contact":"<yangzhao1@kylinos.cn>","uniont":null,"student_count":0,"description":"在实际应用当中，大规模的主机批量管理一直是比较麻烦的问题，一般都通过企业级的运维管理平台进行管控，提供主机的批量管理、升级和监控等功能。openEuler社区目前缺乏原生的运维管理平台。","label":"210010452","link":"","tech_tag":["Linux"],"domain_tag":["OS","运维"],"oR":["golang语言编写，插件化设计，能够扩展功能","需要高安全性的设计与操作流程","主机发现、注册等管理功能","账号与权限管理，用户操作记录","提供软件包安装、卸载、升级等功能","提供基本的应用监控功能，如cpu、io等","远程命令执行功能","web前端管理及可视化"],"tR":["熟悉linux操作系统，具备在Linux系统下使用golang的研发能力","基于任意技术栈的web前端开发"],"orgID":132,"spl":1,"organchor":"openeuler","orgname":"openEuler社区||openEuler Community"}]},{"anchor":"debian","slide":"","video":"","img":"debian.jpg","title":"The Debian Project||The Debian Project","project_url":"https://wiki.debian.org/OSPP/2021","url":"https://www.debian.org","description":"通用操作系统社区||The Universal Operating System","full_des":"由 Ian Murdock 创立于1993年，Debian致力于成为一个真正的自由软件社区项目。在随后的近30年中，Debian成为了全球最大也最具影响力的开源项目之一。来自全世界的数以万计的开发者汇聚于此，开发了支持 70 余种语言、支持海量计算设备的“通用操作系统”。||The Debian Project was founded in 1993 by Ian Murdock to be a truly free community project. Since then the project has grown to be one of the largest and most influential open source projects.  Thousands of volunteers from all over the world work together to create and maintain Debian software. Available in 70 languages, and supporting a huge range of computer types, Debian calls itself the universal operating system.","tech_tag":["OS Linux"],"domain_tag":["操作系统","软件集成"],"mail_list":"https://lists.debian.org/debian-devel/","email":"debian-outreach@lists.debian.org","project_list":[]},{"userId":149,"anchor":"kubesphere","slide":"","video":"","img":"kubesphere.jpg","title":"KubeSphere 开源社区||KubeSphere Community","project_url":"https://github.com/kubesphere/community/tree/master/sig-advocacy-and-outreach/summer-ospp","url":"https://kubesphere.io/","description":"一款开源的 Kubernetes 发行版容器平台||Enterprise-grade container platform tailored for multicloud and multi-cluster management","full_des":"<a href=\"https://kubesphere.io/\" target=\"_blank\" >KubeSphere</a>是在<a href=\"https://https://kubernetes.io/\" target=\"_blank\" >Kubernetes</a>之上构建的面向云原生应用的分布式操作系统，完全开源，支持多云与多集群管理，提供全栈的 IT 自动化运维能力，简化企业的 DevOps 工作流。它的架构可以非常方便地使第三方应用与云原生生态组件进行即插即用 (plug-and-play) 的集成。||<a href=\"https://kubesphere.io/\" target=\"_blank\" >KubeSphere</a> is a distributed operating system providing cloud native stack with <a href=\"https://https://kubernetes.io/\" target=\"_blank\" >Kubernetes</a> as its kernel, and aims to be plug-and-play architecture for third-party applications seamless integration to boost its ecosystem. KubeSphere is also a multi-tenant enterprise-grade container platform with full-stack automated IT operation and streamlined DevOps workflows.","tech_tag":["Kubernetes","DevOps","ServiceMesh","Golang","Prometheus","Docker"],"domain_tag":["云原生","可观察性","容器云","微服务","多云管理"],"mail_list":"kubesphere@googlegroups.com","email":"kubesphere@gmail.com","project_list":[{"name":"客户端重构||KubeSphere Jenkins ","remark":"","difficulty":"中","mentor":"Rick","contact":"<rickzhao@yunify.cn>","uniont":"陈少文<mail@chenshaowen.com>","student_count":0,"description":"Jenkins是一个具有丰富的插件生态的开源自动化服务。基于 Java 实现，并提供了超过 1,700 插件，几乎可以实现各种方面的自动化。Jenkins 是 KubeSphere DevOps 组件的核心引擎。Pipeline controller 负责把流水线的 CRD 资源转换并同步为 Jenkins 的任务。  你可以从 pkg/simple/client/devops 找到 Jenkins 客户端部分的代码||Jenkins is the leading open-source automation server. Built with Java, it provides over 1,700 plugins to support automating virtually anything. Jenkins is the engine of KubeSphere DevOps component. The Pipeline controller is responsible for converting the CRD of pipelines to Jenkins jobs.  You can find the code base of Jenkins client from pkg/simple/client/devops.    ","label":"210030123","link":"","tech_tag":["Go","Kubernetes","REST API","OpenAPI","Jenkins"],"domain_tag":["DevOps"],"oR":["完成 Jenkins 客户端的重构、替换||Complete the refactoring and replacement of the Jenkins client","完成兼容性测试||Completion test"],"tR":["Golang","REST API","OpenAPI","Jenkins","Kubernetes"],"orgID":149,"spl":0,"organchor":"kubesphere","orgname":"KubeSphere 开源社区||KubeSphere Community"},{"name":"Notification Manager 发送通知到 pushover","remark":null,"difficulty":"中","mentor":"霍秉杰","contact":"<benjamin@yunify.com>","uniont":"雷万钧<wanjunlei@yunify.com>","student_count":0,"description":"Notification Manager 用于在多租户 K8s 环境下管理通知。Notification Manager 从不同的渠道接收告警消息，然后通过各种的渠道，包括钉钉，邮件，企业微信，slack，webhook，发送给租户。    Pushover 是用于发送和接收推送通知的平台。在服务器端，它提供了一个 HTTP API，用于接收通知消息，并传递到可通过用户或组寻址的设备。在设备方面，iOS，Android 和桌面客户端会接收这些推送通知，将其显示给用户，然后将其存储以供离线查看。     我们希望 Notification Manager 可以发送通知消息到 pushover，然后由 pushover 将通知推送给用户。    Pushover 使用简单的 REST API 版本来接收消息并将其广播到运行 pushover 客户端的设备。使用 Pushover 的 API 可以很便捷的实现用户注册过和消息处理，Pushover 的 API 没有复杂的身份验证机制。可以使用几乎每种语言甚至命令行提供的标准 HTTP 库，而无需任何自定义模块或额外的依赖项。    我们可以通过调用 Pushover 来实现发送通知消息到 pushover 。","label":"210030165","link":"","tech_tag":["Go","Kubernetes"],"domain_tag":["Notification Manager"],"oR":["扩展 Notification Manager CRD定义，使其支持pushover","实现Notification Manager发送通知消息到pushover","测试并输出测试报告","编写相关文档"],"tR":["Golang","REST API","Kubernetes"],"orgID":149,"spl":1,"organchor":"kubesphere","orgname":"KubeSphere 开源社区||KubeSphere Community"}]},{"userId":357,"anchor":"opencurve","slide":"","video":"","img":"curve.jpg","title":"Curve社区||Curve社区","project_url":"","url":"https://www.opencurve.io/","description":"高性能、高可用、高可靠分布式存储系统||A  High-performance, high-availability, and high-reliability distributed storage system","full_des":"CURVE是网易自主设计研发的高性能、高可用、高可靠分布式存储系统，具有非常良好的扩展性。基于该存储底座可以打造适用于不同应用场景的存储系统，如块存储、对象存储、云原生数据库等。当前我们基于CURVE已经实现了高性能块存储系统，支持快照克隆和恢复 ,支持QEMU虚拟机和物理机NBD设备两种挂载方式, 在网易内部作为高性能云盘使用。||CURVE is a distributed storage system designed and developed independently by NetEase, featured with high performance, high availability, high reliability and well expansibility, and it can serve as the basis for storage systems designed for different scenario (e.g. block storage, object storage and cloud database).    So far, we have implemented a high performance block storage system, which supports snapshot, clone and recovery, and it can be attached to QEMU virtual machine or physical machine (by curve-nbd). CURVE has been served as an elastic block storage service inside NetEase for a certain time, during which high performance and reliability have shown.","tech_tag":["distributed","block storage","high performance"],"domain_tag":["高性能分布式存储"],"mail_list":"Wang Pan, <hzwangpan@corp.netease.com>, @aspirer","email":"storage_mgm@163.com](mailto:storage_mgm@163.com)","project_list":[{"name":"ChunkServer端client模块增加打开文件缓存超时或淘汰策略","remark":null,"difficulty":"中","mentor":"许超杰","contact":"<xuchaojie@corp.netease.com>","uniont":null,"student_count":0,"description":"Curve ChunkServer端使用的client模块打开curve卷，这个卷并没有关闭的地方，一直在内存中打开着。当卷没有关闭时，client中会一直缓存着Meta Cache等卷的缓存信息，从而占用内存。    这一部分需要做一个超时关闭逻辑，或者是LRU的淘汰策略。","label":"210450159","link":"","tech_tag":["Cloud Native","C++","Distributed System","Storage"],"domain_tag":["Cloud Native","Distributed System"],"oR":["简要方案设计，可以以issue的方式提至https://github.com/opencurve/curve/issues，需包含几种策略的比较，考虑点说明，为什么采用这种方式。","代码开发，pr的方式提至curve仓库 https://github.com/opencurve/curve/pulls，需符合curve遵循的代码规范，补充单元测试，并单元测试覆盖率通过，CI测试通过，并经过curve项目组code review完成合入。"],"tR":["熟悉C++软件开发，熟悉gtest等相关单元测试框架，能够完成单元测试等工作。","熟悉常用缓存淘汰策略，如超时淘汰，LRU的淘汰策略，了解各自优缺点。","熟悉linux上的编译，调试命令，如gcc，gdb等。","了解curve的单机部署，能完成相关的功能测试。"],"orgID":357,"spl":1,"organchor":"opencurve","orgname":"Curve社区||Curve社区"},{"name":"python重构curve_ops_tool","remark":null,"difficulty":"中","mentor":"李小翠","contact":"<lixiaocui1@corp.netease.com>","uniont":null,"student_count":0,"description":"Curve作为一个大型分布式存储系统，在可运维性和可观测性上面都有非常高的要求。开发人员对运维工具的需求可以分为以下几个方面：    可观测性  curve是一个底层存储软件，对外提供的client也是一个动态库的方式，没有类似前端之类的展示界面。所以系统内部的各种数据的可观测性是一个很强烈的需求。  - 集群状态。需要观测到集群的空间信息，服务的健康状态等信息。  - 命名空间查询。curve以目录树的方式组织系统中的文件，所以需要提供一个查询文件状态，list目录的功能。  - 复制组健康状态查询。在升级过程中，需要操作一批机器之后确保复制组恢复健康才可以继续操作下一批机器。  - 三副本一致性检查。    可运维性  - 除了查询类的功能，有时候也需要下发一些运维操作。  - 文件操作类。有时候需要执行一些文件管控类的操作，比如创建文件，删除文件，清空回收站数据等。  - 配置变更类。正常情况下的配置变更都是由mds下发的，但是在一些极端场景下，可能需要人为介入下发配置变更。    当前的curve_ops_tool是使用C++开发的，对于命令行的支持，字符串的解析，和结果的输出都不是很友好，在curve_ops_tool功能越来越复杂的时候，扩展性不好。因此需要使用python重构curve_ops_tool，优化工具使用便捷性和输出美观性以及代码简洁性。","label":"210450180","link":"","tech_tag":["Python","C++"],"domain_tag":["Distributed System"],"oR":["简要方案设计，以issue的方式提至https://github.com/opencurve/curve/issues","代码开发，pr的方式提至curve仓库 https://github.com/opencurve/curve/pulls，需符合curve遵循的代码规范，补充单元测试，并单元测试覆盖率通过，CI测试通过，并经过curve项目组code review完成合入。"],"tR":["python/c++等编码能力","深入理解curve_ops_tool的工作原理，了解brpc和proto的使用方式","熟练掌握curve编译方式"],"orgID":357,"spl":1,"organchor":"opencurve","orgname":"Curve社区||Curve社区"},{"name":"curve快照克隆一致性检查工具","remark":null,"difficulty":"中","mentor":"陈威","contact":"<hzchenwei7@corp.netease.com>","uniont":null,"student_count":0,"description":"curve发起快照（克隆）之后，会生成一个快照卷（克隆卷）。希望有工具能够检查源卷和快照卷（克隆卷）的数据是否一致。如果不一致，能够找到不一致的地方，直观方便地帮助定位问题。  工具建议使用python开发，要求：  1、能够比较源卷和克隆卷的不一致的位置  2、能够比较源卷和快照的不一致的位置  3、能够比较快照和从快照克隆的卷的不一致的位置  4、直观地展示不一致的信息，包含不一致的offset，所属chunk(chunk id，chunk所在copyset id，chunk的几个副本所在chunkserver ip和hostname)，不一致的数据等。","label":"210450204","link":"","tech_tag":["Linux","Python","C++","Git"],"domain_tag":["Cloud Native","Distributed System"],"oR":["详细方案设计，可以以issue的方式提至https://github.com/opencurve/curve/issues，需包含几种策略的比较，考虑点说明，为什么采用这种方式。","代码开发，pr的方式提至curve仓库 https://github.com/opencurve/curve/pulls，需符合curve遵循的代码规范，补充单元测试，并单元测试覆盖率通过，CI测试通过，并经过curve项目组code review完成合入。"],"tR":["熟悉C++软件开发，熟悉gtest等相关单元测试框架，能够完成单元测试等工作。","熟悉linux上的编译，调试命令，如gcc，gdb等。","了解curve的单机部署，能完成相关的功能测试。","熟悉Python开发，能够使用python完成工具开发。"],"orgID":357,"spl":1,"organchor":"opencurve","orgname":"Curve社区||Curve社区"},{"name":"Curve配置合并","remark":null,"difficulty":"中","mentor":"王海","contact":"<wanghai01@corp.netease.com>","uniont":null,"student_count":0,"description":"Curve项目部署方式改为ansible部署之后，配置和脚本会在curve-ansible目录下和其他目录各有一份，在有修改的时候容易漏改，不便于维护，因此需要进行合并处理。  在curve-ansible/roles/**/templates下面有一些jinjia格式的配置模板和脚本模板，在curve/conf和deb包目录下也有一些示例配置和脚本。  curve-ansible中的配置模板用于部署的时候生成配置文件，因此不能去掉。conf目录下的配置在单元测试和集成测试中被引用，因此也不能直接删掉，所以需要对现有两份的配置和脚本进行合并。","label":"210450279","link":"","tech_tag":["Linux","C++","Storage","Git"],"domain_tag":["Distributed System"],"oR":["简要方案设计，可以以issue的方式提至https://github.com/opencurve/curve/issues，可以包含几种方案的比较，考虑点说明，为什么采用这种方式。","代码开发，pr的方式提至curve仓库 https://github.com/opencurve/curve/pulls，需符合curve遵循的代码规范，并单元测试和集成测试通过，CI测试通过，并经过curve项目组code review完成合入。"],"tR":["熟悉C++软件开发，熟悉ansible编排部署工具","熟悉linux 常用脚本语言","熟悉linux上的编译，调试命令，如gcc，gdb等","了解curve的单机部署，能完成相关的功能测试"],"orgID":357,"spl":1,"organchor":"opencurve","orgname":"Curve社区||Curve社区"},{"name":"Curve Tracing功能设计与实现","remark":null,"difficulty":"高","mentor":"吴汉卿","contact":"<wuhanqing@corp.netease.com>","uniont":"许超杰<xuchaojie@corp.netease.com>","student_count":0,"description":"Curve作为一个大型分布式存储系统，目前在logging和metrics方面都已基本完善。相比于前两者，tracing用于记录单个请求处理过程中的信息。例如，一次RPC的执行过程以及耗时等信息。同时，tracing也对性能优化、问题定位等有着重要的作用。该项目需要在Curve系统中设计并实现一个Tracing模块，并实施到Curve的各个关键流程中。","label":"210450297","link":"","tech_tag":["Linux","C++","Distributed System","Storage"],"domain_tag":["Distributed System","Tracing"],"oR":["详细方案设计，可以以issue的方式提至https://github.com/opencurve/curve/issues，需包含几种策略的比较，考虑点说明，为什么采用这种方式。","代码开发，pr的方式提至curve仓库 https://github.com/opencurve/curve/pulls，需符合curve遵循的代码规范，补充单元测试，并单元测试覆盖率通过，CI测试通过，并经过curve项目组code review完成合入。"],"tR":["熟悉C++软件开发，熟悉gtest等相关单元测试框架，能够完成单元测试等工作。","熟悉linux上的编译，调试命令，如gcc，gdb等。","对tracing有一定的了解，熟悉相关开源标准及开源框架，如opencensus，opentracing，jaeger，zipkin等。","了解curve的单机部署，能完成相关的功能测试。"],"orgID":357,"spl":1,"organchor":"opencurve","orgname":"Curve社区||Curve社区"}]},{"userId":328,"anchor":"bookos","slide":"","video":"","img":"bookos.jpg","title":"Bookos","project_url":"","url":"https://www.book-os.org","description":"一个开源、免费的在大学校园里很活跃的操作系统，有操作系统内核，也有图形化的界面。","full_des":"Bookos是一个培养中国青少年操作系统人才的社区，社区是有组织的运营的。主要是引导对操作系统感兴趣的高中生和大学生系统的学习的操作系统，从感兴趣难入门，到能在大学实现一个简单的操作系统，社区由胡自成负责bookos的技术和代码开发，李石亮负责引导喜爱底层的大学生做系统性的学习引导从算法，简单的程序结构，到简单的操作系统实现。万晓兰老师负责经济上的支持。到目前为止，有核心的社区人员30-40人，比较松散的成员有80人左右，更松散的qq群有700人。核心的社区人员其中8人都实现过简单的操作系统。开发的主要工作是由胡自成等5人完成，其他核心成员一起讨论技术问题，提供企业的信息，给出实现的建议。李石亮和万晓兰负责解决学生中的困难和就业上的困难，让他们安心的学习底层的技术，做到学习底层和就业两方面不耽误。","tech_tag":["操作系统","Git","GCC","内核"],"domain_tag":["操作系统","内核","人才的培养"],"mail_list":"","email":"2323168280@qq.com 胡自成","project_list":[{"name":"Bookos 内存管理页面交换模块","remark":null,"difficulty":"中","mentor":"李石亮","contact":"<25755975@qq.com>","uniont":null,"student_count":0,"description":"在bookos的基础上，把简单的内存管理系统，增加页面交换到硬盘的模块，主要是仿照linux内核内存管理的部分来实现。根据学生的能力和基础，尽可能的实现一个相对复杂的交换系统。  现在的书上有代码可实现的操作系统模型在内存管理部分都不是非常的复杂。而对linux内核内存管理部分的书籍，即使代码讲的再详细，因为linux内核与内存管理相应的api又太多，我们又很难的去修改内核。所以我们设计这个项目，让学生通过在我们熟悉和了解的bookos上实现交换模块，来提升学生对操作系统的理解能力。","label":"210420153","link":"","tech_tag":["Linux","C"],"domain_tag":["Linux Kernel"],"oR":["在bookos上基本实现一个交换模块，完成基本的交换功能。","在完成交换功能以后，把这个交换功能和内存的页面回收机制结合再一起，方便页面的换出和回收。","在前两个基础上要统一接口。","对性能做测试，保证性能。"],"tR":["对bookos操作系统有了解","对操作系统有了解","最好自己实现过操作系统","能吃苦肯花时间学习","即使前面的基础都没有，但是应用代码量大，技术基础好，喜欢内核也是可以的。"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"},{"name":"Bookos内存管理页面回收机制","remark":null,"difficulty":"高","mentor":"李石亮","contact":"<25755975@qq.com>","uniont":null,"student_count":0,"description":"内存的页面回收机制，一直是linux的开源社区内存管理的核心位置，这个部分性能的优化对大型的服务器是非常有价值的。特别是锁的机制细化，对性能的提升甚至能到30%。  在bookos的基础上，把简单的内存管理系统，增加页面的回收机制，同时也增加缓存的系统实现。根据学生的能力和基础，尽可能的实现一个相对复杂的页面缓存和回收机制。  现在的书上有代码可实现的操作系统模型在内存管理部分都不是非常的复杂。而对linux内核内存管理部分的书籍，即使代码讲的再详细，因为linux内核与内存管理相应的api又太多，我们又很难的去修改内核。所以我们设计这个项目，让学生通过在我们熟悉和了解的bookos上实现内存管理的回收机制，来提升学生对操作系统的理解能力。","label":"210420155","link":"","tech_tag":["Linux","C"],"domain_tag":["Linux Kernel"],"oR":["完成一个简单的内存的缓存的机制","在这个机制上设置内存的页面回收机制","增加对应的自动回收内存的内核线程，能定期的唤醒","保证这个功能的可执行。"],"tR":["实现过操作系统，能调bug","对linux内核的内存部分要熟悉","能够熬，能够面对调好几天都很难解决的bug","勤奋"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"},{"name":"bookos内存管理防止碎片化机制","remark":null,"difficulty":"中","mentor":"李石亮","contact":"<25755975@qq.com>","uniont":null,"student_count":0,"description":"内存防止碎片化，保证有一定连续性的物理内存。设置内存的分区域使用，有效的加强的内存缓存的命中率，这些都是和内存防止碎片化有着紧密的关系。也是内核讨论里面最近这些年新增的性能。  同样也是希望能够把这个功能实现出来，让同学们能够亲自体会一个简单的操作系统向一个优化的操作系统的过渡。  其中最大的困难就是内存和其他模块紧密相连，对其余部分的代码不了解是最大的困难，而不是内核内存管理的本身的算法。","label":"210420156","link":"","tech_tag":["Linux","C"],"domain_tag":["Linux Kernel"],"oR":["实现一个内存的分区域的管理","在分配机制上实现区域化","在内存的回收和保留的部分实现区域化管理"],"tR":["对bookos有一定的了解","愿意花时间投入到这个项目","对linux内存管理部分有一定的理解。","有雄心壮志有承担中国操作系统的理想"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"},{"name":"从声卡驱动到DSP编程接口的实现","remark":null,"difficulty":"中","mentor":"胡自成","contact":"<2323168280@qq.com>","uniont":null,"student_count":0,"description":"在x86平台从零实现一个ac97声卡驱动，熟悉并使用xbook2内核的驱动框架，了解声卡的数据传输以及编程接口。并在此驱动基础之上封装一套dsp编程接口作为音频驱动框架，并掌握简单的音频编程流程。","label":"210420171","link":"","tech_tag":["C"],"domain_tag":["OS","Driver"," Audio"," DSP"],"oR":["实现AC97声卡驱动","实现DSP驱动框架接口","使用DSP接口编程","支持SDL2_Audio的DSP接口"],"tR":["C语言基础","驱动开发经验","音频编程经验"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"},{"name":"Qemu virtio驱动的支持，虚拟化走起!","remark":null,"difficulty":"高","mentor":"朱宇","contact":"<yu.zhu8@foxmail.com>","uniont":null,"student_count":0,"description":"熟悉virtio specification和xbook 驱动框架，  并编写可用的qemu virtio 驱动，包括但不限于gpu, block, mouse, keyboard。","label":"210420172","link":"","tech_tag":["C","Qemu"," Virtio"],"domain_tag":["OS","Driver"," Virtio"],"oR":["实现Qemu Virtio驱动"],"tR":["C语言基础","驱动开发经验","Qemu使用经验"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"},{"name":"Pthread 多线程的优化与完善","remark":null,"difficulty":"中","mentor":"吴松杰","contact":"<2991707448@qq.com>","uniont":null,"student_count":0,"description":"在xbook2中的pthread仅实现了最基础的线程管理功能，仍有许多功能尚未实现，需要优化原有实现并且完善它，让它和标准的pthread功能一样，最终支持SDL2_Thread的pthread子模块。","label":"210420173","link":"","tech_tag":["C","Pthread"],"domain_tag":["OS"],"oR":["标准的pthread库","支持SDL_Thread的pthread接口"],"tR":["C语言基础","pthread编程经验"],"orgID":328,"spl":1,"organchor":"bookos","orgname":"Bookos"}]},{"anchor":"webcell","slide":"","video":"","img":"webcell.jpg","title":"WebCell||WebCell","project_url":"","url":" https://web-cell.dev/","description":"基于 TypeScript 和 JSX 的轻量级 Web 标准组件框架||Lightweight Web standard component framework based on TypeScript and JSX","full_des":"关注、研究、推广原生的 Web 标准技术，让互联网应用的开发、使用更简洁、普适~||Lightweight Web standard component framework based on TypeScript and JSX","tech_tag":["Web","HTTP","HTML","CSS","JavaScript","TypeScript"],"domain_tag":["Web 前后端开发"],"mail_list":"","email":"","project_list":[]},{"userId":306,"anchor":"piflow","slide":"","video":"","img":"piflow.jpg","title":"大数据流水线系统PiFlow","project_url":"https://github.com/cas-bigdatalab/piflow","url":"https://github.com/cas-bigdatalab/piflow","description":"大数据流水线管理与调度系统","full_des":"PiFlow是一款基于分布式计算Spark开发的大数据流水线系统，以所见即所得的简洁方式，实现大数据采集、处理、存储与分析流程化配置、运行与智能监控，提供了100+的标准化数据处理组件， 包括Hadoop 、Spark、MLlib、Hive、Solr、Redis等。支持面向领域、灵活的二次组件开发。具备亿级数据的ETL处理能力，性能优越，支持数据溯源。同步开源在github/gitee社区。获GVP-码云最有价值开源项目奖、首届\"中国开源软件创意大赛\"二等奖。目前已应用至6家企业中，场景包括大数据处理框架、数据资产管理、医疗健康大数据、机器学习、知识图谱构建等。","tech_tag":["Scala","Java","Python","Maven","Git"],"domain_tag":["大数据处理","流水线","调度","机器学习"],"mail_list":"","email":"","project_list":[{"name":"修复配置流水线","remark":null,"difficulty":"低","mentor":"周健鹏","contact":"<zjp@cnic.cn>","uniont":"孙静芳<sxideal@163.com>","student_count":0,"description":"配置流水线过程中连接组件后，组件之间的连线关系不允许被拖动。  单个组件不允许连接自己","label":"210400363","link":"","tech_tag":["JavaScript","NodeJS","Git","vue"],"domain_tag":["Virtualization","Web"],"oR":["完成禁止挪动连线关系","完成组件禁止连接自己"],"tR":["熟练掌握mxgraph","熟练掌握vue","熟练掌握JavaScript"],"orgID":306,"spl":1,"organchor":"piflow","orgname":"大数据流水线系统PiFlow"},{"name":"基于spark增加SQLServer，PostgreSQL，H2，DB2，Oracle等读写组件","remark":null,"difficulty":"低","mentor":"李金宝","contact":"<bf219319@163.com>","uniont":"杨刚<ygang@cnic.cn>","student_count":0,"description":"实现PiFlow基于Spark读写SQLServer，PostgreSQL，H2，DB2等组件开发，修改Oracle组件基于Spark开发（不局限于读写），编写测试用例及相应流水线模板配置，","label":"210400364","link":"","tech_tag":["Database","Git","Spark"],"domain_tag":["Big Data"],"oR":["完成Spark读写数据库组件编写","完成基于Spark读写数据库组件的测试","完成基于Spark读写数据库组件的流水线模板配置"],"tR":["熟练掌握Spark原理及运行机制","熟练掌握SQLServer，PostgreSQL，H2，DB2，Oracle等数据库使用","熟练掌握Scala语言"],"orgID":306,"spl":1,"organchor":"piflow","orgname":"大数据流水线系统PiFlow"},{"name":"基于Spark读取Neo4j图数据库","remark":null,"difficulty":"中","mentor":"李金宝","contact":"<bf219319@163.com>","uniont":"杨刚<ygang@cnic.cn>","student_count":0,"description":"实现PiFlow基于Spark读取Neo4j组件开发，编写测试用例及相应流水线模板配置","label":"210400365","link":"","tech_tag":["Linux","Git","Neo4j，Scala"],"domain_tag":["Big Data"],"oR":["完成基于Spark读取Neo4j数据库组件编写","完成基于Spark读取Neo4j数据库组件的测试","完成基于Spark读取Neo4j数据库组件的流水线模板配置"],"tR":["熟练掌握Spark原理及运行机制","熟练掌握Neo4j数据库使用和cypher编写","熟练掌握Scala语言"],"orgID":306,"spl":1,"organchor":"piflow","orgname":"大数据流水线系统PiFlow"}]},{"userId":248,"anchor":"wechaty","slide":"","video":"","img":"wechaty.jpg","title":"Wechaty 社区||Wechaty","project_url":"https://wechaty.js.org/docs/ospp/2021/","url":"https://wechaty.js.org/","description":"Wechaty is a Conversational RPA SDK for Chatbot Makers to build WeChat and Whatsapp bots with ease.","full_des":"Conversational RPA SDK Wechaty 是一个开源聊天机器人框架SDK，于 2016 年发布于 GitHub，是一个基于 Apache-2.0 许可证的开源项目，具有高度封装、高可用的特性，支持 NodeJs,  Python,  Go 和 Java 等多语言版本。\n 经过4年多的发展，现在 Wechaty 开源社区已经拥有数十位 Committers，百余位 Contributors ，并被近万名 GitHub 开发者 Star 。使用 Wechaty 的开发者已覆盖数万人，并拥有基于微信群的数千人活跃开发者群。Wechaty 社区的 Contributors 遍布全球多个国家地区，和各大互联网公司，职业背景从程序员到设计师，从大学教授到创业者，非常多样化。GitHub 上有千余个开源项目基于 Wechaty 构建了聊天机器人，这些开发者用户也极大地促进了社区的活跃和发展。\nWechaty自身对代码质量的管理，使用了 GitHub Actions 的 DevOps 工具完成了 CI/CD 工作流，从自动化单元测试到自动打包集成测试，从自动发布 NPM 包到自动构建和发布对应版本的 Docker Image ，实现了全自动的社区代码发布，极大的提高了社区的协同效率。在开源社区管理上，Wechaty 遵循 The Apache Way ，拥有 PMC / Committer 管理制度，和完善的 Issue / PR / Release 等管理制度。\n截止2020年，Wechaty 已经有超百万次 NPM 安装下载，并由社区自发推动了 Python, Go, Java, Scala, CSharp, PHP 等语言的适配和发布，是国内最活跃的 Conversational AI Chatbot 开发者社区。Wechaty 支持的功能包括：接收消息，发送消息、添加好友、为好友备注、接受好友请求、发起群聊、加人入群等功能。只需要6行代码，你就可以 通过个人号 搭建一个 微信机器人功能 ，用来自动管理微信消息。\n更多功能包括：\n消息处理：关键词回复\n群管理：自动入群，拉人，踢人\n自动处理好友请求\n智能对话：通过简单配置，即可加入智能对话系统，完成指定任务||Wechaty is a Conversational RPA SDK for chatbot makers that can create a bot in 6 lines of code with the most popular IMs like WeChat, Whatsapp, WeCom, Gitter, etc.\nLong Description (may include limited Markdown up to 2000 characters):Wechaty is a Conversational RPA (Robotic Process Automation) SDK for Chatbot Makers which can create a bot in 6 lines of JavaScript, Python, Go, Java, .NET, PHP, and Scala, with cross-platform support including Linux, Windows, macOS, and Docker, on top of the most popular IMs like WeChat, Whatsapp, WeCom, Gitter, etc.","tech_tag":["Conversational","AI","RPA","NLP","TypeScript","Python","MachineLearning","DeepLearning","Docker","DevOps","Node.js"],"domain_tag":["Chatbot","Conversational AI","NLP"],"mail_list":"wechaty@googlegroups.com,Gitter: https://gitter.im/wechaty/wechaty","email":"wechaty@chatie.io","project_list":[{"name":"开发基于 Wechaty 实现微俱乐部会员&活动管理的微信小程序","remark":null,"difficulty":"低","mentor":"鲁玉超","contact":"<atorber@163.com>","uniont":null,"student_count":0,"description":"背景介绍  目前有大量各种活动俱乐部使用微信群组织活动，发起接龙报名以及进行会员管理等。    俱乐部中大多采用传统的接龙方式进行活动报名，因个别群成员误操作经常出现接龙信息混乱、错误等情况，且活动信息、报名信息不能很好的留存和统计。    我们在本次 Summer 2021 的项目中，希望可以开发一个基于 Wechaty 的群组管理微信小程序。    需求介绍  使用微信小程作为俱乐部和活动管理后台，利用 Wechaty 将微信群及成员同步在小程序中创建同名俱乐部，并使用小程序作为后台管理活动及成员；    使用任意 Wechaty Puppet 实现微信机器人，支持群成员通过关键词指令 如 报名、取消名等报名活动；    小程序端发布活动、截止报名、活动开始等可以自动推送消息到对应微信群与成员进行互动。","label":"210220085","link":"","tech_tag":["Linux","JavaScript","NodeJS","Git"],"domain_tag":["AI","Dev Tools","Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","每两周至少发布一个 开发版本","最终实现小程序发布上线，至少能够满足羽毛球俱乐部活动群内机器人报名管理的需求"],"tR":["javasscript programming language","Git","微信小程序开发云开发","node.js/npm"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于 Itchat 为 Python Wechaty 实现社区首个 Python 语言的本地 Puppet","remark":"","difficulty":"中","mentor":"吴京京","contact":"<wjmcater@gmail.com>","uniont":"李卓桓<huan@chatie.io>","student_count":0,"description":"基于 Itchat 为 Python Wechaty 实现社区首个 Python 语言的本地 Puppet    背景介绍  Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    Python Wechaty 目前通过 Puppet Service 模块，基于 gRPC 与 TypeScript 语言的服务器进行通讯，实现对 Python 语言的支持。    我们在本次 Summer 2021 的项目中，希望可以开发一个基于 Python 语言的 Wechaty Puppet Provider 实现（模块名：wechaty-puppet-itchat），通过封装 Itchat ，使其成为 Python Wechaty 可以使用的社区生态模块。    需求介绍  使用 https://github.com/wechaty/python-wechaty-puppet-service 项目作为模版，将核心代码文件 https://github.com/wechaty/python-wechaty-puppet-service/blob/master/src/wechaty_puppet_service/puppet.py 中的 gRPC 调用，全部替换（封装）为 Itchat 模块的调用。    在初期开发中，能够实现文本消息的接收和发送，即可完成原型验证 POC 。    除了 Python 代码之外，还可以参考以下两个链接：    1. TypeScript Puppet Official Documentation: https://wechaty.github.io/wechaty-puppet/typedoc/classes/puppet.html  2. Wechaty Puppet Specification: https://wechaty.js.org/docs/specs/puppet","label":"210220087","link":"","tech_tag":["Python","Automation","Git"],"domain_tag":["AI","Dev Tools"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","发布 Git Repo python-wechaty-puppet-itchat","可以通过 Python Wechaty 加载 wechaty-puppet-itchat 模块，并通过 itchat 底层，实现文本消息的收发功能","提供一个 examples/ding-dong-bot.py ，完成“接收到文字消息ding时，自动回复消息dong\"的功能","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["Python programming language","Git","Pypi / pip tools"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"开发支持电信运营商 5G Chatbot / RCS 的 Wechaty 接入 Puppet 模块","remark":"","difficulty":"中","mentor":"李佳芮","contact":"<rui@chatie.io>","uniont":"李卓桓<huan@chatie.io>","student_count":0,"description":"电信运营商商 5G Chatbot (RCS, Rich Communication Service) Puppet  背景介绍  Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    5G Chatbot (RCS) 是近期中国电信运营商基于 5G 的消息战略落地平台，未来的 5G 手机将会内置 RCS 消息的处理能力。    我们在本次 Summer 2021 的项目中，Wechaty 希望可以实现对 RCS Chatbot 的支持。通过 Wechaty Puppet 的接口，可以将 RCS 协议封装成为 wechaty-puppet-5gmsg 供 Wechaty 开发者方便接入 RCS 平台，使其成为 Wechaty 可以使用的社区生态模块。    需求介绍  使用 https://github.com/wechaty/wechaty-puppet-official-account 项目作为模版，将核心代码文件 https://github.com/wechaty/wechaty-puppet-official-account/blob/master/src/puppet-oa.ts 中的微信公众平台调用，全部替换（封装）为 RCS 模块的调用。    在初期开发中，能够实现文本消息的接收和发送，即可完成原型验证 POC 。  还可以参考以下链接：  1. TypeScript Puppet Official Documentation: https://wechaty.github.io/wechaty-puppet/typedoc/classes/puppet.html  2. Wechaty Puppet Specification: https://wechaty.js.org/docs/specs/puppet  https://github.com/wechaty/wechaty-puppet-mock","label":"210220088","link":"","tech_tag":["AI","Git"],"domain_tag":["AI","Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","发布 Git Repo wechaty-puppet-5g-msg","可以通过 Wechaty 加载 wechaty-puppet-5g-msg 模块，并通过 5G Chatbot / RCS 底层，实现文本消息的收发功能","提供一个 examples/ding-dong-bot.ts ，完成“接收到文字消息ding时，自动回复消息dong\"的功能","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["TypeScript programming language","Git","REST API","5G Chatbot / Rich Communication Service"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于开放 API 封装 Wechaty 接口下的飞书聊天机器人","remark":null,"difficulty":"低","mentor":"范蕊","contact":"<froxanne1024@gmail.com>","uniont":null,"student_count":0,"description":"背景介绍  飞书提供开放的API接口，有基于开放API开发聊天机器人的需求  飞书是字节跳动于2016年自研的新一代一站式协作平台，是保障字节跳动全球五万人高效协作的办公工具。飞书将即时沟通、日历、云文档、云盘和工作台深度整合，通过开放兼容的平台，让成员在一处即可实现高效的沟通和流畅的协作，全方位提升企业效率。  2020年2月24日，字节跳动旗下办公套件飞书宣布，向全国所有企业和组织免费开放，不限规模，不限使用时长，所有用户均可使用飞书全部套件功能。  飞书官方提供API支持机器人收发消息，是国内对Chatbot最开放的IM 系统。    Wechaty是全球最大的开源聊天机器人框架，希望实现基于同一套应用层代码实现不同软件的聊天机器人  Wechaty 作为全球最大的聊天机器人开发者社区之一，提供了非常简单的接口实现，让开发者能够用6行代码就实现自己的一个聊天机器人，如果能把飞书的聊天机器人封装到 Wechaty 里来，则可以大大简化企业内开发者的开发流程。  因为 Wechaty 是建立在 puppet 系统之上的，puppet 是 Wechaty 依赖的一层抽象层，它定义了底层各个 IM 接入方案需要实现的接口，也正是因为 puppet 抽象层的存在，让很多 Wechaty 开发者可以仅仅通过一个变量，就能够随意切换不同的底层 IM 接入。    需求介绍  目前，飞书 Puppet 已经完成了初步开发，目前主要实现的功能有：    消息收发（文字、文件、图片）  部分群组相关操作（创建群、修改群名、删除群成员等）  部分企业相关操作（查看企业内成员等）  项目仓库见：https://github.com/wechaty/wechaty-puppet-lark    接下来需要对照飞书开放平台和 Wechaty 接口，完善该项目。","label":"210220089","link":"","tech_tag":["JavaScript","TypeScript","Git"],"domain_tag":["Programming Language"],"oR":["对接飞书接口，完善 puppet 上各个类型的消息接口","飞书 puppet 的使用文档"],"tR":["TypeScript/JavaScript","Git"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于 WeChatExtension-ForMac 为 Wechaty 实现Mac版本Puppet","remark":"","difficulty":"高","mentor":"晏茂","contact":"<MustangYM@yeah.net>","uniont":"吴京京<wjmcater@gmail.com>","student_count":0,"description":"## 背景介绍    Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    [WeChatExtension-ForMac](https://github.com/MustangYM/WeChatExtension-ForMac) 开源项目能够让Mac用户在电脑本地完成消息的自动化处理、消息监听、消息转发等，通过逆向工程完成客户端的一些列上层应用的封装，此外还支持多客户端的启动。    我们在本次 Summer 2021 的项目中，希望可以开发一个能够运行在Mac电脑端的WeChatExtension-ForMac Puppet底层实现，让Wechaty能够免费运行在Mac操作系统之上。    ## 需求介绍    作者已经实现核心的消息Hook，开发者只需要将消息hook的功能，实现[wechaty-puppet](https://github.com/wechaty/wechaty-puppet) 的接口，通过gRPC服务的服务开放出来，提供给多语言wechaty来调用。    在初期开发中，能够实现文本消息的接收和发送，即可完成原型验证 POC 。    相关链接：    * [puppet-provider](https://wechaty.js.org/docs/puppet-providers/)  * [wechaty-puppet](https://github.com/wechaty/wechaty-puppet)  * [wechaty-puppet-macOS](https://github.com/wechaty/wechaty-puppet-macOS)  * [wechaty-puppet-service](https://wechaty.js.org/2021/01/14/wechaty-puppet-service/)","label":"210220199","link":"","tech_tag":["Git","ObjectC"],"domain_tag":["OS"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","实现基本消息的收发","提供一个 `examples/ding-dong-bot.py` ，完成“接收到文字消息`ding`时，自动回复消息`dong`\"的功能","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["ObjectC","Git","gRPC"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于 Blessed 的 Wechaty 命令行文本客户端软件（仿IRC）","remark":"","difficulty":"中","mentor":"李卓桓","contact":"<huan@chatie.io>","uniont":null,"student_count":0,"description":"## 背景介绍    Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    [Blessed](https://github.com/chjj/blessed) 是一个 curses-like library with a high-level terminal interface API for node.js. 基于 Blessed 能够快速的完成命令行文本节目的开发：    通过 [blessed-contrib](https://github.com/yaronn/blessed-contrib#readme) 可以快速的 Build dashboards (or any other application) using ASCII/ANSI art and javascript， 达到 Friendly to terminals, ssh, and developers. Extends blessed with custom drawille and other widgets 的使用效果。    我们在本次 Summer 2021 的项目中，Wechaty 希望可以实现对一个基于 Blessed 的 CLI 命令行文本客户端，通过 Wechaty 的基础支持，实现一个能够作为 WeChat, WeCom, Lark, Whatsapp 等所有 Wechaty 支持的 IM 的命令行文本客户端。    客户端的界面设计和交互，可以仿照 Linux 命令行的 IRC 客户端：    &gt; See more IRC client from [here](https://www.slant.co/topics/1323/~best-irc-clients-for-linux)    我们 Wechaty 社区已经有了一些基于 Blessed 的项目和代码，可以参考： [Wechaty Twins Bot](https://github.com/wechaty/wechaty-getting-started/tree/master/examples/professional/blessed-twins-bot)    ## 需求介绍    仿照 Linux 命令行终端的 IRC 文本客户端，实现一个基于 Wechaty 的即时通讯工具客户端，通过 Wechaty 支持所有现有的 [Wechaty Puppet Providers](https://wechaty.js.org/docs/puppet-providers/)，比如微信、企业微信、飞书、Whatsapp等。    在初期开发中，能够实现文本消息的接收和发送，即可完成原型验证 POC 。","label":"210220200","link":"","tech_tag":["Linux","JavaScript","NodeJS","TypeScript"],"domain_tag":["OS","Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","发布 Git Repo `wechaty-cli`","完成完整的联系人列表、聊天对话管理、群列表、群对话管理。","完成联系人管理、群管理，达到接近现有的 IRC 客户端功能的完整程度","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["TypeScript programming language","Git","Blessed"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于 Matrix AppService Wechaty 项目的用户、群与消息等基础功能的完善","remark":"","difficulty":"高","mentor":"李卓桓","contact":"<huan@chatie.io>","uniont":"yswtrue<yswtrue@gmail.com>","student_count":0,"description":"## 背景介绍    Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    [Matrix](https://matrix.org/blog/index) 是一个 open network for secure, decentralized communication, like [Pidgin](http://pidgin.im) on your Phone.    [matrix-appservice-wechaty](https://github.com/wechaty/matrix-appservice-wechaty/) 是一个 WeChat (微信) Matrix AppService for bridging the Matrix user with WeChat user.    &gt; It has been officially listed at [[Matrix] Bridge Page for Wechaty](https://matrix.org/docs/projects/bridge/matrix-appservice-wechaty).    我们在本次 Summer 2021 的项目中，社区希望可以将我们的 [matrix-appservice-wechaty](https://github.com/wechaty/matrix-appservice-wechaty/) 项目进行继续完善，将它对用户、群、消息收发（包括文本、图片、视频等）的基础功能进行完善和支持。    ## 需求介绍    1. 架设一套自己的 Matrix 系统  2. 架设 [matrix-appservice-wechaty](https://github.com/wechaty/matrix-appservice-wechaty/) 并整合到 Matrix 系统中  3. 对 Matrix AppService Wechaty 的功能进行试用，分析其当前的功能，然后列出需要完善的功能列表，以及欠缺的功能列表，并作出开发计划。    在初期开发中，能够实现图片消息的接收和发送，即可完成原型验证 POC 。","label":"210220201","link":"","tech_tag":["NodeJS","TypeScript","Git","Matrix"],"domain_tag":["Dev Tools","Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","完成各种消息类型的收发功能","对项目进行完整的分析，整理出所有需要支持的 Wechaty 功能列表，以及那些需要完善，那些需要继续开发","完成计划列表中的计划","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["TypeScript programming language","Git","Matrix"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"开发支持 QQ 聊天软件的 Wechaty Puppet Provider 模块","remark":"","difficulty":"中","mentor":"李佳芮","contact":"<rui@chatie.io>","uniont":"李卓桓<huan@chatie.io>","student_count":0,"description":"## 背景介绍    Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    QQ 是国内和微信并列的两大聊天软件。我们在本次 Summer 2021 的项目中，Wechaty 希望可以实现对 QQ Chatbot 的支持。通过 Wechaty Puppet 的接口，可以将 QQ 进行 RPA 封装，使其成为 `wechaty-puppet-qq`  供 Wechaty 开发者方便接入 QQ 平台，使其成为 Wechaty 可以使用的社区生态模块。    ## 需求介绍    使用  项目作为模版，参考社区其他的 [Wechaty Puppet Provider](https://wechaty.js.org/docs/puppet-providers/) 代码模块，对 QQ 进行规划、RPA选型、原型测试，和最终的代码封装。    这里有一个专门讲解如何开发 Wechaty Puppet Provider 的 workshop 视频，它以 `wechaty-puppet-official-account` 作为例子，做了从0到1的入门讲解：[Wechaty Workshop for Puppet Makers: How to make a Puppet for Wechaty](https://wechaty.js.org/2020/08/05/wechaty-puppet-maker/)。通过观看这一个小时的视频，应该可以系统性的了解如何完成构建一个 Wechaty Puppet Provider 模块。    在初期开发中，能够实现文本消息的接收和发送，即可完成原型验证 POC 。    还可以参考以下链接：    1. TypeScript Puppet Official Documentation: https://wechaty.github.io/wechaty-puppet/typedoc/classes/puppet.html  1. Wechaty Puppet Specification: https://wechaty.js.org/docs/specs/puppet  1.","label":"210220202","link":"","tech_tag":["JavaScript","Git"],"domain_tag":["Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","发布 Git Repo `wechaty-puppet-qq`","可以通过 Wechaty 加载 wechaty-puppet-qq 模块，并通过 QQ RPA 底层，实现文本消息的收发功能","提供一个 `examples/ding-dong-bot.ts` ，完成“接收到文字消息`ding`时，自动回复消息`dong`\"的功能","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["TypeScript programming language","Git","RPA"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"},{"name":"基于 Wechaty Puppet Official Account 项目的用户与消息等基础功能的完善","remark":null,"difficulty":"中","mentor":"吴京京","contact":"<wjmcater@gmail.com>","uniont":null,"student_count":0,"description":"## 背景介绍    Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。    Wechaty Puppet for WeChat Official Accounts 是一个帮助用户 use Wechaty to manage your Official Account from https://mp.weixin.qq.com 的模块。    我们在本次 Summer 2021 的项目中，社区希望可以将我们的 [wechaty-puppet-official-account](https://github.com/wechaty/wechaty-puppet-official-account/) 项目进行继续完善，将它对用户、消息收发（包括文本、图片、视频），各种微信公众账号平台的基础功能进行完善和支持。    ## 需求介绍    1. 申请开发专用测试公众账号  2. 架设 [wechaty-puppet-official-account](https://github.com/wechaty/wechaty-puppet-official-account/) 并可以进行微信公众账号的正常文本消息收发  3. 对 Wechaty Puppet Official Account 的功能进行试用，分析其当前的功能，然后列出需要完善的功能列表，以及欠缺的功能列表，并作出开发计划。    在初期开发中，能够实现图片消息的接收和发送，即可完成原型验证 POC 。","label":"210220203","link":"","tech_tag":["TypeScript","Git"],"domain_tag":["Programming Language"],"oR":["每日代码 commit","每周提交一份 report （回复本 issue）","每两周一次在线会议","完成各种消息类型的收发功能","对项目进行完整的分析，整理出所有需要支持的 Wechaty 功能列表，以及那些需要完善，那些需要继续开发","完成计划列表中的计划","配置 GitHub Actions 实现自动化测试* （可选）"],"tR":["TypeScript programming language","Git","微信公众账号平台API"],"orgID":248,"spl":1,"organchor":"wechaty","orgname":"Wechaty 社区||Wechaty"}]},{"userId":395,"anchor":"kaiyuanshe","slide":"","video":"","img":"kaiyuanshe.jpg","title":"开源社||Kaiyuanshe","project_url":"","url":"https://kaiyuanshe.cn/","description":"开源社是由国内外支持开源的社区、个人及企业，依“贡献，共识，共治”原则，所组织的厂商中立、纯志愿者、非营利的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。我们专注于开源治理、国际接轨、社区发展和开源项目。|| Kaiyuanshe is a vendor-neutral, volunteer-only, non-profit alliance of domestic and international open source communities, individuals and enterprises, based on the principle of \"Contribute, Consensus, Govern\", to create a healthy and sustainable Open-source ecosystem and promote the Chinese Open-source community as an active participant and contributor to global open-source software. We focus on Open-source governance, international alignment, community development and Open-source projects. These descriptions will be displayed on the organization list page (Short Description) and on your organization's page.","full_des":"开源社是由国内外支持开源的社区、个人及企业，依“贡献，共识，共治”原则，所组织的厂商中立、纯志愿者、非营利的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。我们专注于开源治理、国际接轨、社区发展和开源项目。https://kaiyuanshe.cn/profile/about/|| Kaiyuanshe is a vendor-neutral, volunteer-only, non-profit alliance of domestic and international open source communities, individuals and enterprises, based on the principle of \"Contribute, Consensus, Govern\", to create a healthy and sustainable Open-source ecosystem and promote the Chinese Open-source community as an active participant and contributor to global open-source software. We focus on Open-source governance, international alignment, community development and Open-source projects. These descriptions will be displayed on the organization list page (Short Description) and on your organization's page.\nhttps://kaiyuanshe.cn/profile/about/","tech_tag":["开源社区","公益组织","Open-source community","Public interest organization"],"domain_tag":["开源治理","社区发展","国际接轨","开源项目","Open Source Governance","Community Development","International Connections","Open Source Projects"],"mail_list":"","email":"admin@kaiyuanshe.org","project_list":[]},{"userId":296,"anchor":"nebulagraph","slide":"","video":"","img":"nebulagraph.jpg","title":"Nebula Graph||Nebula Graph","project_url":"","url":"https://nebula-graph.com.cn","description":"开源分布式图数据库||An open-source distributed graph database. High throughput with low latency.","full_des":"Nebula Graph 是一款开源的图数据库，擅长处理千亿顶点和万亿条边的超大规模数据集，同时保持毫秒级延时。Nebula Graph 于 2019 年 5 月开源，目前迭代至 2.0 版本，已经有多家互联网头部企业用于实时推荐、风险控制、机器学习等场景。||Nebula Graph is an open-source distributed graph database capable of hosting super large scale graphs with dozens of billions of vertices (nodes) and trillions of edges, with milliseconds of latency. It was open sourced in May 2019 and the most recent version is v2.0. Nebula Graph has been adopted by dozens of huge Internet companies for various scenarios such as real-time recommendations, fraud detection, and machine learning.","tech_tag":["分布式","数据库","图数据库","C++","图计算","Linux"],"domain_tag":["图数据库","分布式系统"],"mail_list":"暂无，可以通过 GitHub Issues 跟社区沟通","email":"info@vesoft.com","project_list":[{"name":"为图数据库 Nebula Graph 提供 Rust Client 实现","remark":null,"difficulty":"中","mentor":"黄世海","contact":"<shylock.huang@vesoft.com>","uniont":null,"student_count":0,"description":"通过封装 fbthrift 的一些接口，提供与 golang/cpp/java 类似的 client 接口","label":"210360182","link":"","tech_tag":["Rust"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["需要保持同其他 client 接口的统一","需要考虑并发和 session 的管理"],"tR":["rust","fbthrift"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"为 图数据库 Nebula Graph 提供遵循 RESTful 规范的 API 定义和实现","remark":null,"difficulty":"中","mentor":"伊兴路","contact":"<yee.yi@vesoft.com>","uniont":null,"student_count":0,"description":"梳理现有 HTTP 的 API，使用 POST/PUT/GET/DELETE 的方式对应 Nebula Graph 中的 CRUD","label":"210360183","link":"","tech_tag":["Go","Distributed System"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["书写 OpenAPI/Swagger API 定义和文档","调研相关 web framework 可以根据 YAML 自动生成 validator 和 api 接口"],"tR":["golang","HTTP","OpenAPI"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"图数据库 Nebula Graph 支持 JDBC 协议","remark":null,"difficulty":"中","mentor":"丁燕梅","contact":"<laura.ding@vesoft.com>","uniont":null,"student_count":0,"description":"让 Nebula Graph 可以对接 JDBC 协议，实现 Nebula JDBC driver，实现 JDBC 的相关接口","label":"210360225","link":"","tech_tag":["Java","C++","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["用户可直接使用 JDBC 驱动操作 Nebula 服务","项目 repo 有自动运行的单元测试"],"tR":["Java"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"为图数据库 Nebula Graph 的查询语句提供图语义的对象封装","remark":null,"difficulty":"中","mentor":"丁燕梅","contact":"<laura.ding@vesoft.com>","uniont":null,"student_count":0,"description":"通过提供一组图语义的对象和方法，让用户不需要熟悉和感知 nGQL 的语法，就能对 Nebula 进行读写操作和图相关遍历。  1. 熟悉 Nebula 的 nGQL 语法和 Match 语法  2. 封装一些图相关的对象，比如 GraphService, Graph, Subgraph, Vertex, Edge, Path 等，提供图的增删改查以及schema相关操作。  3. 提供 nGQL 和 Match 包装的方法，用户根据不同方法执行相应的 query  4. 在实现过程中需要考虑如何使内部实现组装的 query 更加高效","label":"210360226","link":"","tech_tag":["Python","C++","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["用户可以通过这个工具库，无需熟悉 nGQL 即可对 Nebula 图数据库稳定地执行相关操作","项目 repo 有自动运行的单元测试"],"tR":["Python/Java","对 Nebula nGQL 语法 和 Match 语法熟悉"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"为图数据库 Nebula Graph 完善 Nodejs client 实现","remark":null,"difficulty":"中","mentor":"丁燕梅","contact":"<laura.ding@vesoft.com>","uniont":null,"student_count":0,"description":"根据提供的客户端设计文档，提供 NodeJS 版本的 graph client 相关实现。  1. 根据设计文档实现一个连接池处理简单的负载均衡以及 session 相关的异常处理  2. 封装服务端返回的数据结构处理  3. 增加相应的单元测试代码","label":"210360227","link":"","tech_tag":["NodeJS","C++","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["用户可以直接通过 NodeJS client 稳定地访问 Nebula 服务","用户可以到 npm 源获取到相应的版本包","项目repo有自动运行的单元测试"],"tR":["NodeJS","对 Nebula 的使用有一定了解"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"为图数据库 Nebula Graph 提供更多 RBO 优化规则","remark":null,"difficulty":"高","mentor":"王杰","contact":"<jie.wang@vesoft.com>","uniont":null,"student_count":0,"description":"研究 Nebula 目前生成的执行计划，并寻找可以优化的规则，生成更优的计划。  1. 熟悉 Nebula 生成执行计划的流程，熟悉各个算子的具体作用  2. 添加一些新的优化规则","label":"210360228","link":"","tech_tag":["Linux","C++","Distributed System","Database"],"domain_tag":["Linux Kernel","Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["实现至少两条 RBO 优化规则","调研 CBO 可行性，给出设计文档"],"tR":["C++","数据库优化"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"研究和实现基于图数据库 Nebula Graph 的图算法","remark":null,"difficulty":"中","mentor":"王昌圆","contact":"<anqi.wang@vesoft.com>","uniont":null,"student_count":0,"description":"对接图数据库 Nebula Graph 和图计算引擎，提供图算法。  1.图数据库 Nebula Graph 已对接GraphX，基于GraphX 实现 Hanp、Closeness、Line、Node2Vec 等算法   2.图数据库 Nebula Graph 对接其他图计算引擎，如Plato、Angel    该题目可二选一","label":"210360229","link":"","tech_tag":["Java","Distributed System","Database","Graph Algorithms"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["实现 GraphX 上的 Hanp、ClosenessLine、Node2Vec 算法","实现 Nebula Graph 与 Plato 的整合"],"tR":["Scala","C++"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"增强图数据库 Nebula Graph CSV 导入工具 Nebula Importer 的导入功能","remark":null,"difficulty":"中","mentor":"伊兴路","contact":"<yee.yi@vesoft.com>","uniont":null,"student_count":0,"description":"对 Nebula Importer 增强现有功能和 bugfix，提供更友好的错误处理方式。  1. 支持指定目录导入  2. 已有 bug fix  3. 增强错误处理机制","label":"210360230","link":"","tech_tag":["Go","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["新功能开发代码和测试代码","bugfix 的测试代码"],"tR":["golang"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"增强 Spark 导入工具 Nebula Exchange 的导入功能","remark":null,"difficulty":"中","mentor":"王昌圆","contact":"<anqi.wang@vesoft.com>","uniont":null,"student_count":0,"description":"丰富 Nebula Exchange 项目可支持的数据源，在已支持的数据源基础上增加 TigerGraph 等数据源，可自由扩展。","label":"210360231","link":"","tech_tag":["Java","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["支持 TigerGraph 数据导入 Nebula Graph"],"tR":["Scala/Java"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"增强 Nebula Flink Connector，提供SQL Connector","remark":null,"difficulty":"中","mentor":"王昌圆","contact":"<anqi.wang@vesoft.com>","uniont":null,"student_count":0,"description":"在 Nebula Flink Connector 中支持 Flink SQL 操作图数据库 Nebula Graph，参考项目 Flink-Mysql-connector（https://github.com/apache/flink/tree/master/flink-connectors），使用示例见 JDBC SQL Connector（https://ci.apache.org/projects/flink/flink-docs-release-1.12/zh/dev/table/connectors/jdbc.html）。    Nebula Flink Connector 中已实现 DataStream Connector，可在项目中增加 Nebula 的 catalog 管理，实现SQL Connector，通过 Flink SQL 直接操作图数据库 Nebula Graph。","label":"210360232","link":"","tech_tag":["Java","Distributed System","Database"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["实现 Nebula Graph 和 Flink 的 SQL Connector"],"tR":["Java"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"},{"name":"整合 nebula-importer 和 nebula-http-gateway 实现","remark":null,"difficulty":"中","mentor":"伊兴路","contact":"<yee.yi@vesoft.com>","uniont":null,"student_count":0,"description":"将 nebula-importer 的功能集成到 nebula-http-gateway 中。  1. 重构现有 nebula-http-gateway 和 nebula-importer 的交互流程  2. 将 http 通信的方式切换为 library 调用  3. 重新设计日志的交互方式","label":"210360233","link":"","tech_tag":["Go","Distributed System","Database","http"],"domain_tag":["Big Data","Dev Tools","Distributed System","Programming Language"],"oR":["完成两个项目的融合","完成融合后的项目的测试"],"tR":["golang","HTTP"],"orgID":296,"spl":1,"organchor":"nebulagraph","orgname":"Nebula Graph||Nebula Graph"}]},{"userId":467,"anchor":"tinylab","slide":"","video":"","img":"tinylab.jpg","title":"泰晓科技||Tiny Lab","project_url":"","url":"http://tinylab.org","description":"泰晓科技是一个知名公益性 Linux 技术社区 —— 聚焦 Linux，追本溯源，见微知著！|| Tiny Lab is a public Chinese Linux community, focus on Linux kernel and embedded Linux system!","full_des":"泰晓科技是一个知名公益性 Linux 技术社区，创立于 2010 年，长期聚焦 Linux 系统技术交流和产品实践，追本溯源，见微知著，致力于推动业界创造更极致的 Linux 产品。|| Tiny Lab is a public Chinese Linux community, founded in 2010, focus on Linux kernel and embedded Linux system, especially about product practice, committed to promote the industry to develop better Linux products.","tech_tag":["Linux Lab","技术交流","产品实践","Linux"],"domain_tag":["Linux 内核","Linux 实验环境","实时系统","系统优化"],"mail_list":"http://tinylab.org/about    ","email":"contact@tinylab.org","project_list":[{"name":"Linux Lab 打包实战","remark":null,"difficulty":"高","mentor":"taotieren","contact":"<amdin@taotieren.com>","uniont":"Falcon<falcon@ruma.tech>","student_count":0,"description":"Linux Lab （https://gitee.com/tinylab/linux-lab）是一款知名国产开源项目，由泰晓科技技术社区（http://tinylab.org）创建于 2016 年，旨在提供一套开箱即用的 Linux 内核与嵌入式 Linux 系统开发环境，安装以后，可以在数分钟内开展 Linux 内核与嵌入式 Linux 系统开发。    当前 Linux Lab 已经支持包括 X86、ARM、RISC-V、Loongson 在内的 7 大国内外主流处理器架构，增加了 18 款流行虚拟或真实嵌入式开发板，支持从 v0.11, v2.6.x 到 v5.x 的各种新老 Linux 内核版本，可以同时在 Linux、Windows 和 macOS 三大主流操作系统上安装与使用，另外也制作了免安装、即插即用的 Linux Lab Disk。    本次项目计划为 Linux Lab 的 Cloud Lab 管理环境打包，确保可以在 Linux、Windows、MacOS 等操作系统上更易、更快安装，允许通过软件仓库就能完成 Linux Lab 及 Cloud Lab 的安装及依赖环境的处理。","label":"210560286","link":"","tech_tag":["Linux","Git","Docker"],"domain_tag":["Linux Kernel","Dev Tools"],"oR":["为 Linux 发行版打包，优先支持1-2种主流格式，例如 deb, rpm, YaST, AUR","为 macOS 打包，添加 macOS 安装包","为 Windows 打包，添加 Windows `exe` 安装包","撰写并发表详细开发与使用文档"],"tR":["基本的 Linux 命令","熟悉 Linux Lab","熟悉 Cloud Lab","了解各大主流系统的软件包构成","了解仓库中安装软件包时如何处理依赖关系"],"orgID":467,"spl":1,"organchor":"tinylab","orgname":"泰晓科技||Tiny Lab"},{"name":"Linux Lab 嵌入式图形系统集成实战","remark":null,"difficulty":"高","mentor":"贾献华","contact":"<iosdevlog@iosdevlog.com>","uniont":"Falcon<falcon@ruma.tech>","student_count":0,"description":"Linux Lab （https://gitee.com/tinylab/linux-lab）是一款知名国产开源项目，由泰晓科技技术社区（http://tinylab.org）创建于 2016 年，旨在提供一套开箱即用的 Linux 内核与嵌入式 Linux 系统开发环境，安装以后，可以在数分钟内开展 Linux 内核与嵌入式 Linux 系统开发。    当前 Linux Lab 已经支持包括 X86、ARM、RISC-V、Loongson 在内的 7 大国内外主流处理器架构，增加了 18 款流行虚拟或真实嵌入式开发板，支持从 v0.11, v2.6.x 到 v5.x 的各种新老 Linux 内核版本，可以同时在 Linux、Windows 和 macOS 三大主流操作系统上安装与使用，另外也制作了免安装、即插即用的 Linux Lab Disk。    本次项目计划把 Linux Lab 打造成一套迷你嵌入式 Linux 发行版，优先满足 AIoT 领域需求。Linux Lab 目前已支持 Linux、Buildroot、Uboot 和 Qemu 四大核心组件，本次项目将进一步模块化，新增至少一款嵌入式 GUI 支持，不依赖 Buildroot，能一键编译并启动嵌入式图形系统，并集成一些核心协议和软件，希望有 AIoT 厂家申请参与协作。","label":"210560287","link":"","tech_tag":["Linux","Git","Docker"],"domain_tag":["Linux Kernel","Dev Tools"],"oR":["进一步模块化 Linux Lab，方便扩展更多组件","集成 GuiLite 等嵌入式图形系统","集成 BusyBox","一键构建一个可以在虚拟开发板运行的 mini 图形系统","加上一些小型的协议，比如 mqtt 之类的","选做：接入智能家居平台","撰写并发表详细开发与使用文档"],"tR":["基本的 Linux 命令","熟悉 Makefile 和 Bash","熟悉 Docker 的安装与使用","熟练使用 Linux Lab","有 LFS 等 Linux 发行版制作经验优先","有 GuiLite 等嵌入式图形系统开发经验优先"],"orgID":467,"spl":1,"organchor":"tinylab","orgname":"泰晓科技||Tiny Lab"},{"name":"Linux Lab openEuler 集成开发支持","remark":null,"difficulty":"高","mentor":"Falcon","contact":"<falcon@ruma.tech>","uniont":null,"student_count":0,"description":"Linux Lab（https://gitee.com/tinylab/linux-lab）是一款知名国产开源项目，由泰晓科技技术社区（http://tinylab.org）创建于 2016 年，旨在提供一套开箱即用的 Linux 内核与嵌入式 Linux 系统开发环境，安装以后，可以在数分钟内开展 Linux 内核与嵌入式 Linux 系统开发。    当前 Linux Lab 已经支持包括 X86、ARM、RISC-V、Loongson 在内的 7 大国内外主流处理器架构，增加了 18 款流行虚拟或真实嵌入式开发板，支持从 v0.11, v2.6.x 到 v5.x 的各种新老 Linux 内核版本，可以同时在 Linux、Windows 和 macOS 三大主流操作系统上安装与使用，另外也制作了免安装、即插即用的 Linux Lab Disk。    作为一款国产开源项目，Linux Lab 已经并且在继续为国产芯片、开发板和系统提供大力支持。    2019 年，Linux Lab 为平头哥前身中天微 CSKY 添加了集成开发支持（https://gitee.com/tinylab/csky）；2019-2020 年，Linux Lab 已经为龙芯 MIPS 架构的 3 大芯片系列的 4 款开发板提供了即时开发支持（https://gitee.com/loongsonlab/loongson）；2020-2021 年，Linux Lab 集成了国产真实嵌入式硬件开发板（https://gitee.com/tinylab/ebf-imx6ull），这些工作让开发者“零门槛”真切用上国产芯片和开发板，也让国产芯片和开发板有更多的开发者生态。    本次项目旨在 Linux Lab 现有 aarch64/virt 虚拟开发板的基础上，增加鲲鹏支持，并同时增加对知名开源国产操作系统 openEuler 的集成开发支持，旨在降低 openEuler 内核与系统的学习、实验与开发门槛，同时为 openEuler 开源项目吸引更多的爱好者与开发者。","label":"210560288","link":"","tech_tag":["Linux","Python","Git","Docker","Qt"],"domain_tag":["Linux Kernel","OS","Dev Tools"],"oR":["添加一款新的鲲鹏虚拟开发板","集成 openEuler 开源内核","集成 openEuler 文件系统","撰写并发表详细开发与使用文档"],"tR":["基本的 Linux 命令","熟悉 Linux Lab","Linux 内核开发基础","嵌入式 Linux 系统开发基础","熟悉 Qemu 用法","有 openEuler 使用与开发经验优先"],"orgID":467,"spl":1,"organchor":"tinylab","orgname":"泰晓科技||Tiny Lab"},{"name":"Linux Lab 新增 Rust for Linux 开发支持","remark":null,"difficulty":"高","mentor":"Falcon","contact":"<falcon@ruma.tech>","uniont":"Mike Tang<daogangtang@live.com>","student_count":0,"description":"Linux Lab（https://gitee.com/tinylab/linux-lab）是一款知名国产开源项目，由泰晓科技技术社区（http://tinylab.org）创建于 2016 年，旨在提供一套开箱即用的 Linux 内核与嵌入式 Linux 系统开发环境，安装以后，可以在数分钟内开展 Linux 内核与嵌入式 Linux 系统开发。    当前 Linux Lab 已经支持包括 X86、ARM、RISC-V、Loongson 在内的 7 大国内外主流处理器架构，增加了 18 款流行虚拟或真实嵌入式开发板，支持从 v0.11, v2.6.x 到 v5.x 的各种新老 Linux 内核版本，可以同时在 Linux、Windows 和 macOS 三大主流操作系统上安装与使用，另外也制作了免安装、即插即用的 Linux Lab Disk。    Rust for Linux 正在往 Linux 官方主线提交代码，目前有部分代码已经进入 Linux Next，这意味着下一个 Linux 内核版本将正式可以使用 Rust 来开发 Linux 模块。但是，Rust 作为一个新兴语言，对很多人来说都很陌生，第一步的环境搭建就能挡住很多人。本次项目旨在为 Linux Lab 做好 Rust for Linux 的环境准备工作，确保 Linux Lab 用户可以直接上手在 Linux Lab 中用 Rust 编写 Linux 内核模块，并提供必要的上手模块案例和中文文档。","label":"210560289","link":"","tech_tag":["Linux","Rust","Git","Docker"],"domain_tag":["Linux Kernel","Dev Tools"],"oR":["为 Linux Lab 新增 Rust 开发环境","确保 Rust for Linux 中的模块可以编译与运行","确保 make module 兼容 Rust 撰写的 Linux 内核模块","撰写并发表详细开发与使用文档","可选：使用 Rust 撰写1-2个新的 Linux 内核模块"],"tR":["基本的 Linux 命令","熟悉 Makefile 和 Bash","熟悉 Linux Lab","Linux 内核与驱动开发基础","具有 Rust 语言使用经验优先","用 Rust 撰写过 Linux 内核模块优先"],"orgID":467,"spl":1,"organchor":"tinylab","orgname":"泰晓科技||Tiny Lab"},{"name":"Linux Lab Disk 跨平台运行管理软件","remark":null,"difficulty":"高","mentor":"Falcon","contact":"<falcon@ruma.tech>","uniont":"RXD<rxd@tinylab.org>","student_count":0,"description":"Linux Lab（https://gitee.com/tinylab/linux-lab）是一款知名国产开源项目，由泰晓科技技术社区（http://tinylab.org）创建于 2016 年，旨在提供一套开箱即用的 Linux 内核与嵌入式 Linux 系统开发环境，安装以后，可以在数分钟内开展 Linux 内核与嵌入式 Linux 系统开发。    当前 Linux Lab 已经支持包括 X86、ARM、RISC-V、Loongson 在内的 7 大国内外主流处理器架构，增加了 18 款流行虚拟或真实嵌入式开发板，支持从 v0.11, v2.6.x 到 v5.x 的各种新老 Linux 内核版本，可以同时在 Linux、Windows 和 macOS 三大主流操作系统上安装与使用，另外也制作了免安装、即插即用的 Linux Lab Disk。    Linux Lab 开源项目目前正在开发 v0.7，该版本旨在开发一款免安装、即插即用的 Linux Lab Disk，进一步降低 Linux 内核与嵌入式 Linux 系统的学习与开发门槛，提升学习与开发效率。当前 Linux Lab Disk 采用超高速固态 U 盘，已经可以在 64 位 X86 主机、笔记本和 macBook 上做到开机上电即插即用，也可以在 Windows、Linux 和 macOS 三大主流操作系统上当双系统使用，目前正在开发一款当双系统使用时的跨平台管理软件，方便在作为双系统使用时也能做到 “即插即用”。","label":"210560302","link":"","tech_tag":["Linux","Python","Git","Docker","Qt"],"domain_tag":["Dev Tools"],"oR":["可以在 Linux 系统下管理并快速启动 Linux Lab Disk","可以在 Windows 系统下管理并快速启动 Linux Lab Disk","可以在 macOS 系统下管理并快速启动 Linux Lab Disk","撰写并发表详细开发与使用文档","需要支持 Virtualbox, Qemu 或 Vmware 中至少一种虚拟机"],"tR":["有 Python、Qt 或 Delphi 等某一种图形化软件开发经验","了解 Virtualbox，Qemu 或 Vmware 中某一种虚拟机的深度命令行工具用法","有 Windows、Linux 或 macOS 等系统跨平台相关开发经验","熟练使用 Linux Lab"],"orgID":467,"spl":1,"organchor":"tinylab","orgname":"泰晓科技||Tiny Lab"}]},{"userId":160,"anchor":"aosc","slide":"","video":"","img":"aosc.jpg","title":"安同开源社区||Anthon Open Source Community","project_url":"https://wiki.aosc.io/zh/community/ospp/2021-projects/","url":" https://aosc.io/","description":"AOSC 是围绕 Linux 发行版 AOSC OS 形成的开源社区。","full_des":"安同开源社区（Anthon Open Source Community, 简称 AOSC）是围绕社区项目 AOSC OS 形成的开源社区。AOSC OS 是一款遵循简约、本地化、包容、可持续及精制原则独立开发的通用 Linux 发行版，致力于改善开源软件的使用体验。","tech_tag":["内核","RISC-V","嵌入式","Linux","阿里平头哥 (T-Head)","Rust","C","Python","Bash","GTK","本地化 (L10n)","Dpkg 包管理"],"domain_tag":["Linux 发行版","中文本地化"],"mail_list":" discussions@lists.aosc.io ","email":" discussions@lists.aosc.io","project_list":[{"name":"全志 RISC-V 芯片主线化开发工作||Allwinner RISC-V Chip Mainline Development","remark":"","difficulty":"高","mentor":"郑兴达","contact":"<icenowy@aosc.io>","uniont":null,"student_count":0,"description":"全志即将推出一款基于 XuanTie C906 RISC-V 核心的 SoC 。本项目将对该芯片进行启动固件（暂定为 U-Boot ，可根据学生兴趣换用其他方案）和 Linux 内核的主线化开发工作。 该芯片将于 4 月下旬发布，随后将发布官方开发板、SDK 及文档；本项目的开发过程中需要大量参考 SDK 代码。||Allwinner will soon release an SoC based on the XuanTie C906 RISC-V core. This project will focus on mainlining the bootloader (tentatively U-Boot, may switch according to student interest) and Linux Kernel for this chip. The chip will be released in late April, with the official development board, SDK and documentation to follow. A lot of references to the SDK code will be needed for the development of this project    ","label":"210080041","link":"","tech_tag":["Linux","C","Git","RISC-V，XuanTie，U-Boot"],"domain_tag":["Linux Kernel"],"oR":["完成该芯片的基本 bootloader 功能，能够启动 Linux 内核，并将相关代码提交给上游。||Basic bootloader functions, bootable Linux Kernel, and upstreaming all relevant code changes.","完成该芯片的基本 Linux 移植，可以从 MMC 启动现成 Linux 发行版并在串口进行输入 / 输出。||Booting currently available Linux distributions from the MMC and input/output over the serial connection.","视完成情况实现各种外设的驱动。||If time allows, implement drivers for various peripherals."],"tR":["编译交叉工具链（可使用现成工具）和内核。||Build cross-compilation toolchains (or use off-the-shelf tools) and the Linux Kernel.","使用 Git 代码管理（使用 commit, rebase 等操作）。||Using Git for code maintenance (commit, rebase, etc.).","编写 C 语言代码（能参照现有内核代码编写新设备的驱动代码）。||Writing C code (implementing drivers for new devices while referencing existing Kernel code).","使用英语与上游项目或社区交流（编写提交信息 [commit message]，在邮件列表上接受补丁审阅 [patch review]，如果有必要的时候面对 Linus Torvalds 或其他上游维护者的愤怒）。||Writing commit messages, accepting patch reviews on mailing lists, facing the wrath of Linus Torvalds or other upstream maintainers if necessary.","了解 RISC-V 指令集（能看懂 GCC 输出的汇编代码）。||Understanding the RISC-V instruction set (being able to read assembly code output by GCC)."],"orgID":160,"spl":0,"organchor":"aosc","orgname":"安同开源社区||Anthon Open Source Community"},{"name":"半自动软件包退休、封存与整理系统||Semi-Automatic Package Clean-up, Archival and Organizing System","remark":"","difficulty":"低","mentor":"张顺然","contact":"<staph@aosc.io>","uniont":null,"student_count":0,"description":"软件包更新在现代社会已经不再是什么稀奇事。每天，无数软件包获得更新，有些是修复漏洞，有些是增加功能，还有些是性能优化等等。 由于系统的软件包仓库由业余爱好者维护，这些被更新的包渐渐积累，成为了维护负担。 然而这些老包亦有分析价值。如果将过去的软件包收集起来，线下储存，可以用于未来的分析等活动。 因此我们设立了该项目，用于退休、封存与整理老软件包。||Software package updates are increasingly frequent in the modern world. Every day, countless packages get updated, some to fix bugs, some to add features, some for performance optimization, and so on. Since the system's package repository is maintained by hobbyists, outdated packages gradually accumulate, and become a burden for maintainers and storage spaces. However, these outdated packages also hold value for regression testing and other maintenance analysis. If past packages are collected and archived offline, they can be used for future analysis and other activities. Therefore, we set up this project for retiring, storing and organizing old packages.    ","label":"210080042","link":"","tech_tag":["Python","Database","Storage","Bash"],"domain_tag":["Dev Tools"],"oR":["提供一个程序用于查询哪些软件源中的包可以被封存，哪些由于已封存，可以直接丢弃，哪些应当留在仓库中||Implement a program to determine which packages to archive, drop or keep in the repository.","提供一个程序用于封存软件包：移除以及分类归纳为指定大小（目前为 &lt; 25GiB）的档案夹，可能的话，最终生成 Blu-ray ISO。||Implement a program to archive packages: removing, classifying, and sorting packages into fix-sized volumes (&lt; 25GB) and creating Blu-ray ISO if possible.","提供一个较高效率的方式，可以方便的使用程式查询所有已封存软件包资讯。||Implement an efficient method to query archived packages.","（如有额外时间）提供一个方式生成“最小软件仓库”，仅包含最新版本的软件包，占用最少的空间。||(If time allows) Implement a program to generate a \"minimal repository,\" which contains only the latest software packages and occupy least amount of disk space possible."],"tR":["能够阅读英文文档（语言官方文档 / API 等）。||Reading and comprehending relevant technical documentations (official language documentations and API references).","熟练使用一种语言（建议 Python）的字符串处理功能。||String manipulations in at least one programming language (preferably Python).","Filesystem manipulations in at least one programming language (preferably Python or Bash).【熟练使用一种语言（建议 Python / Bash）的文件系统】处理功能。】","了解使用该语言访问网路 API 以取得文字的功能。||Network APIs in the language of your choice.","了解并可简单使用一种数据库（建议 SQLite）。||Using a simple database (preferably SQLite).","使用较少的依赖，便于在源服务器上（无 root 的 CLI）快速部署与执行。||Using minimal dependencies to ensure easy deployment on the repository server (non-root CLI environment).","尽量做到无人工介入完成包退休封存与整理工作。||Automating the process as much as possible.","软件包查询可以使用很少系统资源与响应时间完成。||Minimal system resources and time during information query."],"orgID":160,"spl":0,"organchor":"aosc","orgname":"安同开源社区||Anthon Open Source Community"},{"name":"自由及开源软件简中本地化工作","remark":"","difficulty":"中","mentor":"白铭骢","contact":"<jeffbai@aosc.io>","uniont":"傅孝元<sakiiily@aosc.io>","student_count":0,"description":"当前我国国内有相当数量的 Linux 及各大开源或自由软件 (F/OSS) 使用者，但在使用过程中，用户们不难发现，各种软件的简中翻译及本地化质量参差不齐，错漏繁多。尤其主流桌面环境如 GNOME 及 KDE 简中翻译率并不理想，GIMP 和 Inkscape 这类常用应用的本地化质量相对较低；而我社的 Wiki 站点简中文档翻译也时常欠完整或更新。该项目的主要目的是改善当前开源或自由软件的本地化质量及覆盖率。","label":"210080099","link":"","tech_tag":["Localization"],"domain_tag":["Localization"],"oR":["完善（或改善，如时间不足）现有开源软件的简中翻译，包括但不限于 CUPS、GNOME、Plasma、MATE Desktop 及 NetSurf（其余项目根据考察决定）。学生可自选 1 - 2 个项目，或由导师推荐。","（如有额外时间）更新或完善社区 Wiki 站简中文档翻译。","如有额外时间）审阅并修改现行大陆简中自由软件本地化工作指南（1.5.4 版），修改后通知各大陆简中 (zh_CN) 翻译小组及社区。"],"tR":["通读大陆简中自由软件本地化工作指南（1.5.4 版），熟知大陆简中标点、句式及选词规范及技巧。","了解主要本地化软件框架（如 GNU Gettext）及工具（如 Poedit 及 Lokalize）","其余工作流程及技巧将于项目期间沟通及培训。"],"orgID":160,"spl":1,"organchor":"aosc","orgname":"安同开源社区||Anthon Open Source Community"},{"name":"安装程序 DeployKit 的实现||Implementation of DeployKit ","remark":"","difficulty":"中","mentor":"刘子兴","contact":"<liushuyu@aosc.io>","uniont":null,"student_count":0,"description":"社区项目 DeployKit 是未来 AOSC OS 的安装和恢复程序。该程序有两种模式：作为安装向导指引用户正确地安装 AOSC OS、作为系统备份/恢复工具，提供预防性备份和灾难恢复功能。目前，DeployKit 使用 Cursive 和 Rust 编程语言基本实现了安装向导的命令行用户界面（TUI）和其后端的库，但尚未实现安装向导的图形界面部分。本项目的目标是按照社区提供的 AOSC OS 安装指引，将这部分原本需要手动操作的安装流程实现到 DeployKit 上。||DeployKit is the proposed installer for AOSC OS. The program should have two operating modes: helping the user to install AOSC OS as an installer, and providing preventive back-up and disaster recovery functionalities. At present, a very basic TUI interface has been implemented using Cursive and the Rust Programming Language. However, a GUI interface is still yet to be implemented. The goal of this project is to provide an installer implementation that follows the AOSC OS Installation Guide and automates all installation steps.    ","label":"210080100","link":"","tech_tag":["Linux","C","C++","Rust","GTK"],"domain_tag":["Software","Operating System"],"oR":["实现 DeployKit 的图形用户界面||Implement a GUI interface for DeployKit. ","完善安装器后端库的逻辑和错误处理||Improve error handling and overall logic of the installer backend","实现安装过程在图形用户界面上的可视化（进度展示）||Provide necessary visual feedback in the UI (e.g. progress indications). "],"tR":["了解基本的 Linux 命令||Understanding of basic Linux commands.","熟悉 Rust 或类似的系统编程语言，如 C 或 C++||Familiarity with Rust or other system programming languages such as C/C++.","熟悉 Rust 的外部函数调用机制（FFI）以及 unsafe 的处理||Familiarity with Rust FFI mechanisms and unsafe handling.","了解 GObject、GLib 和 GTK 编程（注：GTK/GLib API 文档可能不详细，已经熟悉 GTK 3 API 的学生优先）||Familiarity with GObject, Glib, and GTK programming (Note: GTK/GLib API documentation is at times inconsistent, students with prior knowledge with GTK 3 API is preferred).","注：项目假设参与学生在报名时已对“项目技术要求”部分前三个技术较为熟悉||Note: This project assumes that the prospective student is already proficient with the first three \"Technical Requirements\" by the time of application."],"orgID":160,"spl":0,"organchor":"aosc","orgname":"安同开源社区||Anthon Open Source Community"},{"name":"AOSC OS 的 LoongArch 移植","remark":null,"difficulty":"高","mentor":"白铭骢","contact":"<jeffbai@aosc.io>","uniont":null,"student_count":0,"description":"龙芯即将在六月推出基于 LoongArch 架构的龙芯 3A5000 处理器，本项目的目标是为 AOSC OS 制作针对 LoongArch 的新移植。","label":"210080299","link":"","tech_tag":["Linux","C","Container","C++","Rust","Git"],"domain_tag":["Linux Kernel","OS"],"oR":["为 [Autobuild](https://github.com/AOSC-Dev/autobuild3/) 设定 LoongArch 架构的标准编译优化、系统类型 (tuplet) 及包管理配置。","结合 [Linux From Scratch](https://www.linuxfromscratch.org/) 及 AOSC OS 的[维护指南](https://wiki.aosc.io/developer/packaging/package-styling-manual/) 构建基本系统。","如时间允许，构建可启动系统并制作标准发行供其他用户使用。"],"tR":["熟悉 AOSC OS 的基本构建和维护工具，包括 [Autobuild3](https://github.com/AOSC-Dev/autobuild3/)，[ACBS](https://github.com/AOSC-Dev/acbs/) 及 [Ciel](https://github.com/AOSC-Dev/ciel/)。","基本理解 [Linux From Scratch](https://www.linuxfromscratch.org/) 的流程及原理。","熟悉 AOSC OS 的[维护指南](https://wiki.aosc.io/developer/packaging/package-styling-manual/) 。","熟悉 Bash 语法。","制作或改写补丁。","使用英语与上游项目或社区交流（编写提交信息 \\[commit message\\]，在邮件列表上接受补丁审阅 \\[patch review\\]。"],"orgID":160,"spl":1,"organchor":"aosc","orgname":"安同开源社区||Anthon Open Source Community"}]},{"userId":155,"anchor":"gooderp","slide":"","video":"","img":"gooderp.jpg","title":"GoodERP开源俱乐部","project_url":"http://www.gooderp.org/event/summer2021-2021-05-24-2021-06-13-5/register","url":"http://www.gooderp.org/","description":"俱乐部会员以众筹和众包的开源协作形式完善和推广GoodERP产品并提供相关服务","full_des":"面向年营业额在2千万到2亿元的增长型企业，需要按需定制的信息化系统支撑业务稳步增长，GoodERP是一款开源ERP软件，具备财务、人事、项目、采购、销售、库存等核心功能。不同于现有市场的套装软件或云软件，GoodERP不限用户数，模块化二次开发，源码和数据自主掌控，是开源专业化IT服务的载体。","tech_tag":["Python3","Postgresql","xml","jquery"],"domain_tag":["ERP 企业管理软件"],"mail_list":"","email":"jeff@osbzr.com","project_list":[{"name":"升级GoodERP普及版拣货模块","remark":null,"difficulty":"中","mentor":"王剑峰","contact":"<wjfonhand@gmail.com>","uniont":null,"student_count":0,"description":"旧版本源码    https://github.com/osbzr/gooderp_addons/tree/master/warehouse_wave    场景    GoodERP标准的操作是仓库管理员在发货后逐一确认发货单来记录货物的发出结果。    针对化妆品等小件电商客户，存在每天多张发货单涉及相同产品需要集中拣货提高效率。为此，我们设计了这个模块实现电商小件拣货。    功能    选择多张发货单生成一张拣货单    从快递鸟为每张发货单取得快递面单    为每张发货单指定拣货小车格子号，并在拣货单上打印输出指导拣货    拣货后按格子扫货品码复核拣货结果","label":"210470170","link":"","tech_tag":["Python","JavaScript"],"domain_tag":["ERP"," 管理软件"," 信息化"],"oR":["独立可安装的模块","实现业务流程闭环"],"tR":["100%测试覆盖率","安装过程中无warning"],"orgID":155,"spl":1,"organchor":"gooderp","orgname":"GoodERP开源俱乐部"}]},{"userId":162,"anchor":"eduoj","slide":"","video":"","img":"eduoj.jpg","title":"EduOJ","project_url":"https://github.com/EduOJ/backend/wiki/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E7%82%B9%E4%BA%AE%E8%AE%A1%E5%88%92-%E6%9A%91%E6%9C%9F2021-%7C-Summer-2021-of-Open-Source-Promotion-Plan","url":"https://github.com/EduOJ","description":"一个面向程序设计和算法教学的在线评测系统。","full_des":"EduOJ 是一个面向高中、大学的程序设计课程和数据结构与算法课程的在线评测系统。和其他开源 OJ 相比，提供了更为灵活的作业设置、分数统计等面向教学而非竞赛练习的功能。拓展性强，可支持Special Judge、多文件评测等拓展功能。","tech_tag":["Go","JavaScript","Distributed System","Database","Stroage","Vue，"],"domain_tag":["Distributed System","Web","Programming Language"],"mail_list":"  eduoj@googlegroups.com","email":"i@leoleoasd.me","project_list":[{"name":"邮件通知/验证系统","remark":"","difficulty":"中","mentor":"LEO","contact":"<luyuxuanleo+eduoj@gmail.com>","uniont":"孙天天<sun123t2@163.com>","student_count":0,"description":"现在OJ注册时输入的邮箱仅用于登录，缺失邮件验证/邮件通知/邮件重置密码等功能。  请调研并比较邮件相关库/HTML模板库，实现一个注册时邮件验证/邮件通知/邮件重置密码功能。    参考：  https://github.com/go-gomail/gomail  https://github.com/go-mail/mail","label":"210110012","link":"","tech_tag":["Go","HTML，SMTP"],"domain_tag":["Web","Programming Language"],"oR":["注册时（可配置是否要求）邮件认证","邮件重置密码","基于现有的Event/Hook系统，实现邮件通知功能"],"tR":["代码测试覆盖率70%以上","命名/文档/注释复合社区规范"],"orgID":162,"spl":1,"organchor":"eduoj","orgname":"EduOJ"},{"name":"支持多文件评测","remark":null,"difficulty":"高","mentor":"LEO","contact":"<luyuxuanleo+eduoj@gmail.com>","uniont":null,"student_count":0,"description":"现在OJ的前端编辑器和后端/评测机均只支持单文件评测。对于C++工程（如要求学生自己实现Vector/List/Map）只能粘贴到同一个文件中，对于Java工程的评测也不方便。请你设计/实现多文件（项目）评测支持。","label":"210110275","link":"","tech_tag":["Go","NodeJS","Storage","Vue"],"domain_tag":["Programming Language"],"oR":["实现多文件提交/评测","给出C++/Java的评测脚本","后续可拓展别的语言"],"tR":["DIFF的代码测试覆盖率70%以上","命名/文档/注释复合社区规范"],"orgID":162,"spl":1,"organchor":"eduoj","orgname":"EduOJ"},{"name":"完善题目讨论区 / 题目Tag / 题目赞、踩 系统","remark":null,"difficulty":"高","mentor":"LEO","contact":"<luyuxuanleo+eduoj@gmail.com>","uniont":null,"student_count":0,"description":"现在同学在题目列表能看到有关题目的信息只有名称。需要实现一个题目标签（如选择结构/分支结构/循环结构/递归等语言结构，链表/顺序表等算法结构）系统，并可高效的按照标签查找题目（如查找有链表、图论的题目）。    需要实现一个题目讨论区。可以在讨论区内发言，用#id的方式来提到另一道题目，用@username的方式来@用户。可以评论讨论区内的讨论。可选支持任意级评论。    需要实现一个题目/讨论区的赞/踩功能，可参考github的issue里评论赞/火箭等emoji的实现方式。","label":"210110278","link":"","tech_tag":["Go","JavaScript","PHP"],"domain_tag":["Cloud Native","Web","Programming Language"],"oR":["实现题目tag系统","实现题目讨论区系统","实现题目赞/踩系统"],"tR":["DIFF的代码测试覆盖率70%以上","命名/文档/注释复合社区规范"],"orgID":162,"spl":1,"organchor":"eduoj","orgname":"EduOJ"}]},{"userId":169,"anchor":"bjlkjxgs","video":"","img":"oneflow.jpg","title":"OneFlow","project_url":"","url":"https://www.oneflow.org","description":"OneFlow 是一个专注性能的深度学习框架","full_des":"OneFlow 是一个专注性能的深度学习框架，期待对分布式机器学习有兴趣的开发者加入，共同将 OneFlow 打造成世界一流的 AI 基础设施。","tech_tag":["ML","distributed"],"domain_tag":["深度学习"],"mail_list":"https://github.com/Oneflow-Inc/oneflow/issues","email":"contact@oneflow.org","project_list":[{"name":"将 OneFlow 中的 CommNet 模块抽取为独立工程","remark":null,"difficulty":"中","mentor":"李新奇","contact":"<lixinqi@oneflow.org>","uniont":null,"student_count":0,"description":"CommNet 模块是 OneFlow 的底层通信模块。用于分布式训练时节点与节点之间的通信。  CommNet 采用了多种设计模式及优化技巧保证其底层协议的可扩展性及传输的高效性。CommNet 是纯异步且对深度学习最友好的高效网络传输模块。目前底层支持 RDMA 或者 epoll 方式，并且可以很方便地扩展底层通信方式。  由于 CommNet 模块易扩展、性能高效、协议简单等特性，不少项目希望将 CommNet 嵌入进自己的系统中用于网络通信。  在这个项目中，我们将从 OneFlow 中把 CommNet 抽取出来，作为一个独立工程，贡献给开源社区。","label":"210130121","link":"","tech_tag":["C++","Git"],"domain_tag":["OS","Distributed System"],"oR":["将CommNet独立为工程，附带能正常构建的CMake文件","CommNet 的接口文档"],"tR":["一定的 C++ 代码阅读能力","对 CMake、Makefile 有一定了解","能在导师的指导下学习和理解项目中涉及的常见的设计模式"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"},{"name":"实现 einsum 算子","remark":"","difficulty":"高","mentor":"蔡晟航","contact":"<caishenghang@oneflow.org>","uniont":"梁德澎<liangdepeng@oneflow.org>","student_count":0,"description":"einsum 是一个强大又有趣的算子。OneFlow 目前还没有这个算子。如果尝试在 OneFlow 中添加这个算子，你不仅可以熟悉 OneFlow 的 Python 前端如何与 C++ 后端交互、掌握 CUDA 编程、深入体会 OneFlow 发明的 SBP 等概念如何在分布式训练中大显神威，还可以了解词法、语法分析等与编译有关的知识并立即应用在这个项目中。","label":"210130122","link":"","tech_tag":["C++"],"domain_tag":["AI","Distributed System"],"oR":["einsum 算子的 Python 前端","einsum 算子的 CUDA Kernel","einsum 算子的 CPU Kernel","einsum 的接口文档","einsum 的 Op 代码","einsum 所需要的简单语法解析器"],"tR":["熟练掌握 Python","熟练掌握 C++","能够在导师的指导下学习编译原理相关知识并实现相关的词法、语法分析等功能","能在导师的指导下学习CUDA编程并实现 CUDA Kernel","对计算优化和高性能计算库有一定了解或有兴趣了解"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"},{"name":"为 OneFlow 部署 实现 C/C++  API","remark":null,"difficulty":"中","mentor":"张文骁","contact":"<zhangwenxiao@oneflow.org>","uniont":null,"student_count":0,"description":"收集数据、标注数据、搭建模型、进行训练、调参……直到得到一个精度不错的模型。所有这些工作，可能还只完成了工业落地的一半工作不到。训练好的模型需要部署上线，才能为业务逻辑提供底层支撑。  设计和开发部署框架时，需要考虑模型压缩、多平台支持、指定平台优化、高吞吐和低延迟……涉及的技术广度和深度都非常有趣。  OneFlow 已经有自己的部署模块，可以较为方便地部署已经训练好的模型。但是，目前 OneFlow 的部署还依赖 Python 解释器，在部署性能上还有提升空间。  这个项目中，你将在导师的指导下，基本要求是去掉 OneFlow 部署模块对 Python 的依赖，实现部署的 C/C++ 接口；在此基础上还有不少易用性、性能提升的工作，也非常值得尝试。","label":"210130133","link":"","tech_tag":["C","C++"],"domain_tag":["AI","Web"],"oR":["在导师指导下，去掉部署模块对 Python 解释器的依赖","相关 API 接口的技术文档"],"tR":["了解部署的流程，熟悉常见的部署框架的操作流程","具有 C/C++ 开发能力","了解常见的网络协议，接触过网络编程"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"},{"name":"为 OneFlow XRT 后端提供 TVM 支持","remark":null,"difficulty":"高","mentor":"陈后江","contact":"<chenhoujiang@oneflow.org>","uniont":null,"student_count":0,"description":"OneFlow XRT 是 OneFlow 的一个子模块，用于适配张量编译器。通过 OneFlow XRT，我们可以将其它张量编译器的优化能力无缝地浅入到 OneFlow 运行时中。目前，OneFlow XRT 后端已经支持 XLA 与 TensorRT。  TVM 作为颇有影响力的机器学习编译框架，将其纳入 OneFlow XRT 的后端当然也是 OneFlow 的计划之一。","label":"210130140","link":"","tech_tag":["C","C++"],"domain_tag":["Programming Language"],"oR":["为 OneFlow XRT 提供 TVM 后端支持","相关的技术文档"],"tR":["熟悉深度学习编译技术及其相关的优化技术","熟练掌握 C/C++","熟悉常见的设计模式，能够在导师的指导下掌握 OneFlow XRT 的设计理念及代码及代码结构"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"},{"name":"为 OneFlow 添加新的前端语言","remark":null,"difficulty":"中","mentor":"蔡晟航","contact":"<caishenghang@oneflow.org>","uniont":null,"student_count":0,"description":"因为各种机缘巧合和历史的必然，Python 成为了现在事实意义上的“人工智能编程语言”，OneFlow 也把 Python 作为了用户接口语言。  然而事实上，Python 只是 OneFlow 的前端，复杂的计算和并行功能代码，还是通过 C/C++ 实现的，OneFlow 良好的解耦设计，使得我们可以较容易的支持 Python 作为用户接口，自然也可以支持更多的语言作为用户接口。  不管是 Javascript、Swift、Ruby…… 只要你感兴趣，都可以加入这个项目，尝试在 OneFlow 的用户侧支持它。","label":"210130141","link":"","tech_tag":["C","C++"],"domain_tag":["OS","Programming Language"],"oR":["为 OneFlow 新增一种脚本语言支持","对应语言接口的 API 文档规范、准则"],"tR":["了解常见脚本语言与 Native 代码的交互机制","熟练掌握想移植的前端语言","掌握 C/C++","了解动态链接、多线程锁等技术或者有兴趣在导师指导下学习掌握"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"},{"name":"自动并行中的算力代价建模","remark":null,"difficulty":"高","mentor":"李一鹏","contact":"<liyipeng@oneflow.org>","uniont":null,"student_count":0,"description":"数据并行、模型并行、流水并行、混合并行……随着分布式训练中并行方式越来越复杂，由框架自动寻找较好的并行策略（寻找全局最好的策略是NP难度的问题），即自动并行技术，成为了研究热点。  OneFlow 中的自动并行技术中所使用的代价模型主要有两类：基于传输代价的，和基于算力代价的。  在这个项目中，你需要在导师的指导下，为某些算子的算力代价建模，并实现相关的代价函数。相关问题在工业界和学界都是新兴的，适合勇于探索的同学。","label":"210130143","link":"","tech_tag":["C","C++"],"domain_tag":["Distributed System"],"oR":["实现基于算力代价的评估函数","在导师的指导下，相关研究结果整理为文档（根据产出质量，可考虑发论文或申请专利）"],"tR":["扎实的数理基础","了解或熟悉 C/C++ 开发"],"orgID":169,"spl":1,"organchor":"bjlkjxgs","orgname":"OneFlow"}]},{"userId":161,"anchor":"postgresql","slide":"","video":"","img":"postgresql.jpg","title":"中国开源软件推进联盟PostgreSQL分会","project_url":"https://www.pgfans.cn/a-detail?id=41","url":"https://www.postgresqlchina.com/","description":"构建PostgreSQL技术生态，推动PostgreSQL产学研用发展","full_des":"PostgreSQL是世界排名第一的的开源关系型数据库，采用BSD开源协议。PostgreSQL是学术性开源技术，上世纪80年代由加州大学伯克利分校Michael Stonebraker（图灵奖获得者）创造的Postgres软件包发展而来，多年来保持稳定迭代。PostgreSQL主体不受任何国家、机构、企业及商业组织控制与主导，发展与管理全部由PostgreSQL国际开源社区掌握。中国开源软件推进联盟PostgreSQL分会作为国内唯一的具有独立法人主体的PostgreSQL行业协会组织，承担着构建PostgreSQL产业生态，推动PostgreSQL产学研用发展的责任。","tech_tag":["C","Database"],"domain_tag":["Database Management System"],"mail_list":"partner@postgresqlchina.com","email":"partner@postgresqlchina.com","project_list":[{"name":"Oracle数据库到PostgreSQL数据库迁移转换持续集成","remark":null,"difficulty":"中","mentor":"彭冲","contact":"<pcsuccess@sina.com>","uniont":null,"student_count":0,"description":"Oracle数据库里结构对象迁移到PostgreSQL，数据库对象包括表、视图、同义词、物化视图、函数、存储过程、包及包体等","label":"210240086","link":"","tech_tag":["Java","Database","Docker"],"domain_tag":["Dev Tools"],"oR":["结合现有开源工具如pgloader、ora2pg等进行部分迁移转化工作","使用程序实现不兼容性的迁移转化工作"],"tR":["Java、shell、SQL或js、Web前端等"],"orgID":161,"spl":1,"organchor":"postgresql","orgname":"中国开源软件推进联盟PostgreSQL分会"},{"name":"PostgreSQL Block Recover","remark":null,"difficulty":"中","mentor":"吕海波","contact":"<ws-bobo@hotmail.com>","uniont":null,"student_count":0,"description":"Block Recover是Oracle备份恢复体系中一项强大的功能，它以备份为基础，利用重做日志和归档日志快速恢复损坏的块。PostgreSQL中一直欠缺此项功能，不得以只能以“Full Pages Write”特性代替，但“Full Pages Write”特性对性能产生了巨大的影响。经测试开启“Full Pages Write”特性后，整体性能、TPS下降20%左右。 本项目目标为PostgreSQL增加和Oracle一样的Block Recover功能，使PG可以关闭“Full Pages Write”特性，从而提升性能和TPS。","label":"210240290","link":"","tech_tag":["C","Database"],"domain_tag":["Big Data"],"oR":["实现Block Recover工具，在PostgreSQL现在备份基础上，利用xlog、归档日志完成损坏块恢复。"],"tR":["C语言","PostgreSQL数据库基础知识"],"orgID":161,"spl":1,"organchor":"postgresql","orgname":"中国开源软件推进联盟PostgreSQL分会"},{"name":"数据库深层性能动态监测","remark":null,"difficulty":"中","mentor":"吕海波","contact":"<ws-bobo@hotmail.com>","uniont":null,"student_count":0,"description":"数据库是底层系统软件之一，因其大并发、海量数据的特性，对性能的要求十分苛刻。CPU本身提供有强大的性能计数功能，可以对指令数量、指令周期、L1 Cache、分支预测、Page Faults等CPU自身和OS内核的行为，做出十分全面的性能监测。本项目使用CPU自身的性能计数功能，利用Linux中ptrace接口，在不修改数据库代码的情况下，对数据库的任意代码段进行动态的、CPU级的深层性能检测，使自研数据库开发者，可以更加清楚数据库代码与CPU的亲和度、以及潜在的性能缓慢问题的方向，为提升国产自研数据库的性能，提供更为具体的目标与方向。","label":"210240291","link":"","tech_tag":["C","Database"],"domain_tag":["Linux Kernel","OS","Big Data","Tracing"],"oR":["实现动态深层性能监测工具，对某一地址到另一地址间的代码，做CPU级的性能统计，得到IPC（每周期指令数）、L1 Cache命中率、总线访问次数、分枝预测命中率等深层次、CPU级的性能指标。"],"tR":["C语言","OS","数据库基本操作","gdb调式器"],"orgID":161,"spl":1,"organchor":"postgresql","orgname":"中国开源软件推进联盟PostgreSQL分会"}]},{"userId":277,"anchor":"milvus","slide":"","video":"","img":"milvus.jpg","title":"Milvus","project_url":"","url":"https://www.milvus.io/","description":"Milvus 是一款开源的特征向量相似度搜索引擎","full_des":"Milvus 是一款开源的特征向量相似度搜索引擎，具有使用方便、实用可靠、易于扩展、稳定高效和搜索迅速等特点。Milvus 已经被广泛应用于多个领域，其中包括图像处理、机器视觉、自然语言处理、语音识别、推荐系统以及新药发现等。","tech_tag":["深度学习 ","计算机视觉","NLP","语音识别","向量数据库"],"domain_tag":["非结构化数据处理"],"mail_list":"https://lists.lfaidata.foundation/g/milvus-technical-discuss","email":"community@zilliz.com","project_list":[{"name":"向量索引参数自动调优工具||Auto tuner for vector indexing parameters ","remark":null,"difficulty":"中","mentor":"李盛俊","contact":"<shengjun.li@zilliz.com>","uniont":"李成明<chengming.li@zilliz.com>","student_count":0,"description":"Milvus 是世界上最受欢迎的向量数据库，可以在不到一秒钟的时间内执行十亿规模的近似搜索。为了加快对大型数据集的查询，向量索引起着重要作用。因此，Milvus 为用户提供了多种向量索引类型供用户针对自己的特定场景做选择，并且每种索引类型都有不同的索引参数。但是对于许多用户而言，要完全了解所有索引参数和功能确也常常是一项挑战，因此反而无法选择最优参数。    本项目的目标就是创建一个调优工具，可以帮助用户自动生成查询参数以提高性能。||Milvus is the world's most popular vector database which can perform billion-scale similarity search in less than a second. To accelerate time-consuming queries on large datasets, vector indexing plays a major role. Therefore, Milvus provides users with multiple vector index types, and each index type has different index parameters.However, for many users, it is challenging to fully understand all the index parameters and functions so that optimal parameters are often not chosen.   The goal for this project is to create a tuning tool that can help users automatically generate query parameters for better performance.    ","label":"210310187","link":"","tech_tag":["Python","C++","Database"],"domain_tag":["AI","Big Data"],"oR":["向量索引参数自动调优工具||An auto tuner for vector indexing parameters","An auto tuner for vector indexing parameters","使用文档||Documentation","Documentation","使用教程||Tutorial(s)","Tutorial(s)"],"tR":["熟悉 Linux 开发环境||Familiar with Linux development environment","Familiar with Linux development environment","熟悉 C++ 或 Python||Proficient in C++ or Python","Proficient in C++ or Python"],"orgID":277,"spl":0,"organchor":"milvus","orgname":"Milvus"},{"name":"为Milvus增加新的向量索引-局部敏感哈希（LSH）||Adding new index: Locality-Sensitive Hashing (LSH) to Milvus","remark":null,"difficulty":"中","mentor":"程倩雅","contact":"<qianya.cheng@zilliz.com>","uniont":"李盛俊<shengjun.li@zilliz.com>","student_count":0,"description":"局部敏感哈希（LSH）是一种针对海量高维数据的快速最近邻查找算法。如果使用线性查找，那么对于低维数据效率尚可，而对于高维数据，就显得非常耗时了。为了解决这样的问题，人们设计了一种特殊的 hash 函数，使得 2 个相似度很高的数据以较高的概率映射成同一个 hash 值，而令 2 个相似度很低的数据以极低的概率映射成同一个 hash 值。    许多用户反应希望能在 Milvus 底层的近邻算法中增加一个 LSH 索引的选项，因此这个项目就是为 Milvus 增加 LSH 算法让用户能在适合他们的场景下使用。||In the world of big data, the task of finding nearest neighbors is very common. Although using brute force to check for all possible combinations will give you the exact nearest neighbor but it’s not scalable at all.     Locality sensitive hashing (LSH) is one such algorithm that makes search faster and scalable. LSH refers to a family of functions to hash data points into buckets so that data points *near each other are located in the same buckets with high probability*, while data points *far from each other are likely to be in different buckets*. This makes it easier to identify observations with various degrees of similarity.    This project is to add LSH algorithm to Milvus so users can have this option when it fits their scenarios.    ","label":"210310188","link":"","tech_tag":["AI","C++","Database","NLP"],"domain_tag":["AI","Cloud Native","Big Data"],"oR":["Milvus 新增LSH索引||Milvus supports a new index type: LSH","Milvus supports a new index type: LSH","性能测试报告||A performance report","A performance report"],"tR":["熟悉 Linux 开发环境||Familiar with Linux development environment","Familiar with Linux development environment","熟悉 C++||Proficient in C++","Proficient in C++","能设计和实现并行计算||Capable of designing and implementing parallel computing","Capable of designing and implementing parallel computing"],"orgID":277,"spl":0,"organchor":"milvus","orgname":"Milvus"},{"name":"新增 Kendall tau 距离的支持 ||Adding Kendall tau distance to Milvus ","remark":"","difficulty":"高","mentor":"李成明","contact":"<chengming.li@zilliz.com>","uniont":"李盛俊<shengjun.li@zilliz.com>","student_count":0,"description":"Kendall tau 距离主要是一个用来比较两个向量之间相似度的概念。在一些数据分析和搜索引擎的结果相似度ranking 里会有很多的应用。    本项目的目标就是为 Milvus 新增 Kendall tau 距离的支持||The Kendall tau distance is a metric that counts the number of pairwise disagreements between two ranking lists. The larger the distance, the more dissimilar the two lists are. It has been used in data analysis and search engine results similarity ranking.    The goal of this project is to add Kendall tau distance to Milvus.    ","label":"210310189","link":"","tech_tag":["Linux","Cloud Native","C++","Database","NLP"],"domain_tag":["AI","Big Data"],"oR":["新增 Milvus 对 Kendall tau 距离的支持||Adding Kendall tau distance to Milvus","Adding Kendall tau distance to Milvus","性能测试报告||A performance report","A performance report"],"tR":["熟悉 Linux 开发环境||Familiar with Linux development environment","Familiar with Linux development environment","熟悉 C++||Proficient in C++","Proficient in C++","能设计和实现并行计算||Capable of designing and implementing parallel computing","Capable of designing and implementing parallel computing"],"orgID":277,"spl":0,"organchor":"milvus","orgname":"Milvus"}]},{"userId":153,"anchor":"volcano","slide":"","video":"","img":"volcano.jpg","title":"Volcano","project_url":"","url":"https://volcano.sh/zh/","description":"Volcano是业界首个云原生高性能批量计算项目，旨在面向AI、大数据、科学计算、渲染等高性能计算场景提供丰富的调度策略、主流北向计算框架和多元南向算力支持。","full_des":"Volcano是基于Kubernetes的云原生批量计算引擎，它补齐了Kubernetes在面向AI、大数据、高性能计算等批量计算任务调度、编排等场景下的短板，向下支持鲲鹏、昇腾、X86等多元算力，向上使能TensorFlow、Spark、华为MindSpore等主流行业计算框架，让数据科学家和算法工程师充分享受到云原生技术所带来的高效计算与极致体验。Volcano于2019年6月开源，2020年4月正式成为CNCF首个高性能批量计算项目。截止目前，Volcano社区已聚集了开发者180+、收获star 1.6K+，已知用户30+，生态伙伴来自华为、百度、腾讯、滴滴、京东、AWS、爱奇艺、小红书、建信金融科技、BOSS直聘、趣头条、中科类脑、锐天投资等多家行业TOP企业。","tech_tag":["Go","Cloud Native","Container","AI","Distributed System","Kubernetes"],"domain_tag":["AI","Cloud Native","Big Data","Container","Scheduling"],"mail_list":"https://groups.google.com/forum/#!forum/volcano-sh","email":"volcano.sh.bot@gmail.com","project_list":[{"name":"Volcano Technical Documents Supplyment And Update","remark":null,"difficulty":"高","mentor":"吴雷","contact":"<13164644535@163.com>","uniont":"王雷博<wangleibo1@huawei.com>","student_count":0,"description":"In order to make Volcano easy to use and understand, you task is to improve reading materials. The details are as follows:  1. Supplementary examples about how to use Volcano for all northbound computing frameworks. Cases can be referred to are under volcano-sh/volcano/examples.  2. Supplementary examples about how to use Volcano for all southward heterogeneous devices. Current case is only for GPU.  3. Make introductions for all Actions and Plugins both in Chinese and English, including how it works and best practices.  4. Make instructions about SDK for developers both in Chinese and English. Follow your steps they can write custom Actions and Plugins.  5. Update Volcano official docs to date both in Chinese and English.","label":"210380240","link":"","tech_tag":["Go","Cloud Native","Container","AI","Kubernetes","Docker"],"domain_tag":["AI","Cloud Native","Big Data","Container"],"oR":["complete examples about how to run northbound computing frameworks with Volcano","complete examples about how to make use of southward heterogeneous devices","introdcutions about Actions and Plugins","SDK for developers","bug fixes on existing documents"],"tR":["Golang","Kubernetes","Docker","scheduling algorithm","AI/Big Data","English and Chinese writting"],"orgID":153,"spl":2,"organchor":"volcano","orgname":"Volcano"},{"name":"Support Specify GPU Number for Pod Resource Request","remark":null,"difficulty":"高","mentor":"王雷博","contact":"<wangleibo1@huawei.com>","uniont":"吴雷<13164644535@163.com>","student_count":0,"description":"Currently, Volcano only support specified GPU share memory. Specified GPU number is not supported. Your task is to support 'volcano.sh/gpu-number' just like nvidia gpu plugin to support specify GPU number for pod resource request. You can refer to https://github.com/volcano-sh/volcano/blob/master/docs/user-guide/how_to_use_gpu_sharing.md for more details.","label":"210380242","link":"","tech_tag":["Go","Cloud Native","Container","AI","Kubernetes"],"domain_tag":["AI","Cloud Native","Container"],"oR":["design document","source code","UT","E2E"],"tR":["Golang","Kubernetes","Docker","scheduling algorithm","AI/Big Data"],"orgID":153,"spl":2,"organchor":"volcano","orgname":"Volcano"},{"name":"Support Hot Update about Configuration such as Daemon Log Level","remark":null,"difficulty":"高","mentor":"王雷博","contact":"<wangleibo1@huawei.com>","uniont":"吴雷<13164644535@163.com>","student_count":0,"description":"Currently, users should specify some configurations such as log level in container start command. This is not convenience for issue debug, because change the the log level will case daemon restart. You task is to provide a design and implementation to resolve it.","label":"210380243","link":"","tech_tag":["Go","Cloud Native","Container","Kubernetes"],"domain_tag":["Cloud Native","Container"],"oR":["design document","source code","UT","E2E"],"tR":["Golang","Kubernetes","Docker"],"orgID":153,"spl":2,"organchor":"volcano","orgname":"Volcano"}]},{"userId":366,"anchor":"apacheecharts","slide":"","video":"","img":"echarts.jpg","title":"Apache ECharts","project_url":"","url":"https://echarts.apache.org/","description":"Apache ECharts 是一个使用 JavaScript 实现的开源可视化库。","full_des":"Apache ECharts 是一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器，提供直观，交互丰富，可高度个性化定制的数据可视化图表。","tech_tag":["Dataviz","Canvas","SVG","TypeScript"],"domain_tag":["可视化"],"mail_list":"dev@echarts.apache.org","email":"dev@echarts.apache.org","project_list":[]},{"userId":320,"anchor":"apachecarbondata","slide":"","video":"","img":"apachecarbondata.jpg","title":"Apache CarbonData","project_url":"https://github.com/apache/carbondata","url":"http://carbondata.apache.org/","description":"CarbonData是一个大数据开源项目，2017年正式成为ASF开源顶级项目。","full_des":"CarbonData是一种新的高性能数据存储格式，已在20+企业生产环境上部署和使应用，企业数据规模达到万亿。针对当前大数据领域分析场景需求各异而导致的存储冗余问题，业务驱动下的数据分析灵活性要求越来越高，CarbonData提供了一种新的融合数据存储方案，以一份数据同时支持多种应用场景，并通过多级索引、字典编码、预聚合、动态Partition、准实时数据查询、列存等特性提升了IO扫描和计算性能，实现百亿数据级秒级响应。","tech_tag":["big-data","data-store"],"domain_tag":["大数据","数据存储","数据格式"],"mail_list":"dev@carbondata.apache.org","email":"chenliang613@apache.org (PMC Chair's mail) 或者发邮件给dev@carbondata.apache.org","project_list":[{"name":"华为首个大数据开源项目||Apache CarbonData ","remark":null,"difficulty":"中","mentor":"陈亮","contact":"<chenliang6136@gmail.com>","uniont":"蔡强<qiangcai@apache.org>","student_count":0,"description":"CarbonData是一个大数据开源项目，2017年正式成为ASF开源顶级项目。    CarbonData是一种新的高性能数据存储格式，已在20+企业生产环境上部署和使应用，企业数据规模达到万亿。针对当前大数据领域分析场景需求各异而导致的存储冗余问题，业务驱动下的数据分析灵活性要求越来越高，CarbonData提供了一种新的融合数据存储方案，以一份数据同时支持多种应用场景，并通过多级索引、字典编码、预聚合、动态Partition、准实时数据查询、列存等特性提升了IO扫描和计算性能，实现百亿数据级秒级响应。||CarbonData is a big data open source project, which officially became the top level project of ASF in 2017.    CarbonData is a new high-performance data format that has been deployed and applied in 20+ enterprise production environments, and the scale of enterprise data has reached trillions. In response to the storage redundancy problem caused by the different analysis scenarios in the current big data field, the business-driven data analysis flexibility requirements are getting higher and higher. CarbonData provides a new converged data storage solution that supports at the same time with one piece of data. A variety of application scenarios, and through multi-level indexing, dictionary encoding, pre-aggregation, dynamic partition, real-time data query, column storage and other features to improve IO scanning and computing performance, to achieve tens of billions of data-level second-level response.    ","label":"210410205","link":"","tech_tag":["Java","Database","Git","scala"],"domain_tag":["Big Data"],"oR":["社区模块开发贡献||","社区文档开发贡献||","测试用例贡献||","技术博客贡献||"],"tR":["Spark","Hadoop","Scala","Java"],"orgID":320,"spl":0,"organchor":"apachecarbondata","orgname":"Apache CarbonData"}]},{"userId":158,"anchor":"dubbogo","slide":"","video":"","img":"dubbo.jpg","title":" Apache Dubbo-go","project_url":"","url":"https://github.com/apache/dubbo-go","description":"Dubbo-go 架起 Dubbo 和 go 之间的桥梁，带领Java生态享受云原生时代的技术红利。 ","full_des":"Apache Dubbo Go 语言实现，架起java和go之间的桥梁，与 gRPC/Spring Cloud 生态互联互通，带领Java生态享受云原生时代的技术红利。","tech_tag":["分布式","Go","微服务"],"domain_tag":["微服务治理","云原生"],"mail_list":"dev@dubbo.apache.org","email":"dev@dubbo.apache.org","project_list":[{"name":"多注册中心支持的应用级服务发现","remark":null,"difficulty":"高","mentor":"邹毅贤","contact":"<yixian.zou@gmail.com>","uniont":null,"student_count":0,"description":"多注册中心支持的应用级服务发现（元数据上报，服务自省remote模式）  目前只支持zk。还需要支持nacos、etcd等。","label":"210430216","link":"","tech_tag":["Go","Micro Service"],"domain_tag":["Cloud Native","Distributed System","Web","Programming Language"],"oR":["多注册中心支持 nacos","多注册中心支持 etcd"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"Dubbo-go 支持柔性服务","remark":null,"difficulty":"高","mentor":"邹毅贤","contact":"<yixian.zou@gmail.com>","uniont":null,"student_count":0,"description":"Dubbo-go 3.0 需要支持动态容量评估和流量控制、自适应负载均衡（反压）","label":"210430217","link":"","tech_tag":["Go","Micro Service"],"domain_tag":["Cloud Native","Distributed System","Web","Programming Language"],"oR":["动态容量评估","流量控制","自适应负载均衡"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"Dubbo-go CI 中使用 dubbo-go-samples 进行测试","remark":null,"difficulty":"中","mentor":"邹毅贤","contact":"<yixian.zou@gmail.com>","uniont":null,"student_count":0,"description":"在 Dubbo-go 执行 CI 时，包括提交 commit 与提交 PR 时，需要使用 dubbo-go-samples （https://github.com/apache/dubbo-go-samples）执行集成测试","label":"210430218","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["提交 commit 时，使用 dubbo-go-samples （https://github.com/apache/dubbo-go-samples）执行集成测试","提交 PR 时，使用 dubbo-go-samples （https://github.com/apache/dubbo-go-samples）执行集成测试"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"Dubbo-go 配置精简","remark":null,"difficulty":"低","mentor":"冯振宇","contact":"<williamfeng323@hotmail.com>","uniont":null,"student_count":0,"description":"将 Dubbo-go 配置区分成必须配置与非必须配置，非必须配置不需用户配置并在程序中自动设置默认值。","label":"210430219","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["非必须配置不需用户配置","非必须配置在程序中自动设置默认值"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"pixiu：admin 控制台，管理proxy的可视化界面","remark":null,"difficulty":"高","mentor":"张训","contact":"<xiaoliu@apache.org>","uniont":null,"student_count":0,"description":"pixiu（https://github.com/apache/dubbo-go-pixiu）新增 admin 控制台，用于管理proxy的可视化界面，支持登陆、用户管理、插件管理、服务配置、API key管理、接口权限管理(appKey授权, 接口权限, 上下线)。","label":"210430220","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["登陆","用户管理","接口权限管理","插件管理","服务管理","API key管理"],"tR":["golang","nodejs"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"pixiu：支持鉴权插件","remark":"","difficulty":"低","mentor":"张训","contact":"<xiaoliu@apache.org>","uniont":null,"student_count":0,"description":"pixiu（https://github.com/apache/dubbo-go-pixiu）支持鉴权插件。必要要求如下：  1.鉴权组件可插拔（可选组件形式）  2.支持至少一种基础的鉴权算法。包括但不限于以下算法：固定密钥、根据时间戳动态生成密钥等算法。","label":"210430222","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["支持鉴权插件","鉴权组件可插拔（可选组件形式）","支持至少一种基础的鉴权算法"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"pixiu：从元数据中心获取服务信息自动生成网关","remark":null,"difficulty":"中","mentor":"冯振宇","contact":"<williamfeng323@hotmail.com>","uniont":null,"student_count":0,"description":"pixiu（https://github.com/apache/dubbo-go-pixiu）支持从元数据中心获取服务信息自动生成网关","label":"210430223","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["支持从元数据中心获取服务信息自动生成网关"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"},{"name":"pixiu：配置精简","remark":null,"difficulty":"低","mentor":"冯振宇","contact":"<williamfeng323@hotmail.com>","uniont":null,"student_count":0,"description":"pixiu（https://github.com/apache/dubbo-go-pixiu），将 pixiu 配置区分成必须配置与非必须配置，非必须配置不需用户配置并在程序中自动设置默认值。","label":"210430224","link":"","tech_tag":["Go","Distributed System","Micro Service"],"domain_tag":["Distributed System","Web","Programming Language"],"oR":["非必须配置不需用户配置","非必须配置在程序中自动设置默认值"],"tR":["golang"],"orgID":158,"spl":1,"organchor":"dubbogo","orgname":" Apache Dubbo-go"}]},{"userId":276,"anchor":"tdengine","slide":"","video":"","img":"tdengine.jpg","title":"TDengine","project_url":"","url":"https://www.taosdata.com/","description":"TDengine是涛思数据专为物联网、车联网、工业互联网、IT运维等设计和优化的大数据平台。||TDengine is an open-source big data platform designed and optimized for Internet of Things (IoT), Connected Vehicles, and Industrial IoT.","full_des":"北京涛思数据科技有限公司(TAOS Data) 瞄准日益增长的物联网数据市场，专注时序空间大数据的存储、查询、分析和计算。不依赖任何开源或第三方软件，开发了拥有自主知识产权、自主可控的高性能、可伸缩、高可靠、零管理的物联网大数据平台TDengine，可广泛运用于物联网、车联网、工业互联网、IT运维等领域。公司已经申请多项技术发明专利，且全部提交PCT专利申请。涛思数据采用AGPL许可证，已经将TDengine的内核(存储和计算引擎)以及社区版100%开源。涛思数据将尽最大努力打造开发者社区，维护这个开源的商业模式，相信不将最核心的代码开源，任何软件都将无法赢得市场。涛思数据希望通过开源，快速获得市场反馈，完善产品，完善生态，而且吸引更多的开发者加入到这个项目中。||To address the technology challenges in the exponential growth of connected devices, TAOS Data is aimed at building a big data platform for Internet of Things (IoT). With a deep understanding of data characteristics of the IoT, TAOS Data has designed an innovative way to collect, store, compute, and analyze time-series data. Its flagship product, TDengine, outperforms other time-series databases by at least 10 times in terms of insert/query performance.TDengine’s kernel (storage and computing engine) and community edition are 100% open-sourced under the AGPL license. TAOS Data is fully committed to maintaining this open development model and believes that no software will win the market unless its core functionalities are fully open.","tech_tag":["分布式计算","大数据处理","高性能存储","流式计算"],"domain_tag":["物联网","大数据","IT运维","工业互联网","车联网"],"mail_list":"tdengine@taosdata.com; support@taosdata.com; xtzang@taosdata.com; sdsang@taosdata.com","email":"tdengine@taosdata.com","project_list":[]},{"userId":166,"anchor":"youqilin","slide":"","video":"","img":"youqilin.jpg","title":"优麒麟社区","project_url":"","url":"https://www.ubuntukylin.com","description":"优麒麟是 Ubuntu 的官方衍生发行版本之一。 ","full_des":"优麒麟（Ubuntu Kylin）是由中国 CCN（由CSIP、Canonical、NUDT三方联合组建）开源创新联合实验室与麒麟软件有限公司主导开发的全球开源项目，其宗旨是通过研发用户友好的桌面环境以及特定需求的应用软件，为全球 Linux 桌面用户带来非凡的全新体验！优麒麟开源操作系统自2013年创建至今，已累计发行16个版本，下载量超过3200万次，向开源社区贡献代码数百万行，被 Linux、Debian、Ubuntu、OpenStack、Ceph等国际开源社区接收的 patch 超过 7000 个，在全球范围内拥有数十万活跃用户。","tech_tag":["Linux","Desktop Environment","桌面环境"],"domain_tag":["Linux Native 应用","Linux 桌面环境"],"mail_list":"ubuntukylin-members@lists.launchpad.net","email":"contact@ubuntukylin.com","project_list":[{"name":"Peony 文件管理器预览特性的实现||Implementation of the Peony File Manager preview feature","remark":"","difficulty":"中","mentor":"兰悦","contact":"<lanyue@kylinos.cn>","uniont":null,"student_count":0,"description":"UKUI 文件管理器，即 Peony（https://github.com/ukui/peony）是围绕qt和gio构建的开源项目。除此之外，它提供了一组扩展接口，用于实现诸如菜单、文件视图、属性窗口以及预览窗格等UI部件的功能扩展（https://github.com/ukui/peony-extensions）。     本课题的主旨是实现一个关于 Peony 的预览窗格插件项目，使 Peony 能够实现常用文件在右侧预览窗格中展示其内容，并且对于部分格式(PDF、图片等)文件提供简易编辑的功能。||Peony, aka UKUI File Manager(Homepage: https://github.com/ukui/peony) is an open source project built around Qt5 and GIO.  In addition, it provides a set of extension interfaces for implementing functional extensions to UI components such as context menus, file views, property windows, and preview panes. You can visit all extensions on https://github. com/ukui/peony-extensions.     The purpose of this project is to implement a preview panel extension for Peony, so that Peony can support preview content of the most file types in the right preview panel, and for some formats(PDF, images, etc.) to provide simple editing features.    ","label":"210120164","link":"","tech_tag":["Linux","C++","GIO"," Qt",""],"domain_tag":["File Exxplorer"," Image"," Audio"," Video"," Document"],"oR":["实现预览窗格的插件，并且在 Peony 中被正确加载与显示","实现视频的预览/播放功能","实现图片的预览和编辑功能","实现 office 文件的预览功能","实现 PDF 的预览和标注功能","实现音频的预览/播放功能"],"tR":["掌握 Qt 以及其插件机制","开源 office 文档解决方案的选型与使用（libreoffice、pandoc等）","Qt Image 框架/开源图像库的选型与使用（OpenCV等）","开源音视频框架的选型与使用（gstreamer、ffmpeg等）","开源 PDF 解决方案的选型与使用（PDF.js、okular等）"],"orgID":166,"spl":0,"organchor":"youqilin","orgname":"优麒麟社区"},{"name":"ukui-search 聚合搜索插件||Search services cluster of the UKUI Search","remark":"","difficulty":"中","mentor":"张鹏飞","contact":"<zhangpengfei@kylinos.cn>","uniont":null,"student_count":0,"description":"ukui-search （https://github.com/ukui/ukui-search）是ukui桌面环境下的一款全局搜索应用,其前端基于qt实现，目前ukui-search计划基于qt插件机制开发一套插件扩展接口，以实现更多搜索内容的聚合搜索。     本项目的目标在于基于ukui-search的扩展接口，提供一个支持新的搜索内容的扩展插件。可以是在线内容或本地内容或者你想到的任意内容。||ukui-search (https://github.com/ukui/ukui-search) is a global search application for ukui desktop environment, its front-end is based on qt implementation, currently ukui-search plans to develop a set of plugin extension interface based on qt plugin mechanism, in order to achieve more search content aggregation search.     The goal of this project is to provide an extension plugin to support new search content based on the extension interface of ukui-search. It can be online/offline content or any content you can imagine.    ","label":"210120176","link":"","tech_tag":["Linux","C++","Qt"," Web"],"domain_tag":["Search Tool"," Linux Native Application"],"oR":["实现要搜索内容的搜索，预览，以及打开等操作的接口。","插件以单独的.so形式存在，即需要打成单独的deb包。","实现搜索内容的相关度排序。","系统资源占用不能过高。","如果涉及在线内容或需要与第三方应用对接，请注意版权问题。"],"tR":["掌握qt以及其插件机制","掌握qt的model/view结构。"],"orgID":166,"spl":0,"organchor":"youqilin","orgname":"优麒麟社区"},{"name":"优麒麟树莓派版本自动构建工具||Raspberry Pi automatic build tool for Ubuntu Kylin ","remark":null,"difficulty":"低","mentor":"常秉善","contact":"<open@brsvh.org>","uniont":null,"student_count":0,"description":"优麒麟树莓派版本是为树莓派提供定制的发行版本，旧有项目采用 bash 脚本进行构建，现迁往 docker/qemu 工具链进行自动化安装。本项目希望通过 docker/qemu 工具链，为优麒麟树莓派版本的镜像构建提供自动化支持。||Ubuntu Kylin for Raspberry Pi is a custom distribution for Raspberry Pi. The old project was built using bash script, now it is moved to docker/qemu toolchain for automated installation. This project hopes to provide automated support for image building of Ubuntu Kylin for Raspberry Pi through docker/qemu toolchain. ","label":"210120394","link":"","tech_tag":["Docker","Raspberry Pi"],"domain_tag":["Linux Kernel","Container"],"oR":["预构建树莓派 Linux 5.4 内核||Pre-build Kernel 5.4 for Ubuntu Kylin ","预构建树莓派 Linux 5.10 内核||Pre-build Kernel 5.10 for Ubuntu Kylin ","优麒麟树莓派镜像||Ubuntu Kylin Image for Raspberry Pi "],"tR":["docker 基础知识","bash 基础知识"],"orgID":166,"spl":0,"organchor":"youqilin","orgname":"优麒麟社区"}]},{"userId":177,"anchor":"codenameone","slide":"","video":"","img":"codenameone.jpg","title":"Codename One","project_url":"","url":"https://github.com/codenameone/CodenameOne","description":"Codename One is a mobile first cross platform environment for Java and Kotlin developers. It can compile Java bytecode to native OS executables (iOS, Android, UWP etc.). It's a complete mobile platform featuring virtual machines, simulator, design tools (visual theme/builder/css), IDE integrations, ports to multiple OS's and much more. It provides full access to the underlying native OS code (e.g. Objective-C, C#, Dalvik/ART) through a portable abstraction which enables 100% code reuse.","full_des":"Codename One is the only platform that... Has Write Once Run Anywhere support with no special hardware requirements and 100% code reuse Compiles Java or Kotlin into native code for iOS, UWP (Universal Windows Platform), Android and even JavaScript (with seamless PWA and Thread support) Is Easy to use with 100% portable Drag and Drop GUI builder Has Full access to underlying native OS capabilities using the native OS programming language (e.g. Objective-C) without compromising portability Has full control over every pixel on the screen! Just override paint and draw or use a glass pane to draw anywhere... Lets you use native widgets (views) and mix them with Codename One components within the same hierarchy (heavyweight/lightweight mixing) Supports seamless Continuous Integration out of the box","tech_tag":["JVM","Java","Cross Platform","Mobile","JDWP","Accessibility"],"domain_tag":["Mobile","Java","Kotlin","iOS","Android","UWP","WORA","JVM"],"mail_list":"https://groups.google.com/g/codenameone-discussions We plan to launch a slack group for developers as well","email":"","project_list":[{"name":"Port Codename One to Python - Mobile/Desktop development in Python","remark":null,"difficulty":"中","mentor":"Shai Almog","contact":"<shai.almog@codenameone.com>","uniont":"Steve Hannah<steve.hannah@codenameone.com>","student_count":0,"description":"Port the Codename One platform to support development in Python. This should make use of Jython to generate bytecode that can be translated to native. A good starting point would be reading this article: https://www.codenameone.com/blog/how-to-port-jvm-languages-to-codename-one.html","label":"210150384","link":"","tech_tag":["Python","Java","C"],"domain_tag":["Programming Language"],"oR":["Maven project in python that would compile to a Codename One app"],"tR":["Python","JVM internals"],"orgID":177,"spl":2,"organchor":"codenameone","orgname":"Codename One"}]},{"userId":176,"anchor":"sofastack","slide":"","video":"","img":"sofastack.jpg","title":"SOFAStack 社区||SOFAStack Community","project_url":"","url":"https://sofastack.tech/","description":"一套用于快速构建金融级云原生架构的中间件||A collection of middleware components designed to build financial-level distributed architecture","full_des":"SOFAStack™（Scalable Open Financial Architecture Stack）是一套用于快速构建金融级云原生架构的中间件，也是在金融场景里锤炼出来的最佳实践，并且具备以下特点：开放：技术栈全面开源共建、 保持社区中立、兼容社区 兼容开源生态，组件可插拔， SOFAStack 组件与其它开源组件可相互集成或替换;金融级：包含构建金融级云原生架构所需的各个组件，让用户更加专注于业务开发，满足用户场景的现状和未来需求，经历过大规模场景的锤炼，特别是严苛的金融场景;云原生：基于 SOFAStack 可快速搭建云原生微服务体系，快速开发更具可靠性和扩展性、更加易于维护的云原生应用||SOFAStack™（Scalable Open Financial Architecture Stack）is a collection of middleware components designed to build financial-level distributed architecture and is also the best practice fully validated in financial scenarios. It has several features:Open: Buildpack is fully open-source, keeps community neutral and is compatible with community. SOFAStack components are pluggable and compatible with the open-source ecosystem, so they can be integrated or replaced with other open-source components.Financial-grade: Contains the components needed to build a financial-level cloud native architecture, which have been fully tempered in large-scale scenarios, especially harsh financial scenarios, thus enabling developers to focus more on service development and meeting the current and future needs of user scenarios.Cloud Native: Based on SOFAStack, you can quickly build a cloud-native microservice system and develop cloud-native applications that are more reliable, scalable, and easier to maintain.","tech_tag":["Golang","Java","云原生"],"domain_tag":["微服务","中间件"],"mail_list":"sofa@alipay.cloud.com","email":"sofa@alipay.cloud.com","project_list":[{"name":"服务注册中心Sofa-Registry支持jraft-rheakv存储","remark":"","difficulty":"中","mentor":"祝辰","contact":"<zhuchen.zhu@antgroup.com>","uniont":null,"student_count":0,"description":"项目描述：  Sofa-Registry(https://github.com/sofastack/sofa-registry)是蚂蚁集团开源的生产级、高时效、高可用的服务注册中心。  Sofa-Jraft（https://github.com/sofastack/sofa-jraft）是蚂蚁集团开源的基于Raft分布式一致性协议的Java组件，在jraft-core的基础上，实现了一款方便的嵌入式的分布式K-V存储：jraft-rheakv。  Sofa-Registry目前新版本在支持应用级服务发现的基础上，增加了对于数据库的依赖，目前的实现是依赖MySql或Oceanbase等关系型数据库组件。但是对于一部分开源用户来说，希望通过单独Jar包的形式启动Sofa-Registry。  为了满足用户需求，降低Sofa-Registry的外部依赖，我们希望能够在现有的API基础上（代码中已经定义好），扩展一份支持jraft-rheakv的能力，以实现单Jar包无依赖启动的需求。","label":"210170149","link":"","tech_tag":["Java","Cloud Native","Container","Distributed System","Database","Micro Service","Git","Docker"],"domain_tag":["Cloud Native","Distributed System"],"oR":["引入sofa-jraft依赖到项目中，使用jraft-kv实现定义好的接口","为新增功能实现相关单元测试，测试覆盖率不低于80%，且本地断网可跑","提供maven编译方法，可以打包为单独Jar包启动","基于Jar包提供一个docker镜像，可以一键启动"],"tR":["对于Java编程语言熟练，熟悉面向对象的设计","对于微服务体系和服务注册中心有一定了解","熟练掌握Java单元测试"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"},{"name":"SOFATracer support trace data report to jaeger and skywalking","remark":null,"difficulty":"中","mentor":"宋国磊","contact":"<glmapper_2018@163.com>","uniont":null,"student_count":0,"description":"SOFATracer 基于 opentracing 规范，目前社区已完成对 zipkin 的上报支持；本项目需完成将 SOFATracer 产生的埋点数据上报给 jaeger（https://www.jaegertracing.io/）和 skywalking（https://skywalking.apache.org/）","label":"210170197","link":"","tech_tag":["Java","Distributed System"],"domain_tag":["Distributed System","Tracing"],"oR":["jaeger ui 可以完整展示链路情况","skywalking ui 可以展示完整链路情况","不允许丢失 trace 数据","包括 tag/log 等需正常区分展示","压测报告","接入文档"],"tR":["注意编码规范","JDK8"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"},{"name":"SOFADashboard 服务治理能力建设（二次开发）","remark":"","difficulty":"中","mentor":"宋国磊","contact":"<glmapper_2018@163.com>","uniont":null,"student_count":0,"description":"完成 SOFADashboard(https://www.sofastack.tech/projects/sofa-dashboard/overview/) 对于 SOFARegistry(https://www.sofastack.tech/projects/sofa-registry/overview/) 注册服务的管理能力。报名同学需具备的后端+前端技术能力","label":"210170198","link":"","tech_tag":["Java"],"domain_tag":["Web","Programming Language"],"oR":["技术文档","压测报告","服务管控能力生产可用级别（评定由导师组决策）"],"tR":["注意编码规范","JDK8","SpringBoot/SOFABoot","前端技术"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"},{"name":"基于 gRPC 和 Bolt 协议的泛化调用开发","remark":"","difficulty":"中","mentor":"张呈熹","contact":"<chengxi.zcx@alibaba-inc.com>","uniont":null,"student_count":0,"description":"Sofa RPC (https://github.com/sofastack/sofa-rpc/) 是蚂蚁内部的 RPC (Remote Procedure Call) 框架。 泛化调用是 RPC 中的一种常用功能，可以让用户在没有 Facade 代码的情况下调用目标服务。 现在 SofaRPC 的泛化实现是在客户端模拟发出一个正常序列化的请求，服务端没有感知这次调用是否是泛化调用。这种泛化调用的复杂度都集中在客户端，用户在发起泛化调用的时候，编写的代码比较复杂，对于一些网关类型的应用来说也不是很友好。我们计划再开发一种更灵活，编程界面更友好的泛化调用方式。报名的同学会在指导下完成系统分析文档，开发基于 Bolt 协议和 gRPC 协议的泛化调用功能。","label":"210170206","link":"","tech_tag":["Java"],"domain_tag":["Cloud Native"],"oR":["基于 Bolt 的泛化调用设计文档","基于 Bolt 的泛化调用开发测试完成","基于 gRPC 的泛化调用设计文档","基于 gRPC的泛化调用开发测试完成","单测覆盖率达到 80%"],"tR":["熟悉 Java 语言","熟悉面向对象编程"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"},{"name":"Telnet 内置指令支持","remark":"","difficulty":"中","mentor":"张呈熹","contact":"<chengxi.zcx@alibaba-inc.com>","uniont":"宋国磊<glmapper_2018@163.com>","student_count":0,"description":"Sofa RPC (https://github.com/sofastack/sofa-rpc/) 是蚂蚁内部的 RPC (Remote Procedure Call) 框架。在 Sofa RPC 中添加 Telnet 内置指令可以让用户了解到 RPC 运行时数据，提高了框架的可观测性。参与的同学会在指导下完成调研、系统分析、完成 Telnet 内置指令的功能，并在 Sofa Dashboard 中集成前端展示功能。","label":"210170207","link":"","tech_tag":["Java","JavaScript","React","Micro Service"],"domain_tag":["Cloud Native"],"oR":["Telnet 内置指令设计文档","完成 Telnet 内置指令功能开发","Telnet 内置指令单测覆盖率大于 80%"],"tR":["熟悉 Java 语言","熟悉  React 开发","熟悉 Spring 和 Spring MVC"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"},{"name":"Sofa RPC JFR 埋点支持","remark":"","difficulty":"高","mentor":"张呈熹","contact":"<chengxi.zcx@alibaba-inc.com>","uniont":null,"student_count":0,"description":"Sofa RPC (https://github.com/sofastack/sofa-rpc/) 是蚂蚁内部的 RPC (Remote Procedure Call) 框架。 JFR ( Java Flight Recorder ) 是一个 Java 收集运行时诊断信息的工具。在 RPC 进行埋点之后，可以方便得排查超时等线上疑难问题。参与该项目的铜须需要在 RPC 流程的各个阶段植入埋点，并通过技术手段将相关联的埋点联系起来，最终通过工具展示埋点数据的直观含义。在这个过程中，可以详细了解到 RPC 的具体工作流程，学会使用 JFR 进行问题分析。    如果你熟悉 python 和数据可视化，将会是加分项。","label":"210170208","link":"","tech_tag":["Java","Cloud Native"],"domain_tag":["Cloud Native"],"oR":["JFR 埋点支持设计文档","SOFA RPC 中的 JFR 埋点支持","SOFA Bolt 中的 JFR 埋点支持","单测覆盖率达到 80%","埋点数据分析工具"],"tR":["熟悉 Java 语言","了解 Netty"],"orgID":176,"spl":1,"organchor":"sofastack","orgname":"SOFAStack 社区||SOFAStack Community"}]},{"userId":211,"anchor":"chaoss","slide":"","video":"","img":"chaoss.jpg","title":"CHAOSS","orgType":1,"project_url":"","url":"https://chaoss.community/","description":"一个专注于创建和分析指标，来帮助定义社区健康的开源项目","full_des":"CHAOSS 是 Linux 基金会的一个开源项目，项目社区的工作主要围绕软件和指标。此外，还提供软件和实践来支持 CHAOSS 指标的应用和部署。","tech_tag":["Python","Database","Automation","Git"],"domain_tag":["Vitualization","Community"," Metrics"," Governance"],"mail_list":"CHAOSS@lists.linuxfoundation.org","email":"CHAOSS@lists.linuxfoundation.org","project_list":[]},{"userId":205,"anchor":"dokit","slide":"","video":"","img":"dokit.jpg","title":"DoKit","orgType":1,"project_url":"","url":"https://www.dokit.cn","description":"一款面向泛前端产品研发全生命周期的效率平台。","full_des":"DoKit诞生于滴滴城运服泛前端终端技术部，是一款面向泛前端产品研发全生命周期的效率平台。经过两年的发展，当前DoKit已经发展成了一个相对完整的生态，比如DoKit For Android、DoKit For iOS、DoKit For 小程序、DoKit For Flutter、DoKit For Web。同时我们的项目被BAT以及滴滴、字节、快手、京东等等头部独角兽企业广泛使用并获得良好的口碑。随着dokit.cn平台端的推出，标志着DoKit已经从单纯的效率工具正式进入了效率工具平台的阶段。与此同时我们一直都未停下持续探索的精神，积极地在更多平台领域进行尝试，不给自己设限。我们相信DoKit的未来充满无限可能。","tech_tag":["Java","JavaScript","OC","Kotlin","Swift"],"domain_tag":["Dev Tools","Web","终端"],"mail_list":"暂无","email":"dokit@didiglobal.com","project_list":[{"name":"DoKit For Android","remark":null,"difficulty":"高","mentor":"金台","contact":"<jackjintai@didiglobal.com>","uniont":null,"student_count":0,"description":"DoKit诞生于滴滴城运服泛前端终端技术部，是一款面向泛前端产品研发全生命周期的效率平台。经过两年的发展，当前DoKit已经发展成了一个相对完整的生态，比如DoKit For Android、DoKit For iOS、DoKit For 小程序、DoKit For Flutter、DoKit For Web。我们致力于在不同的领域给用户打造一致的操作体验，减少研发以及测试人员的学习成本。","label":"210250181","link":"","tech_tag":["Java","Android"],"domain_tag":["Dev Tools"],"oR":["实现针对腾讯以及百度的实时导航功能(参考已实现的高德地图)","升级Android Activity启动耗时的技术方案，采用字节码替换","升级内置工具的注册方式(配置文件升级为注解)","基于DoKit现有的框架，独立负责并产出一款创造性的工具"],"tR":["熟悉腾讯以及百度地图的公共Api，并寻找优雅的hook点","熟悉相应的JVM字节码格式","熟悉Java&Kotlin基本语法","熟悉DoKit整体项目的整体思想"],"orgID":205,"spl":1,"organchor":"dokit","orgname":"DoKit"},{"name":"DoKit For iOS","remark":null,"difficulty":"高","mentor":"殷海超","contact":"<yinhaichao@didiglobal.com>","uniont":null,"student_count":0,"description":"DoKit诞生于滴滴城运服泛前端终端技术部，是一款面向泛前端产品研发全生命周期的效率平台。经过两年的发展，当前DoKit已经发展成了一个相对完整的生态，比如DoKit For Android、DoKit For iOS、DoKit For 小程序、DoKit For Flutter、DoKit For Web。我们致力于在不同的领域给用户打造一致的操作体验，减少研发以及测试人员的学习成本。","label":"210250184","link":"","tech_tag":["iOS","OC"],"domain_tag":["Dev Tools"],"oR":["实现针对高德、腾讯、百度地图的实时导航功能","实现针对高德、腾讯、百度地图的位置微调功能","实现DoKit iOS端的一机多控功能"],"tR":["熟悉腾讯以及百度地图的公共Api，并寻找优雅的hook点","熟悉OC&Swift的基本语法","熟悉DoKit整体项目的整体思想"],"orgID":205,"spl":1,"organchor":"dokit","orgname":"DoKit"},{"name":"DoKit For Web","remark":null,"difficulty":"高","mentor":"曹恩泽","contact":"<caoenze@didiglobal.com>","uniont":null,"student_count":0,"description":"DoKit诞生于滴滴城运服泛前端终端技术部，是一款面向泛前端产品研发全生命周期的效率平台。经过两年的发展，当前DoKit已经发展成了一个相对完整的生态，比如DoKit For Android、DoKit For iOS、DoKit For 小程序、DoKit For Flutter、DoKit For Web。我们致力于在不同的领域给用户打造一致的操作体验，减少研发以及测试人员的学习成本。","label":"210250185","link":"","tech_tag":["JavaScript","Vue"],"domain_tag":["Dev Tools"],"oR":["产出Web的接口数据Mock功能","产出终端上的Web视图调试功能","基于DoKit现有的框架，独立负责并产出一款创造性的工具"],"tR":["熟悉JS的基础语法","熟悉Vue的整体项目开发","熟悉DoKit整体项目的整体思想"],"orgID":205,"spl":1,"organchor":"dokit","orgname":"DoKit"}]},{"userId":298,"anchor":"julia","slide":"","video":"","img":"julia.jpg","title":"Julia中文社区","orgType":1,"project_url":"","url":"https://discourse.juliacn.com/","description":"致力于为 Julia 编程语言提供中文支持的开源组织。","full_des":"Julia中文社区致力于为Julia编程语言提供更好的中文支持，帮助中文用户学习、交流和分享Julia的使用经验，促进Julia编程语言在科学计算等领域的广泛应用。","tech_tag":["AI","Deep Learning Framework","Julia"],"domain_tag":["AI","Big Data","Dev Tools","Vitualization","Distributed System","Programming Language"],"mail_list":"","email":"juliacn@googlegroups.com","project_list":[{"name":"基于可逆计算的稀疏矩阵求导||Differentiating sparse matrix operations with reversible programming","remark":"","difficulty":"高","mentor":"刘金国","contact":"<jinguoliu@g.harvard.edu>","uniont":"陈久宁<johnnychen94@hotmail.com>","student_count":0,"description":"稀疏矩阵在科学计算中应用广泛，但是在Julia语言里面却没有很好的软件包实现对稀疏矩阵的自动微分，这个项目将会使用可逆嵌入式语言 NiLang.jl 通过对 Julia Base 里的稀疏矩阵操作的改写实现对其自动微分。我们将会把生成的自动微分规则接入到 Julia 生态中最流行的自动微分规则库 ChainRules 中。目前已有一些例子可以证明这种方式的高效可行：https://nextjournal.com/giggle/how-to-write-a-program-differentiably  由于这个工程将会对很多稀疏矩阵函数重写，是具有挑战性的，但也一定是可行的。与此同时，你将会学习到一个可逆的计算语言，并感受可逆计算的魅力！  ||Sparse matrices are extensively used in scientific computing, however, there is no automatic differentiation package in Julia for sparse matrix operations yet. This project will use the reversible embedded domain-specific language NiLang.jl to differentiate sparse matrix operations by re-writing them in a reversible style. We will port the generated backward rules to ChainRules.jl as an extension, where ChainRules.jl is the most popular Julia package providing backward rules for many automatic differentiation packages. In fact, NiLang.jl has been proven to differentiate some sparse matrix operations efficiently:  https://nextjournal.com/giggle/how-to-write-a-program-differentiably  In this project, you are supposed to systematically rewrite the sparse matrix functions in Julia base, which can be challenging but definitely doable. Meanwhile, you will have a chance to learn a reversible programming language! ","label":"210370152","link":"","tech_tag":["Julia"," NiLang"],"domain_tag":["Programming Language","automatic differentiation"," scientific computing"],"oR":["一个开源的Julia软件包||A open source Julia package","超过80%的测试完整度 ||Over 80% test converge","一个简单的展示用例子||a simple example for demonstration"],"tR":["Julia语言||Julia language","自动微分基础||automatic differentiation","一个简单的展示用例子"],"orgID":298,"spl":0,"organchor":"julia","orgname":"Julia中文社区"},{"name":"添加高性能图像处理算法||Add performant image processing algorithms","remark":"","difficulty":"高","mentor":"陈久宁","contact":"<johnnychen94@hotmail.com>","uniont":null,"student_count":0,"description":"Images.jl 是 Julia 下的一个图像处理工具箱，目前它提供了一些底层的图像处理支持来满足开发者的需求，不过目前还依然存在很多图像处理细分领域的算法没有得到复现。根据工作量及难度的不同，项目申请者需要提供一至三个图像处理算法的复现及对应的优化工作，并将其添加到 JuliaImages 组织下。||Images.jl is an image processing toolbox in the Julia programming language. Currently, it provides some fundamental work to support the need of maintainers and advanced developers, yet it's still not friendly enough to new developers because it lacks of many algorithms in different sub-fields of image processing. Depending on the workload, the applicant should implement one to three image processing algorithms, optimize the performance, and add the codes to JuliaImages     ","label":"210370158","link":"","tech_tag":["Julia"],"domain_tag":["Image Processing"],"oR":["实现新的图像处理算法||Implement new image processing algorithm","与其他框架的算法进行性能比较||Compare with other image processing toolbox"],"tR":["了解图像处理算法||Knows a certain field of image processing","对性能优化有一定了解||Have performance optimization experiences","了解 Julia 语言||Familiar with Julia language"],"orgID":298,"spl":0,"organchor":"julia","orgname":"Julia中文社区"},{"name":"Comprehensive ImageMagick interface in Julia","remark":"","difficulty":"高","mentor":"陈久宁","contact":"<johnnychen94@hotmail.com>","uniont":null,"student_count":0,"description":"ImageMagick is a widely used low-level image io and processing library, it also has its Julia frontend ImageMagick.jl, which is used widely in the entire Julia ecosystem. However, ImageMagick.jl project is not under well-maintained; it lacks of the necessary documentation and has few test coverage. The applicant needs to revisit and upgrade the ImageMagick.jl codebase so as to 1) fix legacy ImageMagick.jl issues 2) improve the reliability and 3) port more ImageMagick features to ImageMagick.jl. A complete reference documentation for ImageMagick.jl is also needed.","label":"210370178","link":"","tech_tag":["C","Julia"],"domain_tag":["Image Processing"],"oR":["more test coverage","fix legacy issues","add documentation","(optional) port more functionalities"],"tR":["familiar with Linux, C, and cross-compiling","knows Julia"],"orgID":298,"spl":2,"organchor":"julia","orgname":"Julia中文社区"},{"name":"Wide-range JuliaImages demos and missing functionalities","remark":"","difficulty":"中","mentor":"陈久宁","contact":"<johnnychen94@hotmail.com>","uniont":null,"student_count":0,"description":"For new or occasional users, JuliaImages would benefit from a large collection of complete worked examples organized by topic. While the current documentation contains many \"mini-demos,\" they are scattered; an organized page would help users quickly find what they need. We have set up a landing page, but many more demos are needed. Scikit-image is one potential model.","label":"210370179","link":"","tech_tag":["Julia"],"domain_tag":["Image Processing"],"oR":["add more demos","(Preferred) new missing functionalities","(Optional) improve the demo build tool"],"tR":["familiar with Julia and JuliaImages","Good technical written in English"],"orgID":298,"spl":2,"organchor":"julia","orgname":"Julia中文社区"},{"name":"Implement Multi-Agent Reinforcement Learning Algorithms in Julia","remark":null,"difficulty":"高","mentor":"Jun Tian","contact":"<find_my_way@foxmail.com>","uniont":null,"student_count":0,"description":"强化学习领域的一些最新进展引领了人工智能的许多突破，一部分最新的深度强化学习算法已经在ReinforcementLearning.jl库中实现。不过在多智能体方面，目前只实现了一些CFR相关的算法。我们希望有更多的实现，包括MADDPG，COMA，NFSP, PSRO等。||Recent advances in reinforcement learning led to many breakthroughs in artificial intelligence. Some of the latest deep reinforcement learning algorithms have been implemented in ReinforcementLearning.jl with Flux. Currently, we only have some CFR related algorithms implemented. We'd like to have more implemented, including MADDPG, COMA, NFSP, PSRO.  ","label":"210370190","link":"","tech_tag":["AI","Julia","RL"],"domain_tag":["AI","Programming Language"],"oR":["At least two experiments are expected to be added into ReinforcementLearningZoo.jl.","The experiment of each algorithm can be run on GPU.","A technical report on how it is implemented and example usage."],"tR":["Basic understanding of Julia and Flux.jl.","Some basic knowledge in Reinforcement Learning."],"orgID":298,"spl":0,"organchor":"julia","orgname":"Julia中文社区"},{"name":"Julia 官方文档翻译","remark":null,"difficulty":"低","mentor":"Jun Tian","contact":"<find_my_way@foxmail.com>","uniont":null,"student_count":0,"description":"目前Julia中文文档位于 https://github.com/JuliaCN/JuliaZH.jl ，从v1.3发布之后之后，该文档已经有一段时间没有更新了，本项目希望能将最新的英文文档在已有的基础上更新，同时完善自动化部署的流程。","label":"210370191","link":"","tech_tag":["Julia","Documentation"],"domain_tag":["AI","Programming Language"],"oR":["将Julia中文翻译文档更新至与英文v1.6同步","完善自动化部署流程"],"tR":["熟悉文档翻译","对Julia编程感兴趣"],"orgID":298,"spl":1,"organchor":"julia","orgname":"Julia中文社区"}]},{"userId":249,"anchor":"hyportrons","slide":"","video":"","img":"hyportrons.jpg","title":"Hypertrons","orgType":1,"project_url":"https://www.hypertrons.io/#/event/summer2021","url":"https://hypertrons.io","description":"面向开放组织的开源 RPA 平台","full_des":"Hypertrons 为一个面向开放组织的开源 RPA 平台，在多种平台的连通下，通过可定制化脚本为开放组织提供组织架构管理、自动化流程管理等。目前已经支持 GitHub、GitLab、Gitee、Jenkins、Slack、email 等多种平台的交互。","tech_tag":["NodeJS","Automation","RPA"],"domain_tag":["开源治理","跨平台自动化"],"mail_list":"frank_zsy@hypertrons.io wsl@hypertrons.io lhming23@outlook.com","email":"dev@hypertrons.io","project_list":[{"name":"可视化图表组件库封装与定制||Customized React chart library","remark":null,"difficulty":"高","mentor":"林海铭","contact":"<1040023934@qq.com>","uniont":"刘畅<liuchangfreeman@outlook.com>,赵生宇<frank_zsy@hypertrons.io>","student_count":0,"description":"作为 Hypertrons 功能的延申与重要组成部分，Hypertrons-crx 以浏览器插件的形式，在特定网页中插入迷你看板, 通过可视化图表展示各类指标数据，从而方便用户快速洞察开发者及项目相关信息。项目当前采用 Echarts 与 Antv 作为可视化工具。为提供良好的视觉与交互体验，简化配置流程，需要基于 Echarts / Antv 或其他底层可视化引擎，对项目使用到的各类图表（如关系图、雷达图、数据表格等）作一层封装与定制，实现对应的 React 组件库，供其他功能模块调用。||As an extension and important part of the function of hypertrons, hypertrons-crx can insert dashboards into specific GitHub pages to help users gain the insight into developers and projects. The project currently uses Echarts and Antv as visualization tools. In order to provide a good interactive experience and simplify the configuration process, it is necessary to encapsulate and customize the charts used in the project (e.g. graph, radar and table). We can implement the React component based on Echarts, Antv or other visualization engines.","label":"210230454","link":"","tech_tag":["NodeJS","React","TypeScript","Git"],"domain_tag":["Web"],"oR":["可视化图表 React 组件库||Customized React chart library","相关的技术说明文档||Related documentation"],"tR":["Git","TypeScript","React","Echarts","Antv","Fluent-ui"],"orgID":249,"spl":0,"organchor":"hyportrons","orgname":"Hypertrons"},{"name":"Crx 页面视觉设计与增强（非代码贡献）||Crx Page Design and Enhancement (Non-code contributions)","remark":null,"difficulty":"中","mentor":"夏小雅","contact":"<2031361857@qq.com>","uniont":"刘畅<liuchangfreeman@outlook.com>,赵生宇<frank_zsy@hypertrons.io>,林海铭<1040023934@qq.com>","student_count":0,"description":"Hypertrons-crx 希望能有优雅、美观的页面布局设计，且各个可视化组件、资料页面、设置页面有一致的设计风格。本项目旨在利用相关的设计工具，设计Hypertrons-crx各个页面及可视化组件的配色、布局、风格。||Hypertrons-crx is expected to have an eye-catching component layout and color consistency for the perceptor page, profile page, pop-out and setting pages. The project idea is about enhancing the page style by designing tools, as well as providing the exact color and distance for every single and micro element.","label":"210230455","link":"","tech_tag":["Web"],"domain_tag":["Virtualization"],"oR":["经设计的产品原型||A fully designed product prototype"],"tR":["Designing Tools, i.e.Figma【Designing Tools, i.e.Figma】","HTML【HTML】","CSS【CSS】","Markdown【Markdown】"],"orgID":249,"spl":0,"organchor":"hyportrons","orgname":"Hypertrons"},{"name":"Build website for hypertrons-crx and improve the documentation","remark":null,"difficulty":"中","mentor":"林海铭","contact":"<1040023934@qq.com>","uniont":"刘畅<liuchangfreeman@outlook.com>,赵生宇<frank_zsy@hypertrons.io>","student_count":0,"description":"1、为 hypertrons-crx 项目制作 Web 网站，包括功能展示、安装说明、项目相关信息展示等, 方便用户快速了解hypertrons-crx 项目，并能根据网站指示信息完成安装与使用。2、基于代码、Issue 及 PR ，整理项目技术文档，方便开发者能快速了解项目技术架构，降低参与门槛。||To help users understand hypertrons-crx project and know how to install our product, we need to build the website for hypertrons-crx, including project introduction, installation guide and other information.To help developers understand how hypertrons-crx works and help them participate in the project, we need to improve the documentation and add more details about the architecure, components and apis of this project.","label":"210230456","link":"","tech_tag":["JavaScript","NodeJS","React","TypeScript","Git"],"domain_tag":["Web"],"oR":["官网代码编写与部署||Official website","项目技术文档||Documentation"],"tR":["JavaScript","TypeScript","Markdown"],"orgID":249,"spl":0,"organchor":"hyportrons","orgname":"Hypertrons"}]},{"userId":305,"anchor":"masknetwork","slide":"","video":"","img":"mask.jpg","title":"Mask Network","orgType":1,"project_url":"","url":"https://mask.io","description":"Mask Network 致力于以开源与去中心化的方式夺回用户自身数据的所有权。","full_des":"Mask Network 是一个帮助用户从 Web 2.0 无缝过渡到 Web 3.0 的门户。其提供的主要功能是对信息传输进行加解密，并围绕着这一功能不断发展。Mask Network 倡导用户珍视自己的隐私数据，个人资产并拥有主权。Mask Network 集去隐私社交，无国界支付网络，去中心化文件存储与分享，去中心化金融，治理（DAO）、NFT 于一体，帮助用户在 Twitter、Facebook 等传统社交网络上保护自身的隐私，数据，资产和权利。Mask Network 创建了一个去中心化的应用程序生态系统，为数以万计的用户搭建了一个连接 Web 2.0（现有互联网）和 Web 3.0（新型开放的互联网）的桥梁。","tech_tag":["前端","iOS","Android","区块链"],"domain_tag":["浏览器插件","React","Web App","推特客户端","移动输入法","智能合约"],"mail_list":"","email":"info@mask.io","project_list":[]},{"userId":269,"anchor":"universaloj","slide":"","video":"","img":"uoj.png","title":"Universal OJ 开源社区","orgType":1,"project_url":"https://git.io/UOJSummer2021CN","url":"https://github.com/UniversalOJ","description":"一款通用的在线评测系统。","full_des":"Universal OJ 开源社区是以吕凯风 vfleaking 开发的 UOJ 为基础的二次开发社群；Universal OJ 开源社区专注于对算法题目的评测，为学习算法提供便利。","tech_tag":["Linux","Python","C","PHP","C++","Git","Docker"],"domain_tag":["Web"],"mail_list":"billchenchina2001@gmail.com","email":"QQ 群 560621197 / Telegram @uojos","project_list":[]},{"userId":283,"anchor":"datenlord","slide":"","video":"","img":"datenlord.png","title":"DatenLord","orgType":1,"project_url":"","url":"https://datenlord.io","description":"DatenLord是新一代云原生分布式存储，专门解决异构、多云场景下数据统一存储管理的问题。 DatenLord由来自多名Google、华为的资深工程师发起，采用软硬结合的方式实现高性能存储。目前，DatenLord大量采用内核旁路、硬件加速等底层技术，诸如io_uring、RDMA、SerDes等软硬件技术手段，实现存储性能的十倍以上提升。","full_des":"存储是非常有技术挑战的领域，非常典型的软硬结合的技术领域，其难度堪比操作系统内核，不亚于芯片的研发难度。DatenLordd的主要技术亮点如下： 1、DatenLord采用全新自研架构，绕过操作系统内核，自主控制存储IO，极大地发挥出新一代存储硬件的高性能。目前存储硬件的革新正在驱动存储软件架构升级。闪存硬盘日趋流行，非易失内存的出现，使得现有操作系统内核里对存储的管理变成存储性能瓶颈。DatenLord采用异步编程架构并绕过操作系统内核，实现完全不依赖内核，自主调度管理存储IO，极大地提升了存储的性能。 2、DatenLord提供统一的存储接口，满足不同场景需求。目前存储领域存在多种异构存储接口，包括文件存储、对象存储、块存储等，分别满足不同场景存储需求。但是不同的存储接口需要应用来适配，对应用最友好的是文件存储，但是文件存储的容量有限，无法线性扩展，迁移困难。对海量数据管理最友好的是对象存储，但是应用需要适配对象存储的接口。块存储是为虚拟化场景提供存储支持，应用不能直接访问。DatenLord整合多种存储接口，在面向应用时提供文件存储，在面向跨云数据管理时提供对象存储，在对接虚拟化场景时提供块存储，并实现数据对多个存储接口的互通。 3、DatenLord利用片上系统提升存储性能。片上系统是目前硬件和云计算领域最热门的技术之一，采用硬件芯片来完成特定场景的计算任务。DatenLord采用FPGA可编程芯片和ASIC专用芯片实现存储场景的相关计算功能，诸如数据加密解密、数据压缩解压缩、音视频编解码、模式识别等场景，有力提升数据存储和处理的性能。","tech_tag":["Linux Kernel","Cloud Native","Distributed System","Storage"],"domain_tag":["Linux","Distributed System","Rust","Kubernetes","RDMA","FPGA"],"mail_list":"","email":"dev@datenlord.io","project_list":[{"name":"自定义实现Rust内存分配器||Customized Rust Memory Allocater","remark":null,"difficulty":"高","mentor":"施继成","contact":"<jicheng.shi@datenlord.io>","uniont":null,"student_count":0,"description":"Rust语言可定制的内存分配器正在被开发中，各种标准库中的数据结构也正在被改造以使用可定制内存分配器。虽然该特性在语言层面还处于unstable状态，但其意义十分关键，会彻底改变Rust程序对于内存的使用方式，例如RDMA程序的内存使用。本题目就是实现一个RDMA友好的Rust内存分配器，使得RDMA程序可以自行分配管理内存，无须采用Rust默认的内存分配器，解决RDMA程序在本地与远端共享内存时，导致的潜在内存访问冲突问题。","label":"210330244","link":"","tech_tag":["Rust"],"domain_tag":["Linux Kernel"],"oR":["实现Rust内存分配器"],"tR":["Rust","Kernel"],"orgID":283,"spl":0,"organchor":"datenlord","orgname":"DatenLord"},{"name":"RISC-V虚拟化嵌入式平台LLVM编译后端||LLVM Backend for RISC-V Virtualized Embedded Platform","remark":null,"difficulty":"高","mentor":"周鹤洋","contact":"<heyang.zhou@icloud.com>","uniont":null,"student_count":0,"description":"RV-VEP (RISC-V Virtualized Embedded Platform) 的目标是实现嵌入式软件的“一次编译，到处运行”，抽象掉不同硬件指令集、不同 SoC 之间不必要的差别，使得构建一致的嵌入式软件生态成为可能。    RV-VC (RISC-V Virtualizable Code) 是定制化的 RISC-V 指令集，在 RV32IM 的基础上加入了元数据和扩展指令。RV-VC 是一种平台无关的中间表示，并不会由硬件直接执行，在烧录前需再进行一次编译，生成可以运行在目标硬件架构上的代码。    为了使 RV-VC -&gt; 目标机器代码这一步完全静态化，我们需要在 LLVM IR -&gt; RV-VC 这个流程里做改动，修改 LLVM RISC-V 后端以生成间接分支提示。本题要求修改LLVM后端实现针对 RV-VEP 平台的编译。||Compile once, run everywhere!    RV-VEP (RISC-V Virtualized Embedded Platform) is a universal binary platform for embedded systems. We work to make a uniform ecosystem of embedded software possible by abstracting out differences in instruction sets and SoC specs.    RV-VC (RISC-V Virtualizable Code) is our customized instruction set based on RISC-V. We add metadata and extended instructions based on RV32IM.    RV-VC is a platform-independent intermediate representation of programs and is not executed directly by hardware. Instead, just before flashing to the device another compilation is done to produce code suitable for running on the target architecture.    The last step here is to compile RV-VC for the target hardware. To enable fully static (AoT) compilation we need some metadata from the previous step, more specifically, indirect branch hints. This project is to modify LLVM compiler backend to implement a LLVM-based compiler for RV-EVP.    ","label":"210330280","link":"","tech_tag":["Rust","LLVM"],"domain_tag":["Virtualization","Compiler"],"oR":["针对 RV-EVP 平台的 LLVM 编译后端||"],"tR":["Rust","LLVM","RISC-V"],"orgID":283,"spl":0,"organchor":"datenlord","orgname":"DatenLord"},{"name":"为 RISC-V 虚拟化嵌入式平台实现 ARM Cortex-M (Thumb2) 的编译器||RISC-V Virtualized Embedded Platform Compiler for ARM Cortex-M (Thumb2)","remark":null,"difficulty":"高","mentor":"周鹤洋","contact":"<heyang.zhou@icloud.com>","uniont":null,"student_count":0,"description":"RV-VEP (RISC-V Virtualized Embedded Platform) 的目标是实现嵌入式软件的“一次编译，到处运行”，抽象掉不同硬件指令集、不同 SoC 之间不必要的差别，使得构建一致的嵌入式软件生态成为可能。    RV-VC (RISC-V Virtualizable Code) 是定制化的 RISC-V 指令集，在 RV32IM 的基础上加入了元数据和扩展指令。RV-VC 是一种平台无关的中间表示，并不会由硬件直接执行，在烧录前需再进行一次编译，生成可以运行在目标硬件架构上的代码。    ARM Cortex-M 是目前工业上应用最广泛的微控制器系列，使用 Thumb2 指令集，所以首先实现 RV-VC 到 Thumb2 的编译器可以保证 RV-VC 可以运行在最多的硬件设备上。    本题建议基于 LLVM 实现，这样后期移植到其他平台会很方便；当然也可以选择手写 RV-VC 到 Thumb2 的二进制翻译逻辑。开发语言要求为Rust。||Compile once, run everywhere!    RV-VEP (RISC-V Virtualized Embedded Platform) is a universal binary platform for embedded systems. We work to make a uniform ecosystem of embedded software possible by abstracting out differences in instruction sets and SoC specs.    RV-VC (RISC-V Virtualizable Code) is our customized instruction set based on RISC-V. We add metadata and extended instructions based on RV32IM.    RV-VC is a platform-independent intermediate representation of programs and is not executed directly by hardware. Instead, just before flashing to the device another compilation is done to produce code suitable for running on the target architecture.    ARM Cortex-M is the most widely used microcontroller core in the industry and uses the Thumb2 instruction set. So implementing a RV-VC to Thumb2 compiler ensures that RV-VC runs on the mostly-used series of embedded SoC.    We suggest to implement an LLVM-based compiler so that porting to other platforms would be easy, but you can also write a direct binary translator. The programming language is required to be Rust.    ","label":"210330282","link":"","tech_tag":["Rust","LLVM"],"domain_tag":["Virtualization","Compiler"],"oR":["RISC-V虚拟化嵌入式平台面向ARM Cortex-M的编译器||"],"tR":["Rust","LLVM","RISC-V","ARM"],"orgID":283,"spl":0,"organchor":"datenlord","orgname":"DatenLord"},{"name":"RISC-V 虚拟化嵌入式平台运行时/操作系统||RISC-V Virtualized Embedded Platform Runtime/Operating System","remark":null,"difficulty":"高","mentor":"周鹤洋","contact":"<heyang.zhou@icloud.com>","uniont":null,"student_count":0,"description":"RV-VEP (RISC-V Virtualized Embedded Platform) 的目标是实现嵌入式软件的“一次编译，到处运行”，抽象掉不同硬件指令集、不同 SoC 之间不必要的差别，使得构建一致的嵌入式软件生态成为可能。    RV-VC (RISC-V Virtualizable Code) 是定制化的 RISC-V 指令集，在 RV32IM 的基础上加入了元数据和扩展指令。RV-VC 是一种平台无关的中间表示，并不会由硬件直接执行，在烧录前需再进行一次编译，生成可以运行在目标硬件架构上的代码。  RV-VRT    RV-VRT (RISC-V Virtualized Runtime) 是在嵌入式设备上管理 RV-VC 代码执行的操作系统，它需要解决这些问题：  - RV-VC 多模块的依赖解析和动态链接；  - 基于 URL 的一致化资源寻址；  - 提供对外设和中断的访问。    本题要求实现 RV-VRT，目标是为用户提供跨平台一致的开发体验，RV-VEP 不仅需要统一的二进制格式，也需要统一的模块接口和硬件接口。本题要求用Rust实现 RV-VRT。||Compile once, run everywhere!    RV-VEP (RISC-V Virtualized Embedded Platform) is a universal binary platform for embedded systems. We work to make a uniform ecosystem of embedded software possible by abstracting out differences in instruction sets and SoC specs.    RV-VC (RISC-V Virtualizable Code) is our customized instruction set based on RISC-V. We add metadata and extended instructions based on RV32IM.    RV-VC is a platform-independent intermediate representation of programs and is not executed directly by hardware. Instead, just before flashing to the device another compilation is done to produce code suitable for running on the target architecture.    RV-VRT (RISC-V Virtualized Runtime) is an operating system that manages execution of RV-VC code. It needs to:  - Resolve dependencies and perform dynamic linking on RV-VC modules.  - Provide a URL-based uniform resource registration and lookup service.  - Provide an abstraction layer for external devices and interrupts.    To provide a consistent development experience across platforms, RV-VEP needs more than a universal binary format. Similar to WASI in the WebAssembly ecosystem, RV-VEP also requires a consistent module interface and hardware interface and that's what we aim to do with RV-VRT. This project is to implement RV-VEP, and the required programming language is Rust.      ","label":"210330283","link":"","tech_tag":["Rust"],"domain_tag":["Linux Kernel","OS","Virtualization"],"oR":["RISC-V 虚拟化嵌入式平台运行时/操作系统||"],"tR":["Rust","RISC-V"],"orgID":283,"spl":0,"organchor":"datenlord","orgname":"DatenLord"},{"name":"用Rust实现异步RDMA库||Async RDMA Library in Rust","remark":null,"difficulty":"高","mentor":"潘政","contact":"<zheng.pan@datenlord.io>","uniont":"王璞<pwang7@foxmail.com>","student_count":0,"description":"RDMA是常用于超算中心的高性能网络，目前RDMA主要是基于C语言开发。本题要求用Rust实现RDMA的Library，使得Rust开发者也可以开发RDMA程序。此外，RDMA属于网络IO，非常适合采用Rust异步编程的方式来实现，本题要求采用Rust异步编程的方式实现RDMA的Library。","label":"210330298","link":"","tech_tag":["Rust","RDMA"],"domain_tag":["Distributed System"],"oR":["用Rust异步方式实现RDMA框架"],"tR":["Rust","RDMA"],"orgID":283,"spl":0,"organchor":"datenlord","orgname":"DatenLord"}]},{"userId":256,"anchor":"hgbczxjt","slide":"","video":"","img":"hebi.png","title":"合璧操作系统","orgType":3,"project_url":"https://gitlab.fmsoft.cn/hybridos/hybridos-lite/blob/master/summer2021/summer2021.md","url":"https://hybridos.fmsoft.cn/","description":"合璧操作系统 HybridOS 是一个为智能物联网设备和云计算环境设计的全新开源操作系统。","full_des":"相较于运行在单机硬件环境中的传统操作系统，合璧操作系统 HybridOS 尝试为开发者提供更多可能。HybridOS 不仅仅为支持物联网应用的开发而运行在设备侧，同时也为客户端和云计算提供了编程接口。HybridOS 尝试为开发者提供一个从设备到云端再到客户端的全新软件栈和协议栈。","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS","嵌入式软件开发，开源社区"],"mail_list":"","email":"summer2021@minigui.com","project_list":[{"name":"合璧操作系统设备端数据总线 hiBus 的增强-在客户端函数库中实现 WebSocket 的支持","remark":"【相关的开源软件仓库列表】\r\n仓库：https://github.com/FMSoftCN/hibus ；\r\n\r\nhiBus 协议：https://github.com/FMSoftCN/hybridos/blob/master/docs/design/hybridos-data-bus-zh.md","difficulty":"中","mentor":"魏永明","contact":"<vincent@minigui.org>","uniont":null,"student_count":0,"description":"hiBus 是合璧操作系统提出的一个设备端数据总线技术，通过 hiBus 本机或者远程主机上的程序可以发起远程过程调用或者订阅特定事件。   hiBus 为客户端提供了 Unix Domain Socket 和 WebSocket 两种连接方式。    目前，hiBus 已完成 1.0 版本的开发。现有如下增强需求：在客户端函数库中实现 WebSocket 的支持。  hiBus 服务器已实现对 WebSocket 的支持，可通过支持 WebSocket 的浏览器直接连入 hiBus 服务器，但客户端函数库中尚未完成对 WebSocket 的支持，希望完成相关实现。","label":"210260160","link":"","tech_tag":["Linux","C","RTOS","C++","IoT","操作系统，MiniUGI，开源社区"],"domain_tag":["OS"],"oR":["客户端函数可支持 WebSocket","在 libhibus.so 函数库中，使用 C 代码增加对 WebSocket 的支持。","针对远程主机连接，需要考虑如下主机名称相关的事宜：1. 如何定义 hiBus 服务器所在主机的主机名。2. 枚举已连接到 hiBus 的客户端主机，实现为内置行者的一个方法。"],"tR":["Linux开发环境及 C/C++ 编程","MiniGUI","Unix domain socket"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"合璧操作系统设备端数据总线 hiBus 的增强-执行本机或远程命令","remark":"【相关的开源软件仓库列表】\r\n\r\n仓库：https://github.com/FMSoftCN/hibus ；\r\n\r\nhiBus 协议：https://github.com/FMSoftCN/hybridos/blob/master/docs/design/hybridos-data-bus-zh.md","difficulty":"中","mentor":"薛淑明","contact":"<xueshuming@minigui.org>","uniont":null,"student_count":0,"description":"hiBus 是合璧操作系统提出的一个设备端数据总线技术，通过 hiBus 本机或者远程主机上的程序可以发起远程过程调用或者订阅特定事件。    hiBus 为客户端提供了 Unix Domain Socket 和 WebSocket 两种连接方式。    目前，hiBus 已完成 1.0 版本的开发。现有如下增强需求：增强 hiBus 服务器，使之可以动态装载一个内建行者，并开发一个 hiBus 内建行者，提供类似 BusyBox 的命令执行能力，从而可通过 hiBus 由本机或者远程的行者执行命令，并获得命令的输出结果。比如通过执行 ls *.c 获得当前路径下的所有 C 文件列表。","label":"210260161","link":"","tech_tag":["Linux","C","RTOS","C++","IoT","操作系统，MiniUGI，开源社区"],"domain_tag":["OS"],"oR":["定义 hiBus 服务器端内置行者的接口。以操作函数指针的形式，定义 hiBus 服务器端动态装载内置行者的接口，该接口可用于注册一个不同于 builtin 的内置行者，并在 hiBus 中注册该行者对应的方法以及泡泡。","将 BusyBox 的功能重构为 busybox 内置行者的方法","该行者应以动态库的形式实现，并在 hiBus 启动时装载。该行者可以以远程过程的方式执行 busybox 提供的命令行功能。","注意如下要点：1. 设计对应的远程过程调用和/或事件的接口。   2. 以客户端行者为单位，维护一个上下文信息，主要用来维护当前路径等 Shell 常见的环境变量。   3. 所有的命令，在 hiBus 子进程中执行。子进程应切换 euid（有效用户标识符）到调用者的用户标识符；对远程主机上的行者，使用 guest 用户作为其 euid。   4. 命令行支持支持重定向和管道。   5. 所有命令的标准输出和标准错误，在没有被重定向的前提下，作为该过程的返回值返回给调用者。"],"tR":["Linux开发环境及 C/C++ 编程","MiniGUI","Unix domain socket"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"HybridOS 图形栈增强","remark":"【相关的开源软件仓库列表】\r\n\r\nhttps://github.com/VincentWei/build-minigui-5.0 ；\r\nhttps://github.com/VincentWei/minigui ；\r\nhttps://github.com/FMSoftCN/himesa","difficulty":"中","mentor":"魏永明","contact":"<vincent@minigui.org>","uniont":null,"student_count":0,"description":"HybridOS 是飞漫软件正在开发中的针对物联网的新一代操作系统。飞漫软件已基于 MiniGUI、Mesa、Cairo 等开源软件发布了 HybridOS 图形栈。在 Mesa 的 MiniGUI Backend 实现中，目前未提供对 EGL pixel buffer 的支持。本项目要求在现有 Mesa MiniGUI backend 的实现基础上，提供对 EGL pixel buffer 的支持。","label":"210260163","link":"","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS"],"oR":["在现有 Mesa MiniGUI backend 的实现基础上，提供符合 EGL 规范 pixel buffer 相关接口实现。","在 https://github.com/FMSoftCN/himesa 基础上完成开发工作。","继承 hiMesa 使用的 MIT 许可证。"],"tR":["Linux 环境下的 C/C++ 编程","MiniGUI、Mesa 等软件"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"将 MiniGUI 5.0 运行到 RT-Thread 开发板上","remark":"【相关的开源软件仓库列表】\r\n\r\nhttps://github.com/VincentWei/build-minigui-5.0；\r\nhttps://github.com/VincentWei/minigui；\r\nhttps://github.com/VincentWei/mgncs；\r\nhttps://github.com/VincentWei/mgncs4touch；\r\nhttps://github.com/VincentWei/mg-demos","difficulty":"中","mentor":"薛淑明","contact":"<xueshuming@minigui.org>","uniont":null,"student_count":0,"description":"将 MiniGUI 5.0 (Standalone 或者 Threads 模式）移植到运行 RT-Thread 的开发板上。需要开发针对具体开发板的图形引擎、输入引擎等。","label":"210260166","link":"","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS"],"oR":["针对具体开发板的图形引擎及输入引擎。","运行 MiniGUI、mGNCS、mGNCS4Touch 示例程序。","如果内存配置允许，运行 mg-demos 中两个演示程序。","推荐使用 Apache 2.0 许可证。"],"tR":["RT-Thread 开发环境及 C/C++ 编程","MiniGUI"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"面向小屏幕智能设备的 MiniGUI 定制合成器","remark":"【相关的开源软件仓库列表】\r\n\r\nhttps://github.com/VincentWei/build-minigui-5.0；\r\nhttps://github.com/VincentWei/minigui；\r\nhttps://github.com/FMSoftCN/hicairo；\r\nhttps://github.com/FMSoftCN/himesa","difficulty":"高","mentor":"耿岳","contact":"<gengyue@minigui.org>","uniont":null,"student_count":0,"description":"自 MiniGUI 5.0 起，MiniGUI 的多进程模式开始支持合成图式（compositing schema）。合成图式是现代桌面操作系统和智能手机操作系统的图形及窗口系统使用的技术，其基本原理很简单：系统中所有进程创建的每一个窗口都使用独立的缓冲区来各自渲染其内容，而系统中有一个扮演合成器（compositor）角色的进程，负责将这些内容根据窗口的 Z 序以及叠加效果（如半透明、模糊等）合成在一起并最终显示在屏幕上。本项目要求为 MiniGUI 5.0 的合成图式开发一个适合于小屏幕智能设备的定制合成器，实现自定义的窗口层叠效果（如阴影、模糊、不规则窗口等），以及窗口的切换动画等效果。","label":"210260167","link":"","tech_tag":["Linux","C","RTOS","C++","IoT","MiniUGI，开源社区"],"domain_tag":["OS"],"oR":["可在 Ubuntu 18.04 上编译运行，使用 HybridOS 图形栈中的 Cairo 或者 Mesa (OpenGL ES）作为渲染引擎，实现一个定制的 MiniGUI 5.0 合成器，可参考效果：智能手机、中高档轿车中的车载娱乐系统。","可整合 mgdemo、mguxdemo 等 MiniGUI 已有示例程序或者演示程序中的代码。注：这些代码均以 Apache 2.0 许可证发布。","推荐使用 Apache 2.0 许可证。"],"tR":["Linux开发环境及 C/C++ 编程","OpenGL ES 编程","MiniGUI、Cairo、Mesa 等软件"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"MiniGUI 的 DRM 加速图形引擎","remark":"【相关的开源软件仓库列表】\r\n\r\nhttps://github.com/VincentWei/build-minigui-5.0；\r\nhttps://github.com/VincentWei/minigui；\r\nhttps://github.com/FMSoftCN/hidrmdrivers；\r\nhttps://github.com/FMSoftCN/himesa","difficulty":"中","mentor":"魏永明","contact":"<vincent@minigui.org>","uniont":null,"student_count":0,"description":"DRM 已经成为 Linux 环境中新一代的现代图形支持框架。自 4.0 版本以来，MiniGUI 支持 DRM，但目前只提供了一个针对早期 Intel i915 芯片的加速图形引擎。该项目要求您为某个支持 DRM 且包含基础 2D 加速能力的 GPU 开发一个 MiniGUI 的 DRM 加速图形引擎。该 GPU 可以是 PC 显卡，也可以是嵌入式 SoC，如全志、瑞芯或者展讯的 SoC。","label":"210260168","link":"","tech_tag":["Linux","C","RTOS","C++","Docker","MiniUGI，开源社区"],"domain_tag":["OS"],"oR":["符合 MiniGUI 5.0 DRM 引擎接口的加速引擎，可编译成动态库供 MiniGUI 在运行时动态装载。","提供对显存管理、矩形填充、位块传输（Blitting）等的加速支持。","在 https://github.com/FMSoftCN/hidrmdrivers 基础上完成开发工作。","继承 hiDRMDriver 使用的 MIT 许可证。"],"tR":["Linux 环境下的 C/C++ 编程","MiniGUI、Mesa 等软件"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"合璧操作系统设备端应用通过数据总线 hiBus 操作硬件设备","remark":"【相关的开源软件仓库列表】\r\n\r\n仓库：https://github.com/FMSoftCN/hibus；\r\n\r\nhiBus 协议：https://github.com/FMSoftCN/hybridos/blob/master/docs/design/hybridos-data-bus-zh.md","difficulty":"中","mentor":"耿岳","contact":"<gengyue@minigui.org>","uniont":null,"student_count":0,"description":"合璧操作系统是数据驱动的，而hiBus 是合璧操作系统提出的一个设备端数据总线技术。用户界面通过 hiBus 总线，与守护进程通信，发送指令。守护进程操作硬件设备。   用户交互与设备操控的分离，是合璧操作系统的基本编程思想。而 hibus 总线，则将两部分有效组织起来，完成预定的功能。","label":"210260237","link":"","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS"],"oR":["明确硬件设备的操作，设定硬件操作的预期行为，并编写操作硬件设备的守护进程。开发者根据自己的硬件设备，明确操作设备的行为。比如 LED 的开关，或者是 GPIO 的高低。然后编写该操控该硬件的守护进程；","定义 hiBus 数据传输协议 。使用 hibus 总线，通过用户交互界面，操作硬件设备，可以通过发送事件，或者远程过程调用的方式完成。具体使用哪种方式，由开发者自行决定。但无论哪种方式，必须首先明确 hibus 中的数据传输协议。hibus 的数据传输协议，必须符合 hibus 规范。","用户交互界面应用（行者）。通过用户交互界面（基于 MiniGUI 的进程），可操控具体的硬件设备，并且在用户界面上，能用图像、图形方式，客观反映出硬件状态的变化。"],"tR":["Linux开发环境及 C/C++ 编程","MiniGUI","hibus 协议"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"合璧操作系统设备端，硬件设备通过 hiBus 总线与用户界面通信","remark":"【相关的开源软件仓库列表】\r\n\r\n仓库：https://github.com/FMSoftCN/hibus；\r\n\r\nhiBus 协议：https://github.com/FMSoftCN/hybridos/blob/master/docs/design/hybridos-data-bus-zh.md","difficulty":"中","mentor":"耿岳","contact":"<gengyue@minigui.org>","uniont":null,"student_count":0,"description":"合璧操作系统是数据驱动的，而hiBus 是合璧操作系统提出的一个设备端数据总线技术。当守护进程侦知硬件设备状态发生变化时，通过 hiBus 总线向用户界面发送数据。用户界面能及时发应硬件状态的变化。    用户交互与设备操控的分离，是合璧操作系统的基本编程思想。而 hibus 总线，则将两部分有效组织起来，完成预定的功能。","label":"210260238","link":"","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS"],"oR":["明确硬件设备的操作，编写硬件设备操作的守护进程。开发者根据自己的硬件设备，明确操作设备的行为。比如开发板上的按键，或者是通信串口的输入数据，然后编写该操控该硬件的守护进程。","定义 hiBus 数据传输协议。硬件设备状态的变化，通过 hibus 总线，发往用户界面。可以通过发送事件，或者远程过程调用的方式完成。具体使用哪种方式，由开发者自行决定。但无论哪种方式，必须首先明确 hibus 中的数据传输协议。hibus 的数据传输协议，必须符合 hibus 规范。","用户交互界面应用（行者）。通过用户交互界面（基于 MiniGUI 的进程），能用图像、图形的方式，客观反映出硬件状态的变化。"],"tR":["Linux开发环境及 C/C++ 编程","MiniGUI","hibus 协议"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"},{"name":"合璧操作系统设备端基于rsvg技术的动画实现","remark":"【相关的开源软件仓库列表】\r\n\r\nhttps://gitlab.fmsoft.cn/VincentWei/minigui.git -b rel-5-0；\r\nhttps://gitlab.fmsoft.cn/VincentWei/mgeff.git -b rel-5-0；\r\nhttps://gitlab.fmsoft.cn/hybridos/hicairo.git -b minigui-backend；\r\nhttps://gitlab.fmsoft.cn/hybridos/hirsvg.git -b minigui-backend","difficulty":"中","mentor":"薛淑明","contact":"<xueshuming@minigui.org>","uniont":null,"student_count":0,"description":"在合璧操作系统中，整合了 rsvg 矢量图形技术，消除了图像显示的毛边、锯齿，提供了更好的用户体验。利用 rsvg 和 MiniGUI 提供的 MGEFF_ANIMATION 类型，完成 rsvg 图片的动画效果。","label":"210260239","link":"","tech_tag":["Linux","C","RTOS","C++","IoT"],"domain_tag":["OS"],"oR":["使用多个 rsvg 图片，分别完成旋转、平移、缩放三种动画效果。","使用 mgeff 所提供的 MGEFF_ANIMATION 类型及相关操作，用以实现各帧之间的时间间隔处理。","两个 MiniGUI 应用程序，完成相同的动画效果，分别使用 MGEFF_ANIMATION 的同步、异步操作完成。"],"tR":["Linux开发环境及 C/C++ 编程","MiniGUI","meeff","hirsvg"],"orgID":256,"spl":1,"organchor":"hgbczxjt","orgname":"合璧操作系统"}]},{"userId":270,"anchor":"linux","slide":"","video":"","img":"lug@ustc.png","title":"中科大学生 Linux 用户协会","orgType":1,"project_url":"https://lug.ustc.edu.cn/news/2021/04/opensource-summer-iscas/","url":"https://lug.ustc.edu.cn/","description":"科⼤的⼀个技术类、Linux/⾃由软件社团","full_des":"中国科学技术大学学生 Linux 用户协会（科大 LUG）是由在校的 GNU/Linux 爱好者发起并组成的全校性群众团体，是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织","tech_tag":["Go","Linux","Python","JavaScript","Container","NodeJS","React","Rust","TypeScript","Stroage","Git","Docker"],"domain_tag":["Linux Kernel","OS","Container","Web","Mirrors"],"mail_list":"ustc_lug@googlegroups.com","email":"lug@ustc.edu.cn","project_list":[]},{"userId":279,"anchor":"longgui","slide":"","video":"","img":"longgui.png","title":"龙归科技","orgType":1,"project_url":"","url":"https://www.longguikeji.com/home","description":"北京「龙归科技」是一个专注于低代码赋能企业级信息化服务提供商。核心创始人团队来自绿盟安全、红帽开源操作系统、知名游戏玩蟹科技、知名开源社区等专家共同创立。 ArkID 方舟一账通：是一个开源 IDaaS 框架，基于 Vue + Django 框架，插件化、多租户、支持多种认证协议","full_des":"「龙归科技」致力于让中国每一个企业拥有专属的自动化办公操作系统，助力企业或政府拥抱（Cloud Native First）云原生优先战略，帮助客户构筑以「身份与应用」为中心的现代化 IT 基础设施！从而实现「企业数字化转型」及「软件行业工业化生产」 ！ 主打产品：ArkID 方舟一帐通，统一身份认证平台；ArkOS 方舟操作系统：一个企业级办公自动化操作系统，结合自研低代码应用开发平台，构建产业生态，专注为各类企业与组织机构打造一体化全栈云原生平台。系统自带应用包括：ArkID，ArkIDE，ArkPlatform，App Store 等产品。截至目前，公司已经获得 15个 软件著作权、2个 发明专利，并与2020年11月份，获得 北京海淀区中关村国家高新技术企业认定。 ArkID 方舟一账通：是一个开源 IDaaS 框架，基于 Vue + Django 框架，插件化、多租户、支持多种认证协议，如：OAuth 2.0、LDAP、SAML 2.0、OIDC 等。既可作为企业终端客户统一管理 CIAM，也可作为企业内部雇员、外部伙伴统一身份管理IAM。彻底告别企业内多系统、多账号的治理烦恼, 保障企业信息安全！聚焦在在数字政府一网通办、智慧教育、智慧医疗、智慧交通、金融科技、工业互联网-数字化转型等多系统账号体系打通场景！","tech_tag":["OS","Cloud Native","Container","Programming Language"],"domain_tag":["Python","JavaScript","NodeJS","TypeScript","Automation","Git","Docker"],"mail_list":"","email":"bd@longguikeji.com","project_list":[]},{"userId":377,"anchor":"gitcourse","slide":"","video":"","img":"gitcourse.jpg","title":"gitcourse","orgType":1,"project_url":"","url":"http://gitcourse-io.kfcoding.com/","description":"在线编程实训平台","full_des":"GitCourse 是一款强大的在线实训工具，其基于 Markdown 进行内容渲染，基于 Git 进行分布式内容创作协作，使用 Docker 作为实训环境，覆盖在线实训的各个场景。","tech_tag":["Go","Linux","Cloud Native","Container","JavaScript","React","TypeScript","Git","Docker"],"domain_tag":["Cloud Native","Container","Distributed System","Web"],"mail_list":"wsl@hypertrons.io liuchangfreeman@live.com","email":"dev@hypertrons.io","project_list":[{"name":"为gitcourse补全文档","remark":null,"difficulty":"中","mentor":"刘畅","contact":"<liuchangfreeman@outlook.com>","uniont":null,"student_count":0,"description":"gitcourse是一款基于react和docker开发的在线编程实训产品，开发者可以使用git托管的方式定制自己的编程实践课程。本项目希望能够梳理gitcourse的api特性，为使用者提供一份可靠的文档与使用方法例程。详见http://gitcourse-io.kfcoding.com","label":"210480444","link":"","tech_tag":["Linux","Cloud Native","JavaScript","Container","React","Git","Docker"],"domain_tag":["Cloud Native","Dev Tools","Container","Web"],"oR":["完善gitcourse开发者文档","编写gitcourse使用方法例程"],"tR":["有文档编写经验","有Docker容器开发的经验","熟悉Web前端开发"],"orgID":377,"spl":1,"organchor":"gitcourse","orgname":"gitcourse"}]},{"userId":49,"anchor":"shengpai","slide":"","video":"","img":"senparc.png","title":"盛派开发者社区","orgType":1,"project_url":"","url":"https://dev.senparc.com/","description":"盛派开发者社区诞生于2012年，以微信开发为起点，辐射到相关系统的技术研发，社区汇聚了一大批微信及信息系统开发者，重点维护的开源项目包括微信 .NET SDK：Senparc.Weixin SDK、系统框架 NeuCharFramework（NCF），其中 Senparc.Weixin SDK 是使用率超过 95% 的 .NET 微信 SDK，也是目前 GitHub 综合排名第一的中国 C# 开源项目（https://github.com/JeffreySu/WeiXinMPSDK），为 .NET 在中国软件行业的实践做出了突出的贡献。","full_des":"盛派开发者社区诞生于2012年，以微信开发为起点，辐射到相关系统的技术研发，社区汇聚了一大批微信及信息系统开发者，重点维护的开源项目包括微信 .NET SDK：Senparc.Weixin SDK、系统框架 NeuCharFramework（NCF），其中 Senparc.Weixin SDK 是使用率超过 95% 的 .NET 微信 SDK，也是目前 GitHub 综合排名第一的中国 C# 开源项目（https://github.com/JeffreySu/WeiXinMPSDK），为 .NET 在中国软件行业的实践做出了突出的贡献。","domain_tag":["AI","Dev Tools","Virtualization","Distributed System","Web","Programming"],"tech_tag":["Python","Distributed System","Database","TypeScript","Automation","Git","Micro Service","Storage","Docker","IoT","C#",".NET Core"],"mail_list":"zsu@senparc.com","email":"zsu@senparc.com","project_list":[]},{"userId":52,"anchor":"linuxneihe","slide":"","video":"","img":"linuxneihe.jpg","title":"Linux内核之旅开源社区","orgType":1,"project_url":"","url":"http://kerneltravel.net/","description":"Linux内核爱好者学习内核和参与相关开源项目的家园。","full_des":"Linux内核之旅开源社区是一个完全自由和开放的平台，创建于2004年，重构于2020年，社区以国际开源社区的方式运作，所有人都可以参与到Linux内核之旅开源社区的共建中，您是贡献者，也是受益者。社区由网站、公众号、慕课、Github和视频网站五大模块构成，为Linux内核爱好者提供丰富的学习资源，恳请你的参与。","tech_tag":["Go","Linux","Python","C","Kubernetes","Git","Docker"],"domain_tag":["Linux Kernel","OS","Container","Virtualization","Tracing"],"mail_list":null,"email":"kerneltravel@groups.163.com","project_list":[]},{"userId":55,"anchor":"yunionio","slide":"","video":"","img":"yunionio.jpg","title":"yunionio","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://github.com/yunionio","description":"云联融合云（Yunion Cloud）是一个开源的多云平台。","full_des":"云联融合云（Yunion Cloud）是一个开源的多云平台。融合云构建在用户分布于多云基础设施之上，通过技术手段将分布于多云的异构IT资源统一管理，将多底层多云的差异向用户屏蔽，并通过网络和调度实现资源的融合与打通，在多云之上进行抽象，向用户呈现统一的使用界面和API接口，让用户就像使用一个云平台一样使用分布于多云的资源，实现一个统一的“云上之云”的云平台。","tech_tag":["Cloud Native","Container","Virtualization"],"domain_tag":["Cloud Native","Go","Linux","Container","Kubernetes","Automation","Git","Docker"],"mail_list":"","email":"operation@yunion.cn","project_list":[]},{"userId":474,"anchor":"aos","slide":"","video":"","img":"aos.jpg","title":"AOS","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://aos.dev/docs","description":"AOS 致力于构建一个面向应用的抽象存储层，目前主要专注于该存储层的 Golang 实现。","full_des":"AOS 基于一个抽象的存储层构建，它向下能够对接各种各样的存储服务（比如本地文件系统，s3, gcs, oss 等对象存储服务，dropbox, google drive 等网盘服务），向上能够提供统一的存储接口给应用，比如数据备份，迁移，管理等应用。目前社区专注于 aos for golang，也就是 go-storage ( https://github.com/aos-dev/go-storage ) 的实现。截止目前，go-storage 已经支持了 10 个服务，包括文件存储，国内外主流对象存储服务和 Dropbox，我们期望能够支持更多的服务。","tech_tag":["Go","Storage","Git"],"domain_tag":["Cloud Native","Dev Tools","Programming Language","Storage"],"mail_list":"github@xuanwo.io","email":"github@xuanwo.io","project_list":[{"name":"go-storage 的 FTP 实现","remark":null,"difficulty":"中","mentor":"任忠良","contact":"<lanceren@yunify.com>","uniont":"丁皓<i@xuanwo.io>","student_count":0,"description":"FTP 是互联网历史上最悠久的网络工具，至今仍在多个领域被广泛使用。这个项目将会为 FTP 实现 go-storage 的 Storager 接口，使得用户能够使用统一的接口来操作 FTP 服务器上的数据。","label":"210570241","link":"","tech_tag":["Go","Storage","FTP"],"domain_tag":["Cloud Native","Dev Tools","Programming Language"],"oR":["go-service-ftp 实现 Storager API","go-service-ftp 文档上线","go-service-ftp 的示例上线","go-service-ftp 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"go-storage 的 minio 实现","remark":"","difficulty":"中","mentor":"任忠良","contact":"<lanceren@yunify.com>","uniont":"丁皓<i@xuanwo.io>","student_count":0,"description":"minio 是一款开源的云原生高性能对象存储服务，这个项目将会使用 minio 原生的 SDK 来实现 go-storage 的 Storager 接口，使得用户能够通过统一的接口来操作 minio 服务器上的数据。","label":"210570249","link":"","tech_tag":["Go","Storage","Git","minio"],"domain_tag":["Cloud Native","Dev Tools","Programming Language"],"oR":["go-service-minio 实现 Storager 接口","go-service-minio 文档上线","go-service-minio 示例上线","go-service-minio 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"go-storage 的 WebDAV 实现","remark":"","difficulty":"中","mentor":"丁皓","contact":"<i@xuanwo.io>","uniont":null,"student_count":0,"description":"WebDAV 是 HTTP/1.1 协议的扩展，它允许客户机执行远程 Web 内容操作。这个项目将会为 WebDAV 实现 go-storage 的 Storager 接口，使得用户能够使用统一的接口来操作 WebDAV 服务器上的数据。","label":"210570292","link":"","tech_tag":["Go","Storage","WebDAV"],"domain_tag":["Dev Tools","Programming Language"],"oR":["go-service-webdav 实现 Storager 接口","go-service-webdav 完成文档","go-service-webdav 完成示例","go-service-webdav 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"go-storage 的 HDFS 实现","remark":"","difficulty":"中","mentor":"沈天笑","contact":"<tianxiaoshen@yunify.com>","uniont":null,"student_count":0,"description":"Hadoop 分布式文件系统 (HDFS) 是一款为大规模数据集上的应用开发的分布式文件系统，这个项目将会为 HDFS 实现 go-storage 的 Storager 接口，使得用户能够通过统一的接口来操作 HDFS 服务上的数据。","label":"210570293","link":"","tech_tag":["Go","Storage","Git","HDFS"],"domain_tag":["Dev Tools","Programming Language"],"oR":["go-service-hdfs 实现 Storager 接口","go-service-hdfs 完成文档","go-service-hdfs 完成示例","go-service-hdfs 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"go-storage 的 ipfs","remark":"","difficulty":"中","mentor":"沈天笑","contact":"<tianxiaoshen@yunify.com>","uniont":"丁皓<i@xuanwo.io>","student_count":0,"description":"the InterPlanetary File System（IPFS）即星际文件系统，是一种基于内容寻址、版本化、点对点的超媒体传输协议，集合了P2P网络技术、BitTorrent 传输技术、Git 版本控制、自证明文件系统等技术，对标 HTTP 的新一代通信协议。这个项目将会为 IPFS 实现 go-storage 的 Storager 接口，使得用户能够通过统一的接口来操作 ipfs 节点上的数据。","label":"210570294","link":"","tech_tag":["Go","Distributed System","Storage","Git","IPFS"],"domain_tag":["Dev Tools","Distributed System","Programming Language"],"oR":["go-service-ipfs 实现 Storager 接口","go-service-ipfs 完成文档","go-service-ipfs 完成示例","go-service-ipfs 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"go-storage 的 Storj","remark":"","difficulty":"中","mentor":"丁皓","contact":"<i@xuanwo.io>","uniont":null,"student_count":0,"description":"Storj 是一个去中心化的云存储框架网络平台，这个项目将会为 Storj 实现 go-storage 的 Storager 接口，使得用户能够通过统一的接口来操作 Storj 服务上的数据。","label":"210570295","link":"","tech_tag":["Go","Storage","Git","Storj"],"domain_tag":["Distributed System","Programming Language"],"oR":["go-service-storj 实现 Storager","go-service-storj 完成文档","go-service-storj 完成示例","go-service-storj 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"},{"name":"基于 go-storage 开发一个 ftp 服务器","remark":null,"difficulty":"中","mentor":"任忠良","contact":"<lanceren@yunify.com>","uniont":"丁皓<i@xuanwo.io>","student_count":0,"description":"FTP 是互联网历史上最悠久的网络工具，至今仍在多个领域被广泛使用。这个项目将会基于 go-storage 开发一个 FTP 服务器。","label":"210570296","link":"","tech_tag":["Go","Storage","Git","FTP"],"domain_tag":["Dev Tools","Programming Language"],"oR":["go-service-ftp 实现 Storager 接口","go-service-ftp 完成文档","go-service-ftp 完成示例","go-service-ftp 通过集成测试"],"tR":["Golang","Git"],"orgID":474,"spl":1,"organchor":"aos","orgname":"AOS"}]},{"userId":538,"anchor":"xmake","slide":"","video":"","img":"xmake.png","title":"xmake","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://xmake.io","description":"XMake 是一个基于 Lua 的 现代化 C/C++ 构建系统。","full_des":"Xmake 是一个基于 Lua 的轻量级跨平台 C/C++ 构建工具，使用 xmake.lua 维护项目构建，相比 makefile/CMakeLists.txt 而言，配置语法更加简洁直观，对新手非常友好，短时间内就能快速入门 C/C++ 项目的编译开发，提供一站式跨平台编译、运行、调试、打包、安装等操作，能够让大家把更多的精力集中在实际的项目开发上。","tech_tag":["Linux","C","C++"],"domain_tag":["Programming Language","Build System","编译工具","跨平台开发","包管理"],"mail_list":"waruqi@gmail.com","email":"waruqi@gmail.com","project_list":[{"name":"重构升级基于 xmake 的 IntelliJ IDEA 插件","remark":null,"difficulty":"中","mentor":"王润清","contact":"<waruqi@126.com>","uniont":null,"student_count":0,"description":"原有插件项目地址：https://github.com/xmake-io/xmake-idea    原有的插件代码太老，Clion/Idea 等 2021 新版本已经完全不兼容，需要重构下。    并且需要在现有功能的基础上，增加 intelligense 和 断点调试支持。","label":"210600281","link":"","tech_tag":["Java","C","C++","kotlin"],"domain_tag":["Programming Language","Build System"],"oR":["支持最新版 Idea/Clion IDE 2021","完全支持老插件的所有功能，创建，配置，编译和运行","C/C++ Intelligense 支持","xmake.lua 的自动补全","断点调试支持"],"tR":["熟悉基础 xmake 使用","熟悉 C/C++ 开发","熟悉 java/kotlin 开发","熟悉 Idea 插件开发"],"orgID":538,"spl":1,"organchor":"xmake","orgname":"xmake"},{"name":"实现 xcode 工程生成插件","remark":null,"difficulty":"中","mentor":"王润清","contact":"<waruqi@126.com>","uniont":null,"student_count":0,"description":"将 xmake.lua 维护的 C/C++ 项目，通过 `xmake project -k xcode` 命令，生成完整的 xcode 工程文件，并且能够在 xcode 中编译运行项目。","label":"210600284","link":"","tech_tag":["lua"],"domain_tag":["Build System"],"oR":["生成 xcode 工程文件","支持在 xcode 中编译运行","支持分组展示源文件树","支持 debug 和 release 等模式切换"],"tR":["熟悉 lua","熟悉 C/C++ 开发","熟悉 xcode 开发","需要 macOS 和 Xcode 开发环境"],"orgID":538,"spl":1,"organchor":"xmake","orgname":"xmake"},{"name":"xmake 仓库包制作","remark":null,"difficulty":"低","mentor":"王润清","contact":"<waruqi@126.com>","uniont":null,"student_count":0,"description":"在 xmake 的官方 C/C++ 仓库 https://github.com/xmake-io/xmake-repo 中，新增提交 20 个常用的 C/C++ 库    其中，需要包括以下开发库：    1. matlab sdk 开发库  2. gtk3/glib 系列相关库    剩下的自己挑选一些 github star &gt; 500 的 C/C++ 库提交收录。","label":"210600285","link":"","tech_tag":["Linux","C","C++","Git"],"domain_tag":["Build System"],"oR":["完成 matlab 相关库收录","完成 gtk 库收录","完成 glib 库收录","完成其他 C/C++ 库收录"],"tR":["熟悉 lua","熟悉 C/C++ 开发","熟悉 matlab","熟悉 linux / windows 上开发"],"orgID":538,"spl":1,"organchor":"xmake","orgname":"xmake"}]},{"userId":439,"anchor":"testerhome","slide":"","video":"","img":"testerhome.png","title":"TesterHome","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://testerhome.com/","description":"TesterHome社区，测试之家，由众多测试工程师组织和维护的技术社区，致力于帮助新人成长，提高测试地位，推进质量发展。","full_des":"关于我们TesterHome 是公益性的测试技术社区，帮助测试新人成长，提高测试工程师地位，推动测试行业的技术发展社区的特色开源分享草根接地气社群文化联系我们社区小助手微信：testerhomer商务合作邮箱 bd@testerhome.com","tech_tag":["Python","Java"],"domain_tag":["Dev Tools"],"mail_list":"","email":"bd@testerhome.com","project_list":[]},{"userId":486,"anchor":"graphscope","slide":"","video":"","img":"graphscope.png","title":"GraphScope","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://graphscope.io","description":"一站式大规模分布式图计算系统","full_des":"GraphScope 是阿里巴巴达摩院智能计算实验室研发并开源的一站式大规模分布式图计算系统，支持图交互查询、图分析、图学习，通过Python客户端，能十分方便的完成图计算相关任务以及对接上下游工作流，具有一站式、开发便捷、性能极致等特点。GraphScope 具有高效的跨引擎内存管理，在业界首次支持Gremlin分布式编译优化，同时支持算法的自动并行化和支持自动增量化处理动态图更新，提供了企业级场景的极致性能。在实际应用中，GraphScope已经证明能在多个关键互联网领域（如风控，电商推荐，广告，网络安全，知识图谱等）实现重要的业务新价值。","tech_tag":["Python","C++","Rust","Kubernetes"],"domain_tag":["AI","Cloud Native","Big Data","Distributed System","graph computing"],"mail_list":"","email":"graphscope@alibaba-inc.com","project_list":[]},{"userId":557,"anchor":"chshdxmglrj","slide":"","video":"","img":"zentao.jpg","title":"禅道项目管理软件","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://www.zentao.net","description":"禅道是一款覆盖全生命周期的开源项目管理软件。","full_des":"禅道是一款覆盖全生命周期的开源项目管理软件。它集产品管理、项目管理、质量管理、文档管理、组织管理和事务管理于一体，完整覆盖研发项目管理的核心流程。禅道管理思想注重实效，功能完备丰富，操作简洁高效，搜索功能强大，统计报表丰富多样，软件架构合理，扩展灵活。旗舰版全面升级为通用的项目管理平台，不仅限于研发过程的管理。一方面将管理过程往前做了延展，延伸到公司的战略管理层面；另一方面完善管理模型，在敏捷模型的基础上增加了瀑布模型，支持多种开发模式。禅道项目管理软件目前国内市场占有率第一，已拥有上万家企业级用户，数十万用户群体，覆盖社会各行各业。","tech_tag":["Linux","JavaScript","PHP","Git","Docker"],"domain_tag":["Dev Tools"],"mail_list":"chenqi@cnezsoft.com","email":"co@zentao.net","project_list":[]},{"userId":542,"anchor":"mindspore","slide":"","video":"","img":"mindspore.png","title":"MindSpore","project_url":"","url":"https://www.mindspore.cn","description":"MindSpore是围绕全场景AI计算框架的开源社区","full_des":"MindSpore是面向端边云全场景的深度学习训练推理框架，作为国内第一热度的AI开源社区，MindSpore社区通过丰富繁多的社区活动、开放的社区架构、全球化的社区合作，为开发者提供最亲和的开源体验","tech_tag":["Python","Java","Cloud Native","Container","AI","C++","Distributed System","Rust","Deep Learning Framework"],"domain_tag":["AI","Container"],"mail_list":"mindspore-discuss@mindspore.cn","email":"contact@mindspore.cn","project_list":[{"name":"基于MindSpore实现具有边训练边验证功能的模型训练接口","remark":null,"difficulty":"中","mentor":"王南","contact":"<wangnan39@huawei.com>","uniont":null,"student_count":0,"description":"Keras支持函数式接口fit（），可以在模型训练时边训练边验证，使用灵活方便  现需参考Keras fit接口的实现，为MindSpore Model模块新增类似fit的接口，可以传入训练集和验证集，实现在训练过程中进行评估的功能。  Keras fit接口参考：https://www.jianshu.com/p/9ba27074044f  MindSpore官方教程：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html  MindSpore代码仓：https://gitee.com/mindspore/mindspore","label":"210610317","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["为MindSpore Model模块新增类似fit的接口，可以传入训练集和验证集，实现在训练过程中进行评估的功能","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"实现MindSpore分布式算子：Xdivy/Xlogy/TruncateDiv/TruncateMod/BitwiseAnd/BitwiseOr/BitwiseXor","remark":null,"difficulty":"低","mentor":"杨振章","contact":"<yangzhenzhang@huawei.com>","uniont":null,"student_count":0,"description":"针对该单算子的计算逻辑，分析其输入的哪些维度可以进行切分，并实现该切分，且保证切分后的执行结果与单算子的执行结果一致；  主体代码实现放到以下目录： mindspore/ccsrc/frontend/parallel/ops_info/；","label":"210610318","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["如果能继承现有的实现则继承即可，如果不能继承现有的实现则新增对应的文件并实现；","实现相关功能和创新特性，代码达到合入社区标准及规范","实现需支持手动配置策略，及自动搜索策略两种模式；","1）增加ut用例，验证构图是否符合期望；3）增加st用例，端到端验证分布式算子的精度与单机算子是否一致；"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"实现MindSpore分布式算子：AccumulateNV2/CumProd/SquareSumAll","remark":null,"difficulty":"低","mentor":"杨振章","contact":"<yangzhenzhang@huawei.com>","uniont":null,"student_count":0,"description":"针对该单算子的计算逻辑，分析其输入的哪些维度可以进行切分，并实现该切分，且保证切分后的执行结果与单算子的执行结果一致；  主体代码实现放到以下目录： mindspore/ccsrc/frontend/parallel/ops_info/；","label":"210610319","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["针对该单算子的计算逻辑，分析其输入的哪些维度可以进行切分，并实现该切分，且保证切分后的执行结果与单算子的执行结果一致","实现相关功能和创新特性，代码达到合入社区标准及规范","主体代码实现放到以下目录： mindspore/ccsrc/frontend/parallel/ops_info/；","1）增加ut用例，验证构图是否符合期望；4）增加st用例，端到端验证分布式算子的精度与单机算子是否一致；","实现需支持手动配置策略，及自动搜索策略两种模式；"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"扩展MindSpore静态图完备性，支持tuple或者list和number相乘、实现dict的items接口","remark":null,"difficulty":"低","mentor":"张步学","contact":"<zhangbuxue@huawei.com>","uniont":null,"student_count":0,"description":"1.图模式下，construct函数里支持tuple或者与int数相乘，结果要与Python语法一致。  2.图模式下，construct函数里支持dict调用items接口","label":"210610320","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["实现通过items接口对dict进行遍历，接口返回一个tuple，里面每个元素都是由一个key和对应的value组成的小tuple，小tuple按key在dict里的顺序存放。","实现相关功能和创新特性，代码达到合入社区标准及规范","图模式下，construct函数里支持tuple或者与int数相乘，结果要与Python语法一致。"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"扩展MindSpore静态图完备性，实现list切片","remark":null,"difficulty":"中","mentor":"张步学","contact":"<zhangbuxue@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore，在图模式下，使能construct函数里支持list进行切片的功能  list切片参考：  python里的list切片包含以下几种：  切片：取一个list的部分元素是非常常见的操作  L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素  倒序切片：对于list，既然支持L[-1]取倒数第一个元素，那么它同样支持倒数切片  字符串切片：字符串 ‘xxx’和 Unicode字符串 u’xxx’也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串","label":"210610321","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["结果与python语法一致，取出切到元素组成新的list。 例如，x = [1, 2, 3, 4, 5] x[1:4] -&gt; [2, 3, 4]","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"扩展MindSpore静态图完备性，支持filter函数","remark":null,"difficulty":"中","mentor":"张步学","contact":"<zhangbuxue@huawei.com>","uniont":null,"student_count":0,"description":"图模式下，construct函数里支持调用Python内置函数filter，用法与Python语法一致","label":"210610322","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["输入一个返回值为bool类型的函数和一个序列，输出是一个序列里满足要求的元素组成的新序列","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore的实现推荐系统领域点击率评估算法AutoDis模型","remark":null,"difficulty":"中","mentor":"吴逸群","contact":"<wuyiqun3@huawei.com>","uniont":null,"student_count":0,"description":"课题背景：基于MindSpore的实现推荐系统领域点击率评估算法AutoDis模型，要求精度与论文中指标持平。  AutoDis论文：https://www.researchgate.net/publication/347398354_AutoDis_Automatic_Discretization_for_Embedding_Numerical_Features_in_CTR_Prediction  MindSpore官方教程链接：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html","label":"210610323","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["（1）使用MindSpore定义推荐系统领域点击率评估算法AutoDis网络；定义损失函数和优化器。 （2）加载数据集并进行训练，训练完成后，查看结果及保存模型文件。 （3）加载保存的模型，进行推理。 （4）验证模型，加载测试数据集和训练后的模型，验证结果精度。","实现相关功能和创新特性，代码达到合入社区标准及规范","熟练使用Python，了解Shell及Linux操作系统基本知识；具备一定的深度学习理论知识，如卷积神经网络、损失函数、优化器，训练策略等；了解华为云的基本使用方法，包括OBS（对象存储）、ModelArts（AI开发平台）、Notebook（开发工具）、训练作业等服务；了解并熟悉MindSpore AI计算框架。（我们将提供相应的赋能和线上学习资源）"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore实现图像生成模型CGAN","remark":null,"difficulty":"中","mentor":"吴逸群","contact":"<wuyiqun3@huawei.com>","uniont":null,"student_count":0,"description":"课题背景：基于MindSpore的实现图像生成模型CGAN，要求精度与论文中指标持平。  参考论文：https://arxiv.org/pdf/1411.1784.pdf  参考pytorch实现：  参考解读：https://blog.csdn.net/solomon1558/article/details/52555083  pytorch实现参考：https://zhuanlan.zhihu.com/p/91130185  MindSpore教程：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html","label":"210610324","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["课题研究内容： （1）使用MindSpore定义图像生成模型CGAN；定义损失函数和优化器。 （2）加载数据集并进行训练，训练完成后，查看结果及保存模型文件。 （3）加载保存的模型，进行推理。 （4）验证模型，加载测试数据集和训练后的模型，验证结果精度。","实现相关功能和创新特性，代码达到合入社区标准及规范","熟练使用Python，了解Shell及Linux操作系统基本知识；具备一定的深度学习理论知识，如卷积神经网络、损失函数、优化器，训练策略等；了解华为云的基本使用方法，包括OBS（对象存储）、ModelArts（AI开发平台）、Notebook（开发工具）、训练作业等服务；了解并熟悉MindSpore AI计算框架。（我们将提供相应的赋能和线上学习资源）"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore实现图像分类模型GhostNet","remark":null,"difficulty":"中","mentor":"吴逸群","contact":"<wuyiqun3@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore的实现图像分类模型GhostNet，要求精度与论文中指标持平  参考论文：https://arxiv.org/abs/1911.11907  参考官方实现：https://github.com/huawei-noah/ghostnet  官方解读：https://zhuanlan.zhihu.com/p/109325275  MindSpore教程：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html","label":"210610325","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":[".课题研究内容： （1）使用MindSpore定义图像分类模型GhostNet；定义损失函数和优化器。 （2）加载数据集并进行训练，训练完成后，查看结果及保存模型文件。 （3）加载保存的模型，进行推理。 （4）验证模型，加载测试数据集和训练后的模型，验证结果精度。","实现相关功能和创新特性，代码达到合入社区标准及规范","熟练使用Python，了解Shell及Linux操作系统基本知识；具备一定的深度学习理论知识，如卷积神经网络、损失函数、优化器，训练策略等；了解华为云的基本使用方法，包括OBS（对象存储）、ModelArts（AI开发平台）、Notebook（开发工具）、训练作业等服务；了解并熟悉MindSpore AI计算框架。（我们将提供相应的赋能和线上学习资源）"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore实现目标检测模型fasterrcnn","remark":null,"difficulty":"中","mentor":"于溪淼","contact":"<yuximiao@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore的实现目标检测模型fasterrcnn，要求精度与论文中指标持平。  参考论文：https://arxiv.org/abs/1506.01497  参考Tensorflow实现:https://github.com/endernewton/tf-faster-rcnn  论文解读：https://blog.csdn.net/weixin_43198141/article/details/90178512  Mindspore教程：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html","label":"210610326","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["（1）使用MindSpore定义目标检测模型fasterrcnn；定义损失函数和优化器。 （2）加载数据集并进行训练，训练完成后，查看结果及保存模型文件。 （3）加载保存的模型，进行推理。 （4）验证模型，加载测试数据集和训练后的模型，验证结果精度。","实现相关功能和创新特性，代码达到合入社区标准及规范","熟练使用Python，了解Shell及Linux操作系统基本知识；具备一定的深度学习理论知识，如卷积神经网络、损失函数、优化器，训练策略等；了解华为云的基本使用方法，包括OBS（对象存储）、ModelArts（AI开发平台）、Notebook（开发工具）、训练作业等服务；了解并熟悉MindSpore AI计算框架。（我们将提供相应的赋能和线上学习资源）"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore实现姿势估计模型SimplePoseNet","remark":null,"difficulty":"中","mentor":"于溪淼","contact":"<yuximiao@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore的实现姿势估计模型SimplePoseNet，要求精度与论文中指标持平。  论文链接：https://arxiv.org/pdf/1804.06208.pdf  pytorch参考实现：https://github.com/Microsoft/human-pose-estimation.pytorch  MindSpore教程：https://mindspore.cn/tutorial/zh-CN/r1.2/index.html","label":"210610327","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["（1）使用MindSpore定义姿势估计模型SimplePoseNet；定义损失函数和优化器。 （2）加载数据集并进行训练，训练完成后，查看结果及保存模型文件。 （3）加载保存的模型，进行推理。 （4）验证模型，加载测试数据集和训练后的模型，验证结果精度。","实现相关功能和创新特性，代码达到合入社区标准及规范","熟练使用Python，了解Shell及Linux操作系统基本知识；具备一定的深度学习理论知识，如卷积神经网络、损失函数、优化器，训练策略等；了解华为云的基本使用方法，包括OBS（对象存储）、ModelArts（AI开发平台）、Notebook（开发工具）、训练作业等服务；了解并熟悉MindSpore AI计算框架。（我们将提供相应的赋能和线上学习资源）"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"进阶：基于MindSpore实现人脸识别攻击模型","remark":null,"difficulty":"高","mentor":"刘志丹","contact":"<liuzhidan5@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore实现人脸识别攻击模型，要求精度与论文中指标持平  论文：  https://openaccess.thecvf.com/content_CVPR_2019/html/Dong_Efficient_Decision-Based_Black-Box_Adversarial_Attacks_on_Face_Recognition_CVPR_2019_paper.html  数据集：https://www.kaggle.com/jessicali9530/lfw-dataset","label":"210610328","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["基于MindSpore实现人脸识别攻击模型，要求精度与论文中指标持平","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"通过MindSpore Lite Delegate对接TensorRT推理框架","remark":null,"difficulty":"中","mentor":"翟智强","contact":"<zhaizhiqiang@huawei.com>","uniont":null,"student_count":0,"description":"拓展当前MindSpore Lite后端场景支持，通过MindSpore Lite Delegate模块对接TensorRT推理框架，使能MindSpore Lite支持TensorRT后端运行  TensorRT是一个高性能的深度学习推理（Inference）优化器，可以为深度学习应用提供低延迟、高吞吐率的部署推理。TensorRT可用于对超大规模数据中心、嵌入式平台或自动驾驶平台进行推理加速。TensorRT现已能支持TensorFlow、Caffe、Mxnet、Pytorch等几乎所有的深度学习框架，将TensorRT和NVIDIA的GPU结合起来，能在几乎所有的框架中进行快速和高效的部署推理  TensorRT开发手册：https://blog.csdn.net/intflojx/article/details/85544383","label":"210610329","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["通过MindSpore Lite Delegate对接TensorRT推理框架","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"通过MindSpore Lite Delegate对接高通SPNE推理框架","remark":null,"difficulty":"中","mentor":"翟智强","contact":"<zhaizhiqiang@huawei.com>","uniont":"翟智强<zhaizhiqiang@huawei.com>","student_count":0,"description":"拓展当前MindSpore Lite后端场景支持，通过MindSpore Lite Delegate模块对接高通SPNE推理框架，使能MindSpore Lite支持高通SPNE后端运行   骁龙（SnapDragon）神经处理引擎（SNPE）是一个针对高通骁龙加速深层神经网络的运行时软件，高通在CSDN和其官网都提供了下载  骁龙NPE旨在帮助AI开发人员在优化骁龙设备上运行受过训练的神经网络的性能时，节约更多时间与精力。它提供了模型转换和执行工具，以及针对核的API，利用功率和性能配置文件匹配所需的用户体验，从而实现优化，节约开发人员的时间和精力。骁龙NPE支持卷积神经网络、长短期记忆网络（LSTM）和定制层  SPNE中文文档：https://bss.csdn.net/m/zone/qualcomm2016/resource_detail?id=1592","label":"210610330","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["通过MindSpore Lite Delegate对接高通SPNE推理框架","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"通过MindSpore Lite Delegate对接Android NN推理框架","remark":null,"difficulty":"中","mentor":"翟智强","contact":"<zhaizhiqiang@huawei.com>","uniont":null,"student_count":0,"description":"拓展当前MindSpore Lite后端场景支持，通过MindSpore Lite Delegate模块对接Android NN推理框架，使能MindSpore Lite支持Android NN后端运行  NNAPI 是 Android 用于机器学习的 API 简称。主要定位机器学习、机器算法导出的模型，在 Android运行相应的 Op算子，并且选择不同的运行策略实现加速的逻辑推理的过程  详细请参考：https://blog.csdn.net/sephyioth/article/details/107435437","label":"210610331","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["通过MindSpore Lite Delegate对接Android NN推理框架","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"risc-v 算子开发","remark":null,"difficulty":"高","mentor":"张学同","contact":"<zhangxuetong@huawei.com>","uniont":null,"student_count":0,"description":"参考mindspore自研cpu算子库nnacl，开发基于risc-v指令的算子","label":"210610332","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["要求使用向量寄存器、tiling等方式进行性能优化","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"实现MindSpore Lite运行时内存复用算法","remark":null,"difficulty":"高","mentor":"张学同","contact":"<zhangxuetong@huawei.com>","uniont":null,"student_count":0,"description":"基于当前MindSpore Lite端侧推理场景，针对runtime模块，实现运行时（包含CPU/GPU推理场景下的）内存复用算法，提高内存复用效率，降低端侧推理时的内存开销  要求支持resize input shape，需要优于当前default分配策略（路径：mindspore/lite/src/runtime/allocator.cc）","label":"210610333","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["，要求支持resize input shape，需要优于当前default分配策略（路径：mindspore/lite/src/runtime/allocator.cc）","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"优化Conv类算子","remark":null,"difficulty":"高","mentor":"李宪","contact":"<lixian16@huawei.com>","uniont":null,"student_count":0,"description":"当前MindSpore Lite卷积算子支持img2col+gemm、winograd、strassen等算法，基于当前实现进行优化","label":"210610334","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["化，优化方式可以选择新的算法，或者在当前实现上进行优化，优化目标降低时延或者时延不下降时降低内存","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"实现并行内存拷贝","remark":null,"difficulty":"高","mentor":"刘存伟","contact":"<liucunwei@huawei.com>","uniont":null,"student_count":0,"description":"针对MindData大tensor之间实现并行内存拷贝，需优于memcpy_s，当前这部分主要在：CreateFromMemory实现，对应文件路径：    mindspore/ccsrc/minddata/dataset/core/tensor.cc","label":"210610335","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["针对MindData大tensor之间实现并行内存拷贝，需优于memcpy_s","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于Profiler，在GPU设备上，统计模型的FLOPs计算量，用于判断模型的复杂度","remark":null,"difficulty":"中","mentor":"杨海涛","contact":"<yanghaitao1@huawei.com>","uniont":null,"student_count":0,"description":"基于Profiler，在GPU设备上，统计模型的FLOPs计算量，用于判断模型的复杂度  备注：当前MindSpore MindInsight可视化模块已支持NPU场景下的FLOPs计算量统计，可参考进行GPU场景适配和移植","label":"210610336","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["基于Profiler，在GPU设备上，统计模型的FLOPs计算量，用于判断模型的复杂度","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore 通过bi-lstm结合CRF实现词性标注","remark":null,"difficulty":"中","mentor":"苑玉杰","contact":"<yuanyujie@huawei.com>","uniont":null,"student_count":0,"description":"词性标注是自然语言处理的一个应用，是给单词指定标签的过程。CRF是给定一组输入随机变量条件下另一组输出随机变量的条件概率分布模型，其特点是假设输出随机变量构成马尔科夫随机场。条件随机场可以用于不同的预测问题，这时主要使用的线性链条件随机场，将线性链条件随机场应用于标注问题是Lafferty等人在2001年提出的。线性链条件随机场中的状态变量形成一个线性链，类似于数据结构中的链表结构，每个节点只与前一个节点（如果存在）及后一个节点（如果存在）有关，即在时间序列中每个变量只和前一时刻、后一个时刻的变量有关","label":"210610337","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["基于MindSpore 通过bi-lstm结合CRF实现词性标注","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore，使用DFCNN和CTC损失函数的声学模型实现","remark":null,"difficulty":"中","mentor":"苑玉杰","contact":"<yuanyujie@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore，将一句语音转化成一张特定模式的图像作为输入，然后通过DFCNN+CTC结构，对整句语音进行建模，实现输出单元直接与最终的识别结果（音节）相对应","label":"210610338","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["实现输出单元直接与最终的识别结果（音节）相对应","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore，实现手写汉字识别","remark":null,"difficulty":"中","mentor":"苑玉杰","contact":"<yuanyujie@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore，实现手写汉字识别（可自己选择目标检测和分类算法，也可以基于CRNN+CTCloss方法实现，实现方法不做限制）  参考：1. 手写识别通常包涵更多的信息（这里指的是在线识别，我接触到的高识别率手写识别都是在线识别）， 如笔画顺序， 连笔等。 这些细节看似简单， 却在无形之中给识别提供了不少的特征， 有助于识别率的提升。    2. 手写识别的样本预处理比较容易。 与OCR相比，手写输入的文字需要的预处理步骤较少。 通常手写是一个字符一个字符录入，位置比较固定，不会有太大的旋转角度。 而OCR， 你是无法预知文字排布的。 OCR的样本通常来自于扫描，拍照，样本在分辨率上显然不如手写识别， 而且会有很多噪声。 特征提取一般都是像素级别的， 因此这些噪声对于识别来说是一个很大的挑战， 尤其是对于中文这种字符集庞大且复杂的语言。    3. 手写识别还有一个特性是它的识别过程是人为干预的。当输入一个字符时，识别引擎会根据输入给出若干的识别结果，得分最高的为默认结果。如果这个结果不是你想要的，你仍然可以在若干个候选结果中选择。而OCR，一个输入对应一个输出，最终你看到的只是分类得分最高的结果不能对识别进行实时的控制","label":"210610339","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["实现手写汉字识别，能较准确的对标准字体的手写文字进行识别","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore 端到端实现 CPU backend 复数计算","remark":null,"difficulty":"高","mentor":"白华伟","contact":"<baihuawei@huawei.com>","uniont":"赖勇强<laiyongqiang1@huawei.com>","student_count":0,"description":"基于MindSpore 端到端实现 CPU backend 复数计算（加减乘除）  复数运算法则有：加减法、乘除法。两个复数的和依然是复数，它的实部是原来两个复数实部的和，它的虚部是原来两个虚部的和。复数的加法满足交换律和结合律。此外，复数作为幂和对数的底数、指数、真数时，其运算规则可由欧拉公式e^iθ=cos θ+i sin θ（弧度制）推导而得  详细数学计算逻辑可参考：https://baike.baidu.com/item/%E5%A4%8D%E6%95%B0%E8%BF%90%E7%AE%97%E6%B3%95%E5%88%99/2568041?fr=aladdin","label":"210610340","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["基于MindSpore 端到端实现 CPU backend 复数计算（加减乘除）","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"改造MindSpore CPU 后端内存分配使用池化","remark":null,"difficulty":"中","mentor":"卢家乐","contact":"<lujiale@huawei.com>","uniont":"姜建飞<jiangjianfei3@huawei.com>","student_count":0,"description":"对MindS pore CPU场景 后端内存分配策略进行改造 和优化，使用内存池化机制提高内存分配效率  MindSpore内存管理代码路径供参考：mindspore/ccsrc/runtime/device/cpu/cpu_memory_manager.h  内存池化机制：首先是创建内存池。这个过程的主要任务是预先分配足够大的内存，形成一个初步的“内存池”。分配内存，也就是用户请求内存时，会返回内存池中一块空闲的内存，并将其标志置为已使用，当然具体细节和方法有很多。释放内存时，不是真正地调用free或是delete的过程，而是把内存放回内存池的过程。在把内存放入内存池的同时，要把标志位置为空闲。最后在应用程序结束时，要把内存池销毁。这里主要做的工作就是把内存池中的每一块内存释放。  优点：  1、减少了内存碎片的产生。这个可以从创建内存池的过程中看出。我们在创建内存池时，分配的都是一块块比较整的内存块，这样可以减少内存碎片的产生。   2、提高了内存的使用效率。这个可以从分配内存和释放内存的过程中看出。每次的分配与释放并不是去调用系统提供的函数或是操作符去操作实际的内存，而是在复用内存池中的内存。  缺点：  很有可能会造成内存的浪费，原因也很明显，开始分配了一大块内存，不是全部都用得到的","label":"210610341","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["改造 CPU 后端内存分配使用池化","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"实现一个 MindSpore 图层 IR 融合优化 pass","remark":null,"difficulty":"低","mentor":"俞超杰","contact":"<yuchaojie1@huawei.com>","uniont":null,"student_count":0,"description":"IR融合是MindSpore性能加速的一个关键手段，实现一个 MindSpore 图层 IR 融合优化 pass，要求实现conv2d+prelu+maxpool融合， 保证融合前后精度不下降，性能提升","label":"210610342","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["保证融合前后精度不下降，性能提升","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore图编译模块实现网络 mem swap 流程","remark":null,"difficulty":"高","mentor":"王开盛","contact":"<wangkaisheng2@huawei.com>","uniont":null,"student_count":0,"description":"当一个用例网络的权重/数据不能全部存放到设备内存时，需要实现网络流程 mem swap 流程。例如 subgraph1 中的权重/数据已经占据设备内存，在subgraph2 下发时需要将 subgraph1 权重保存到host，在下个迭代切换重新载入数据，请基于MindSpore图编译模块实现网络 mem swap 流程","label":"210610343","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["要求流程打通，精度无问题。性能可忽略。","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"扩展MindSpore中CV类数据处理算子","remark":null,"difficulty":"中","mentor":"肖天赐","contact":"<xiaotianci1@huawei.com>","uniont":null,"student_count":0,"description":"\"目前MindSpore中的CV类数据处理算子主要支持3通道图像，  无法满足对单通道图像及视频类数据的处理需求，  需要开发者根据算子的具体实现方式。\"","label":"210610344","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["扩展MindSpore中CV类数据处理算子，使其支持任意维度Tensor","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"编写常用数据集加载脚本","remark":null,"difficulty":"低","mentor":"骆阳","contact":"<luoyang42@huawei.com>","uniont":null,"student_count":0,"description":"\"目前MindSpore缺少各种利用GeneratorDataset加载常用数据集的脚本  （类似Pytorch的DataLoader）。\"","label":"210610345","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["丰富此类脚本对于引导用户使用MindSpore进行训练、推理有较好的意义","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"编写常用数据集转换MindRecord脚本","remark":null,"difficulty":"低","mentor":"郭志建","contact":"<guozhijian@huawei.com>","uniont":null,"student_count":0,"description":"\"目前MindSpore缺少各种常用数据集转换MindRecord的脚本，  丰富此类脚本对于引导用户使用MindSpore进行训练、推理有较好的意义。\"","label":"210610346","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["丰富此类脚本对于引导用户使用MindSpore进行训练、推理有较好的意义。","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"遥感图像数据处理分析","remark":null,"difficulty":"高","mentor":"李咏","contact":"<liyong126@huawei.com>","uniont":null,"student_count":0,"description":"\"参考现有ModelZoo上的语义分割网络，  编写针对遥感图像的数据处理脚本，根据loss值来调整数据处理方式。\"","label":"210610347","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["编写针对遥感图像的数据处理脚本，根据loss值来调整数据处理方式。","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"编写视频类网络GPU算子","remark":null,"difficulty":"高","mentor":"李政龙","contact":"<lizhenglong2@huawei.com>","uniont":null,"student_count":0,"description":"\"参考现有Ascend310算子runtime编写视频处理类GPU算子\"","label":"210610348","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["调用Cuda库函数分配计算资源并且实现Tensor在CPU内存和GPU显存之间的拷贝","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"高效的海森堡模型求解方案","remark":null,"difficulty":"高","mentor":"徐旭升","contact":"<xuxusheng2@huawei.com>","uniont":null,"student_count":0,"description":"试通过MindQuantum开发出相应的量子神经网络结构，求解N=14时该哈密顿量的基态能量。","label":"210610349","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["一小时之内求解得到结果。","实现相关功能和创新特性，代码达到合入社区标准及规范","不超过16核的cpu；不超过16G内存；"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"适用于求解分子基态与第一激发态能量的量子神经网络","remark":null,"difficulty":"高","mentor":"徐旭升","contact":"<xuxusheng2@huawei.com>","uniont":null,"student_count":0,"description":"用于求解分子基态与第一激发态能量的量子神经网络","label":"210610350","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["求解分子基态与第一激发态能量的量子神经网络","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"计算得到量子神经网络演化出的量子态与给定的一个或多个量子态的保真度并能够进行反向传播。","remark":null,"difficulty":"中","mentor":"徐旭升","contact":"<xuxusheng2@huawei.com>","uniont":null,"student_count":0,"description":"Swap test可以用于测量两个量子态之间的保真度，但是需要使用到的比特资源会增多，在数值模拟中并不划算。","label":"210610351","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["参考MindQuantum现有算子，开发新算子","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore的量化感知训练，扩展混合bit量化功能。","remark":null,"difficulty":"高","mentor":"邹丽琴","contact":"<zouliqin@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore的量化感知训练，采用搜索算法(例如进化算法/强化学习等)自动根据网络结构设置4/8bit混合量化策略。","label":"210610352","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["在MobileNet v2(ImageNet)上达成挑战目标：量化精度损失小于1%，模型压缩率不低于80%。","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["C++","Python","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"},{"name":"基于MindSpore实现检测模型Faster R-CNN的量化","remark":null,"difficulty":"中","mentor":"邹丽琴","contact":"<zouliqin@huawei.com>","uniont":null,"student_count":0,"description":"基于MindSpore实现检测模型Faster R-CNN（COCO2017）的量化","label":"210610353","link":"","tech_tag":["AI"],"domain_tag":["AI"],"oR":["在MindSpore Lite上验证量化后模型达到精度损失小于0.5%、模型压缩率不低于50%的目标。","实现相关功能和创新特性，代码达到合入社区标准及规范"],"tR":["python","c++","深度学习"],"orgID":542,"spl":1,"organchor":"mindspore","orgname":"MindSpore"}]},{"userId":567,"anchor":"rcoreos","slide":"","video":"","img":"rcoreos.png","title":"rCore OS","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://github.com/rcore-os/","description":"rCore OS 是探索用 Rust 语言开发系统软件的一个以学生为主的开源软件社区。rCore/zCore 是用 Rust 语言实现的小型操作系统内核，兼容 Linux 程序 / Fuchsia 程序。此项目起源于清华大学计算机系操作系统课的课程设计，目前已经发展出一整套 Rust 语言开发操作系统的解决方案和生态环境，相关成果正尝试用于操作系统课的教学实验与科研探索中。我们的使命是继续探索挖掘 Rust 语言开发底层系统的潜力，使之成为 C/C++ 之外开发 OS 的另一种选择。","full_des":"rCore OS 是探索用 Rust 语言开发系统软件的一个以学生为主的开源软件社区。rCore/zCore 是用 Rust 语言实现的小型操作系统内核，兼容 Linux 程序 / Fuchsia 程序。此项目起源于清华大学计算机系操作系统课的课程设计，目前已经发展出一整套 Rust 语言开发操作系统的解决方案和生态环境，相关成果正尝试用于操作系统课的教学实验与科研探索中。我们的使命是继续探索挖掘 Rust 语言开发底层系统的潜力，使之成为 C/C++ 之外开发 OS 的另一种选择。","tech_tag":["Rust","X86_64","ARM","RISCV","MIPS"],"domain_tag":["RUST 语言","操作系统内核"],"mail_list":"","email":"shzhxh@pku.edu.cn","project_list":[{"name":"rCore Tutorial 的 fat32 文件系统支持","remark":null,"difficulty":"低","mentor":"石振兴","contact":"<shzhxh@163.com>","uniont":"王润基<wrji0408@gmail.com>","student_count":0,"description":"rCore Tutorial 是参考 rCore 编写的 Rust 语言操作系统的教程，目标平台是 RISC-V 64。目前它仅支持一个超简的教学文件系统easy-fs，我们希望它能够支持真实文件系统。fat32文件系统是真实世界中在使用的一个文件系统，且结构简单易于实现，非常适合进一步的教学研究使用。本项目的目标是为 rCore Tutorial 引入fat32文件系统的支持，并完善相关的系统调用接口。","label":"210630393","link":"","tech_tag":["Rust","文件系统，fat32"],"domain_tag":["OS","文件系统，fat32"],"oR":["能够在qemu中正确运行包含了fat32文件系统的 rCore Tutorial","完善相关的系统调用，可以跑通全部的测试代码","能够在 K210 双核 CPU 上运行包含了fat32文件系统的rCore Tutorial"],"tR":["具备一定的 Rust 语言基础","熟悉文件系统的基本结构"],"orgID":567,"spl":1,"organchor":"rcoreos","orgname":"rCore OS"},{"name":"zCore on RISCV架构的syscalls的添加完善","remark":null,"difficulty":"中","mentor":"萧络元","contact":"<xiaoluoyuan@163.com>","uniont":"王润基<wrji0408@gmail.com>","student_count":0,"description":"zCore 是用 Rust 重新实现的 Zircon 微内核。目前我们已经按照Google官方文档的描述，实现了诸多 Zircon 内核对象，支持运行 Zircon 和 Linux shell 等基础程序。我们在持续对 zCore 进行开发，初步完成了对 RISCV 架构的支持。不过，对于复杂的Zircon 或 Linux应用程序，还需要syscalls的进一步的添加完善，以支持这些较复杂的RISCV应用程序的运行。  本项目的目标是完善zCore on RISCV架构的syscalls，使其成为一个更高质量的开源项目。","label":"210630417","link":"","tech_tag":["Linux","Rust","Zircon"],"domain_tag":["Linux Kernel","OS","RISCV"],"oR":["zCore on RISCV架构的syscalls的添加实现，至少支持 Zircon 或 Linux 内核其中之一;","zCore on RISCV架构的syscalls的添加实现，数量至少5个;"],"tR":["使用Rust语言实现zCore on RISCV架构的syscalls;","实现的syscalls可通过内核测试用例的运行;"],"orgID":567,"spl":1,"organchor":"rcoreos","orgname":"rCore OS"}]},{"userId":720,"anchor":"riscvrioslab","slide":"","video":"","img":"rioslab.png","title":"RISC-V国际开源实验室（RIOS Lab）","orgTypeDesc":"学校","orgType":4,"project_url":"","url":"https://rioslab.org","description":"专注开源架构RISC-V的高性能芯片设计和开源生开发的研究所","full_des":"RIOS在西班牙语中意为“河流”，象征着汇聚不同方面的资源，形成合力改变现有的风景线。 RISC-V国际开源实验室（RIOS Lab）是以2017年图灵奖得主大卫·帕特森教授（David A. Patterson）及其核心团队成员为基础，以清华-伯克利深圳研究院为依托单位，成立的世界领先的RISC-V开源指令集CPU及其软硬件生态体系的产业创新前沿研究机构。RIOS实验室也将以重塑第五代精简指令集（RISC-V）和信息技术发展的风景线为己任，着眼于开源芯片软硬件生态体系的充实完善，开发供全球使用的硬件设计，为定制芯片的研发节省时间与成本，提升产品制造效率，为全人类的科技发展贡献力量。","tech_tag":["Linux","C","RTOS","C++","Rust","Deep Learning Framework","Git","RTL"],"domain_tag":["Linux Kernel","OS","Dev Tools","Web","RISC-V"," Computer Architecture"," CPU Microarchitecture"," High-Performance Computing"],"mail_list":"","email":"info@rioslab.org","project_list":[]},{"userId":625,"anchor":"openmessaging","slide":"","video":"","img":"OpenMessaging.png","title":"OpenMessaging","project_url":"","url":"http://openmessaging.cloud/","description":"OpenMessaging 是由包括阿里巴巴，雅虎、滴滴出行、Splunk等国内外在内的多达40家企业共同发起的Linux基金会项目，旨在创立厂商无关、平台无关的分布式消息及流处理领域的应用开发标准。","full_des":"在云计算时代，消息通讯已经成为现代数据驱动架构的关键环节，消息中间件可以连接数据源、数据处理引擎和应用程序。然而，全球范围内，消息领域仍然存在两大问题：一是缺乏供应商中立的行业标准，导致各种消息中间件的高复杂性和不兼容性，相应地造成了公司的产品低效、混乱和供应商锁定等问题。二是目前已有的方案框架并不能很好地适配云架构，即非云原生架构，因此无法有效地对大数据、流计算和物联网等新兴业务需求提供技术支持。OpenMessaging 抛弃历史包袱，轻装上阵，期望能解决这些弊端。除了做到可以链接跨平台、跨语言、跨产品和跨云的标准之外，OpenMessaging 将提供 Cloud Native 的能力，面向云计算、混合云架构，实现多云平台无缝迁移，致力于提供金融、电子商务、IoT 及大数据等领域的一站式解决方案。 发展4年多，至今包含API Spec，OpenConnect，OpenChaos，OpenSchema，DLedger在内的众多流行开源项目。","tech_tag":["Go","Linux","Java","C","Cloud Native","Container","React","AI","C++","Distributed System","Database","Rust","Storage","Docker","IoT"],"domain_tag":["AI","Cloud Native","Big Data","Distributed System"],"mail_list":"openmessaging@googlegroups.com","email":"vongosling@apache.org","project_list":[]},{"userId":626,"anchor":"eventmesh","slide":"","video":"","img":"EventMesh.png","title":"Apache EventMesh(Incubating)社区","project_url":"","url":"https://eventmesh.apache.org","description":"Apache EventMesh(Incubating)社区","full_des":"EventMesh is a dynamic cloud-native eventing infrastruture used to decouple the application and backend middleware layer, which supports a wide range of use cases that encompass complex multi-cloud, widely distributed topologies using diverse technology stacks.","tech_tag":["Java","Cloud Native","Distributed System","Micro Service","EventMesh"],"domain_tag":["Cloud Native","Distributed System","EDA","Event Driven"],"mail_list":"dev@eventmesh.apache.org","email":"dev@eventmesh.apache.org","project_list":[]},{"userId":627,"anchor":"sentinel","slide":"","video":"","img":"Sentinel.png","title":"Sentinel","project_url":"","url":"https://sentinelguard.io","description":"Sentinel 是阿里巴巴开源的，面向云原生、分布式服务架构的高可用防护组件，主要以流量为切入点，从限流、流量整形、熔断降级、系统自适应保护、热点防护等多个维度来帮助开发者保障微服务的稳定性。","full_des":"Sentinel 是阿里巴巴开源的，面向云原生、分布式服务架构的高可用防护组件，主要以流量为切入点，从限流、流量整形、熔断降级、系统自适应保护、热点防护等多个维度来帮助开发者保障微服务的稳定性。Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀、冷启动、消息削峰填谷、集群流量控制、实时熔断下游不可用服务等，是保障微服务高可用的利器，原生支持 Java/Go/C++ 等多种语言，并且提供 Istio/Envoy 全局流控支持来为 Service Mesh 提供高可用防护的能力。 Sentinel: https://github.com/alibaba/Sentinel Sentinel Go: https://github.com/alibaba/sentinel-golang","tech_tag":["Go","Java","Cloud Native","C++","Distributed System","Kubernetes","Micro Service","Reliability"],"domain_tag":["Cloud Native","Distributed System","Reliability"],"mail_list":"","email":"sentinel@linux.alibaba.com","project_list":[]},{"userId":657,"anchor":"kubeedge","slide":"","video":"","img":"kubeedge.png","title":"KubeEdge","project_url":"","url":"kubeedge.io","description":"KubeEdge于2019年3月正式进入CNCF成为沙箱级项目（Sandbox），并于2020年9月晋升为孵化级项目(Incubating)，成为CNCF首个孵化的云原生边缘计算项目。","full_des":"KubeEdge于2019年3月正式进入CNCF成为沙箱级项目（Sandbox），并于2020年9月晋升为孵化级项目(Incubating)，成为CNCF首个孵化的云原生边缘计算项目。其名字来源于Kube + Edge，是一个开源的云原生边缘计算平台，它基于Kubernetes原生的容器编排和调度能力之上，扩展实现了云边协同、计算下沉、海量边缘设备管理、边缘自治等能力，完整的打通了边缘计算中云、边、设备协同的场景。目前已在包括CDN、工业、能源、园区、交通等在内的各个行业迅速发展并生产落地，落地用户包括联通沃云、谐云、时速云、中移在线、瑞斯康达、KubeSphere、兴海物联、精英数智、华为云等组织。","tech_tag":["Go","Container","Kubernetes","Git","Docker","IoT"],"domain_tag":["Cloud Native","Container","Edge Computing"],"mail_list":"","email":"kubeedge@gmail.com","project_list":[{"name":"KubeEdge边云Kube-API通道GA，初步完成性能测试与优化","remark":null,"difficulty":"高","mentor":"王泽锋","contact":"<kevinwzf0126@gmail.com>","uniont":"徐飞<fisherxu1@gmail.com>","student_count":0,"description":"KubeEdge边云Kube-API通道提供边缘端访问云生api的能力，本项目将加强该通道的稳定性，提升性能，并且初步完成性能测试。","label":"210690427","link":"","tech_tag":["Go","Cloud Native","Container","Kubernetes"],"domain_tag":["Cloud Native"],"oR":["Kube-API通道功能补齐","Kube-API通道稳定性增强","Kube-API通道性能提升","Kube-API通道性能测试"],"tR":["Kubernetes","KubeEdge","Container","Golang"],"orgID":657,"spl":1,"organchor":"kubeedge","orgname":"KubeEdge"},{"name":"Mapper添加端到端测试用例","remark":null,"difficulty":"中","mentor":"陈薇","contact":"<challengingway@hotmail.com>","uniont":"王泽锋<kevinwzf0126@gmail.com>","student_count":0,"description":"Mapper作为KubeEdge中设备接入的关键组件，其稳定性非常关键，本项目将为其添加端到端测试用例，保障其稳定性。","label":"210690428","link":"","tech_tag":["Go","Cloud Native","Container","Kubernetes","Docker","IoT","Edge Computing"],"domain_tag":["Cloud Native","Edge Computing"],"oR":["Mapper框架完善","测试用例输出","测试结果正确"],"tR":["Kubernetes","KubeEdge","Container","Golang","MQTT"],"orgID":657,"spl":1,"organchor":"kubeedge","orgname":"KubeEdge"},{"name":"KubeEdge集成主流容器网络CNI插件","remark":null,"difficulty":"中","mentor":"龚哲","contact":"<914617455@qq.com>","uniont":"徐飞<fisherxu1@gmail.com>,王泽锋<kevinwzf0126@gmail.com>","student_count":0,"description":"网络CNI插件作为KubeEdge中核心的网络插件，需要验证、补齐功能，使其在kubeedge中稳定运行，为用户提供网络能力。","label":"210690429","link":"","tech_tag":["Go","Cloud Native","Container","Kubernetes","Docker"],"domain_tag":["Cloud Native","Container"],"oR":["主流存储CSI插件验证","主流网络CNI插件验证","验证过程中，问题补齐","提供测试用例"],"tR":["Kubernetes","KubeEdge","Container","Golang","Network","CNI"],"orgID":657,"spl":1,"organchor":"kubeedge","orgname":"KubeEdge"},{"name":"KubeEdge集成主流存储CSI插件","remark":null,"difficulty":"中","mentor":"徐飞","contact":"<fisherxu1@gmail.com>","uniont":"龚哲<914617455@qq.com>","student_count":0,"description":"存储CSI插件作为KubeEdge中核心的存储，需要验证、补齐功能，使其在kubeedge中稳定运行，为用户提供存储能力。","label":"210690443","link":"","tech_tag":["Go","Cloud Native","Container","Kubernetes","Storage","Docker","Edge Computing"],"domain_tag":["Cloud Native","Container","Edge Computing"],"oR":["主流存储CSI插件验证","测试用例输出","测试结果正确"],"tR":["Kubernetes","KubeEdge","Container","Golang","CSI","Storage"],"orgID":657,"spl":1,"organchor":"kubeedge","orgname":"KubeEdge"}]},{"userId":694,"anchor":"alcbeijing","slide":"","video":"","img":"alcbeijing.png","title":"Apache Local community Beijing","project_url":"","url":"https://alc-beijing.github.io/alc-site/","description":"专注发展Apache开源爱好者的本地群组。","full_des":"ALC Beijing 是依托于 Apache 软件基金会自发组成的中国本土社区。ALC 是 Apache Local Community 的缩写，是全世界范围的 Apache 开源爱好者本地群组。ALC Beijing致力于Apache Way以及开源之道的新媒体宣传与社区建设，旨在帮助中国的开源爱好者了解开源，更好地在 Apache 社区生根发芽。","tech_tag":["Java","JavaScript","NodeJS","TypeScript","Micro Service","Git"],"domain_tag":["Big Data","Distributed System","Apache软件基金会"],"mail_list":"alc-beijing@googlegroups.com","email":"alc-beijing@googlegroups.com","project_list":[]},{"userId":251,"anchor":"opendigger","slide":"","video":"","img":"OpenDigger.png","title":"OpenDigger","project_url":"","url":"https://github.com/X-lab2017/open-digger","description":"OpenDigger 旨在为开源项目提供开源数据分析的服务，帮助开源工作者们更好地了解自己的项目和社区开发者。","full_des":"我们不仅提供 GitHub 行为数据的分析，还提供其他开放数源的服务，例如 StackOverflow。","tech_tag":["Database","Automation","Storage","Git","SQL"],"domain_tag":["Big Data","开源治理","data-analysis"],"mail_list":"frank_zsy@tongji.edu.cn weng_zhen_jie@163.com","email":"frank_zsy@tongji.edu.cn","project_list":[]},{"userId":714,"anchor":"lcui","slide":"","video":"","img":"LCUI.png","title":"LCUI","project_url":"","url":"lcui.lc-soft.io","description":"一个跨平台的图形用户界面开发库。","full_des":"LCUI 是一个采用 C 语言编写的用于构建图形用户界面的函数库，其定位是探索和实践新的用户界面开发方式，以体积小、易于使用、提供便捷的开发工具为特点，帮助 C 开发者快速开发带有图形用户界面的应用程序。","tech_tag":["C","JavaScript","NodeJS","C++"],"domain_tag":["Programming Language","GUI 开发"],"mail_list":"lc-soft@live.cn","email":"root@lc-soft.io","project_list":[]},{"userId":718,"anchor":"dragonfly","slide":"","video":"","img":"Dragonfly.png","title":"Dragonfly","project_url":"","url":"https://d7y.io/en-us/","description":"致力于研发一款提供企业级（高效、稳定、安全、低成本、产品化）的文件分发与管理服务，并成为在该领域的云原生最佳实践与标准解决方案的产品","full_des":"Dragonfly 是一款基于 P2P 的智能镜像和文件分发工具。它旨在提高文件传输的效率和速率，最大限度地利用网络带宽，尤其是在分发大量数据时，例如应用分发、缓存分发、日志分发和镜像分发。在阿里巴巴，Dragonfly 每个月会被调用 20 亿次，分发的数据量高达 3.4PB。Dragonfly 已成为阿里巴巴基础设施中的重要一环。尽管容器技术大部分时候简化了运维工作，但是它也带来了一些挑战：例如镜像分发的效率问题，尤其是必须在多个主机上复制镜像分发时。Dragonfly 在这种场景下能够完美支持 Docker 和 PouchContainer。它也兼容其他格式的容器。相比原生方式，它能将容器分发速度提高 57 倍，并让 Registry 网络出口流量降低 99.5%。Dragonfly 能让所有类型的文件、镜像或数据分发变得简单而经济。","tech_tag":["Go","Linux","Cloud Native","Container","Kubernetes","Storage","Git","Docker"],"domain_tag":["Cloud Native","Container"],"mail_list":"garfieldhu@aliyun.com  sunwp244372610@163.com  ansinlee@qq.com  majinjing3@gmail.com  gaius.qi@gmail.com","email":"weipeng.swp@alibaba-inc.com","project_list":[]},{"userId":717,"anchor":"rocketmq","slide":"","video":"","img":"ApacheRocketMQ.png","title":"Apache RocketMQ 社区","project_url":"","url":"https://rocketmq.apache.org/","description":"Apache RocketMQ 是一款由阿里巴巴开源的低延迟、高并发、高可靠，可支撑万亿级数据洪峰的云原生分布式消息平台，也是国内非 Hadoop 体系的第一个 Apache 顶级开源项目。作为业务消息领域和微服务领域的首选，Apache RocketMQ 逐渐成为企业 IT 架构的核心基础设施，目前包括阿里巴巴，今日头条、滴滴、快手、蚂蚁金服、中国民生银行、微众银行、平安银行等大中型互联网、金融企业都在使用 RocketMQ。","full_des":"Apache RocketMQ 作为云原生消息平台，主要解决应用异步解耦、削峰填谷等问题，帮助企业实现高性能、高可用、可伸缩和最终一致性架构，此外，RocketMQ 提供了延时消息、顺序消息、事务消息、消息过滤等丰富的消息类型，便于开发者实现业务需求。 Apache RocketMQ 生态丰富，不仅完成了 ServiceMesh、Serverless、Operator、Promethus 等一系列云原生热点技术的整合，同时提供了丰富的 connector 用于异构数据传输，此外与大数据产品包括 Flink，spark 在内的多款产品做了完整集成。","tech_tag":["Go","Java","Cloud Native","C++","Kubernetes","Micro Service","Storage","IoT"],"domain_tag":["Cloud Native","Big Data","Distributed System","Messaging"],"mail_list":"dev@rocketmq.apache.org","email":"dev@rocketmq.apache.org","project_list":[]},{"userId":743,"anchor":"serverlessdevs","slide":"","video":"","img":"SeverlessDevs.png","title":"Serverless Devs","project_url":"","url":"www.serverless-devs.com","description":"Serverless Devs是一个由阿里巴巴发起的Serverless领域的开源项目，其目的是要和开发者们一起贡献一款开源开放无厂商锁定的Serverless开发者工具，希望这个工具可以在开发者开发Serverless应用的全生命周期发挥作用，希望开发者们可以像使用手机一样玩转Serverless","full_des":"Serverless是近年来云计算领域热门话题，其凭借着极致弹性、按量付费、降本提效等众多优势获得到了很多人的追捧，各云厂商也在不断的布局Serverless领域。但是随着时间的发展，Serverless领域也暴露出来了一些比较严重的，例如厂商锁定严重，没有合适的开发者工具，程序难以调试......为此，Serverless Devs应运而生，以解决开发者在开发Serverless应用中最根本的诉求为己任，以开源开放的形式为态度，以推动Serverless领域不断前行为目标，Serverless Devs由阿里巴巴诞生，不拘泥于阿里云，放眼云计算，愿开放怀抱与更多Serverlessor一起，玩转Serverless架构。Serverless Devs是一个由阿里巴巴发起的Serverless领域的开源项目，其目的是要和开发者们一起贡献一款开源开放无厂商锁定的Serverless开发者工具，希望这个工具可以在开发者开发Serverless应用的全生命周期发挥作用，希望开发者们可以像使用手机一样玩转Serverless。","tech_tag":["Go","JavaScript","Container","PHP","NodeJS","React","Kubernetes","TypeScript","serverless"],"domain_tag":["Cloud Native","Programming Language"],"mail_list":"service@52exe.cn  21751125@zju.edu.cn  service@anycodes.cn","email":"service@serverlessfans.com","project_list":[]},{"userId":746,"anchor":"arthas","slide":"","video":"","img":"Arthas.png","title":"Arthas","project_url":"","url":"https://arthas.aliyun.com/","description":"Arthas 是Alibaba开源的Java诊断工具，深受开发者喜爱。","full_des":"随着微服务的流行，应用更加轻量和开发效率不断提升，但是带来的困境是线上问题排查越来越复杂困难。传统的Java排查问题，需要重启应用再进行调试，但是重启应用之后现场会丢失，问题难以复现。 因此自2018年9月，阿里巴巴开源了久经考验，深受开发者喜爱的应用诊断利器Arthas。在阿里巴巴内部Arthas每年诊断数百万次，服务10000+应用，总共节约9000人日。 Arthas通过创新的字节码织入技术，可以在应用无需重启时，查看调用上下文，高效排查问题；结合火焰图，可以直接定位热点，发现性能瓶颈；通过redefine技术，实现在线热更新代码；同时支持黑屏化和白屏化诊断，可以连接诊断大规模的集群。 目前Arthas在 GitHub 上星标数达到 26000+，多次登顶github趋势榜首，并收到150+公司的登记支持，连续获得开源中国GVP和最受欢迎软件奖，是目前最流行的Java应用诊断工具。","tech_tag":["Java"],"domain_tag":["Dev Tools"],"mail_list":"hengyunabc@gmail.com","email":"","project_list":[]},{"userId":654,"anchor":"openkruise","slide":"","video":"","img":"OpenKruise.png","title":"OpenKruise","project_url":"","url":"https://github.com/openkruise/kruise","description":"OpenKruise 是阿里云开源的应用自动化扩展套件，也是当前 CNCF 托管的 Sandbox 项目。它在完全兼容标准的 Kubernetes 之上，围绕云原生应用场景提供多种丰富的自动化能力。","full_des":"OpenKruise 是阿里云开源的应用自动化扩展套件，也是当前 CNCF 托管的 Sandbox 项目。它在完全兼容标准的 Kubernetes 之上，围绕云原生应用场景提供多种丰富的自动化能力。 它来自于阿里巴巴多年来容器化、云原生的技术沉淀，是阿里内部生产环境大规模应用的基于 Kubernetes 之上的标准扩展，是阿里巴巴经济体上云的部署基座，这也是紧贴上游社区标准、适应互联网规模化场景的技术理念与最佳实践。 目前 OpenKruise 在 Github 上已经有 2300+ star， 50+ 贡献者，已登记生产使用的用户除了阿里、蚂蚁之外，还有来自国内外的携程、苏宁、OPPO、有赞、斗鱼TV、申通、小红书、Lyft、Spectro Cloud 等 25+ 企业。","tech_tag":["Go","Cloud Native","Container","Kubernetes","Automation","Docker"],"domain_tag":["Cloud Native","Container"],"mail_list":"FillZpp.pub@gmail.com furykerry@gmail.com","email":"FillZpp.pub@gmail.com","project_list":[]},{"userId":745,"anchor":"apachedubbo","slide":"","video":"","img":"ApacheDubbo.png","title":"Apache Dubbo","orgTypeDesc":"开源社区","orgType":1,"project_url":"","url":"https://dubbo.apache.org/","description":"Apache Dubbo 是一款高性能、轻量级的开源 Java 服务框架。","full_des":"Apache Dubbo 提供了六大核心能力：面向接口代理的高性能RPC调用，智能容错和负载均衡，服务自动注册和发现，高度可扩展能力，运行期流量调度，可视化的服务治理与运维。","tech_tag":["Java","Distributed System","Micro Service"],"domain_tag":["Cloud Native","Distributed System"],"mail_list":"dev@dubbo.apache.org","email":"dev@dubbo.apache.org","project_list":[]}]